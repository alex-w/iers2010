#include "iers2010.hpp"
#include <cassert>

//
// Test program for the function dehanttideinel
// To produce a new list of test cases, run the program makecc_test_cases.out
// found in fortran_impl/dehanttideinel (see readme there)
//

#define PRECISION 1e-12
int main() {
  dso::datetime<dso::nanoseconds> t;
  Eigen::Matrix<double,3,1> xsun, xmon;
  std::vector<Eigen::Matrix<double,3,1>> xcorvec;

  /* copy output of FORTRAN program here */
   std::vector<Eigen::Matrix<double,3,1>> xstavec;
 xstavec.push_back(Eigen::Matrix<double,3,1>(   1201300.0460,    251874.4350,   6238000.3240));
 xstavec.push_back(Eigen::Matrix<double,3,1>(   2679718.4730,   -727978.2730,   5722772.1630));
 xstavec.push_back(Eigen::Matrix<double,3,1>(  -5543981.3530,  -2054584.1460,   2387480.9740));
 xstavec.push_back(Eigen::Matrix<double,3,1>(  -6178323.9000,   -202689.6170,  -1566023.0460));
 xstavec.push_back(Eigen::Matrix<double,3,1>(   1106046.6270,   -763739.0100,  -6214243.1950));
 xstavec.push_back(Eigen::Matrix<double,3,1>(  -1940878.5150,   1628473.0410,  -5833723.4130));
 xstavec.push_back(Eigen::Matrix<double,3,1>(  -5743533.4790,   1380501.9220,  -2397907.6230));
 xstavec.push_back(Eigen::Matrix<double,3,1>(   6121154.0810,  -1563976.7230,   -872606.0190));
 xstavec.push_back(Eigen::Matrix<double,3,1>(   3597847.7920,   5240876.3630,   -516790.7970));
 xstavec.push_back(Eigen::Matrix<double,3,1>(   4595212.4680,   2039473.6910,   3912617.8910));
                // Test case #  1
 t=dso::datetime<dso::nanoseconds>(
dso::year(2002 ), dso::month( 9    ), dso::day_of_month( 6 ),dso::nanoseconds( 59552     *1000000000L));
  xsun = Eigen::Matrix<double,3,1>(  0.1378599117580817565918E+12,  0.5422816196725114440918E+11,  0.2350945806476232910156E+11 );
  xmon = Eigen::Matrix<double,3,1>( -0.1799472464211983978748E+09, -0.3125177262629585266113E+09, -0.1693235605673243999481E+09 );
 iers2010::dehanttideinel(t,xsun,xmon,xstavec,xcorvec);
 assert(std::abs(xcorvec[0](0)-( 0.019002798682      ))<PRECISION);
 assert(std::abs(xcorvec[0](1)-( 0.036933482869      ))<PRECISION);
 assert(std::abs(xcorvec[0](2)-(-0.048784227639      ))<PRECISION);
 assert(std::abs(xcorvec[1](0)-( 0.006899634418      ))<PRECISION);
 assert(std::abs(xcorvec[1](1)-( 0.046471385453      ))<PRECISION);
 assert(std::abs(xcorvec[1](2)-(-0.041980362953      ))<PRECISION);
 assert(std::abs(xcorvec[2](0)-(-0.027636513742      ))<PRECISION);
 assert(std::abs(xcorvec[2](1)-(-0.035968101217      ))<PRECISION);
 assert(std::abs(xcorvec[2](2)-(-0.031876952069      ))<PRECISION);
 assert(std::abs(xcorvec[3](0)-(-0.074214937841      ))<PRECISION);
 assert(std::abs(xcorvec[3](1)-(-0.050981065334      ))<PRECISION);
 assert(std::abs(xcorvec[3](2)-(-0.029550993782      ))<PRECISION);
 assert(std::abs(xcorvec[4](0)-(-0.036002090988      ))<PRECISION);
 assert(std::abs(xcorvec[4](1)-(-0.015141455220      ))<PRECISION);
 assert(std::abs(xcorvec[4](2)-( 0.091028083417      ))<PRECISION);
 assert(std::abs(xcorvec[5](0)-( 0.010922829893      ))<PRECISION);
 assert(std::abs(xcorvec[5](1)-(-0.055319835196      ))<PRECISION);
 assert(std::abs(xcorvec[5](2)-( 0.091205204346      ))<PRECISION);
 assert(std::abs(xcorvec[6](0)-(-0.007665060744      ))<PRECISION);
 assert(std::abs(xcorvec[6](1)-(-0.046295682256      ))<PRECISION);
 assert(std::abs(xcorvec[6](2)-(-0.002990270318      ))<PRECISION);
 assert(std::abs(xcorvec[7](0)-(-0.038274131605      ))<PRECISION);
 assert(std::abs(xcorvec[7](1)-( 0.042365346094      ))<PRECISION);
 assert(std::abs(xcorvec[7](2)-( 0.021287147066      ))<PRECISION);
 assert(std::abs(xcorvec[8](0)-( 0.106346990204      ))<PRECISION);
 assert(std::abs(xcorvec[8](1)-( 0.131817400242      ))<PRECISION);
 assert(std::abs(xcorvec[8](2)-( 0.028206115839      ))<PRECISION);
 assert(std::abs(xcorvec[9](0)-( 0.131290718147      ))<PRECISION);
 assert(std::abs(xcorvec[9](1)-( 0.096922890598      ))<PRECISION);
 assert(std::abs(xcorvec[9](2)-( 0.090979015322      ))<PRECISION);
 printf("Test case #  0    passed\n");
                // Test case #  2
 t=dso::datetime<dso::nanoseconds>(
dso::year(2007 ), dso::month(10    ), dso::day_of_month(25 ),dso::nanoseconds( 42902     *1000000000L));
  xsun = Eigen::Matrix<double,3,1>(  0.1378598812116788330078E+12,  0.5422821133857711791992E+11,  0.2350944875529167556763E+11 );
  xmon = Eigen::Matrix<double,3,1>( -0.1799185718902154266834E+09, -0.3125069632913188934326E+09, -0.1693459084109714031219E+09 );
 iers2010::dehanttideinel(t,xsun,xmon,xstavec,xcorvec);
 assert(std::abs(xcorvec[0](0)-( 0.019137832412      ))<PRECISION);
 assert(std::abs(xcorvec[0](1)-( 0.036904481780      ))<PRECISION);
 assert(std::abs(xcorvec[0](2)-(-0.048289355401      ))<PRECISION);
 assert(std::abs(xcorvec[1](0)-( 0.007298684872      ))<PRECISION);
 assert(std::abs(xcorvec[1](1)-( 0.046333948721      ))<PRECISION);
 assert(std::abs(xcorvec[1](2)-(-0.041138459366      ))<PRECISION);
 assert(std::abs(xcorvec[2](0)-(-0.026957727602      ))<PRECISION);
 assert(std::abs(xcorvec[2](1)-(-0.035743159254      ))<PRECISION);
 assert(std::abs(xcorvec[2](2)-(-0.032165258033      ))<PRECISION);
 assert(std::abs(xcorvec[3](0)-(-0.074674158978      ))<PRECISION);
 assert(std::abs(xcorvec[3](1)-(-0.050983176997      ))<PRECISION);
 assert(std::abs(xcorvec[3](2)-(-0.029737418785      ))<PRECISION);
 assert(std::abs(xcorvec[4](0)-(-0.036119735806      ))<PRECISION);
 assert(std::abs(xcorvec[4](1)-(-0.015054740762      ))<PRECISION);
 assert(std::abs(xcorvec[4](2)-( 0.091312445710      ))<PRECISION);
 assert(std::abs(xcorvec[5](0)-( 0.010682863375      ))<PRECISION);
 assert(std::abs(xcorvec[5](1)-(-0.055118301727      ))<PRECISION);
 assert(std::abs(xcorvec[5](2)-( 0.090541732384      ))<PRECISION);
 assert(std::abs(xcorvec[6](0)-(-0.008305492677      ))<PRECISION);
 assert(std::abs(xcorvec[6](1)-(-0.046126826293      ))<PRECISION);
 assert(std::abs(xcorvec[6](2)-(-0.003340017067      ))<PRECISION);
 assert(std::abs(xcorvec[7](0)-(-0.038608835712      ))<PRECISION);
 assert(std::abs(xcorvec[7](1)-( 0.042452395034      ))<PRECISION);
 assert(std::abs(xcorvec[7](2)-( 0.021389590750      ))<PRECISION);
 assert(std::abs(xcorvec[8](0)-( 0.106256628135      ))<PRECISION);
 assert(std::abs(xcorvec[8](1)-( 0.131702764842      ))<PRECISION);
 assert(std::abs(xcorvec[8](2)-( 0.028206115775      ))<PRECISION);
 assert(std::abs(xcorvec[9](0)-( 0.131996207891      ))<PRECISION);
 assert(std::abs(xcorvec[9](1)-( 0.097193217074      ))<PRECISION);
 assert(std::abs(xcorvec[9](2)-( 0.091624976952      ))<PRECISION);
 printf("Test case #  1    passed\n");
                // Test case #  3
 t=dso::datetime<dso::nanoseconds>(
dso::year(2034 ), dso::month( 3    ), dso::day_of_month(11 ),dso::nanoseconds( 48606     *1000000000L));
  xsun = Eigen::Matrix<double,3,1>(  0.1378598934512124938965E+12,  0.5422823479690894317627E+11,  0.2350946523923632812500E+11 );
  xmon = Eigen::Matrix<double,3,1>( -0.1799155429311795532703E+09, -0.3125030810739116668701E+09, -0.1693927112297465801239E+09 );
 iers2010::dehanttideinel(t,xsun,xmon,xstavec,xcorvec);
 assert(std::abs(xcorvec[0](0)-( 0.018686617602      ))<PRECISION);
 assert(std::abs(xcorvec[0](1)-( 0.037692039835      ))<PRECISION);
 assert(std::abs(xcorvec[0](2)-(-0.053495845220      ))<PRECISION);
 assert(std::abs(xcorvec[1](0)-( 0.006372310075      ))<PRECISION);
 assert(std::abs(xcorvec[1](1)-( 0.047629592757      ))<PRECISION);
 assert(std::abs(xcorvec[1](2)-(-0.044267919500      ))<PRECISION);
 assert(std::abs(xcorvec[2](0)-(-0.036376507675      ))<PRECISION);
 assert(std::abs(xcorvec[2](1)-(-0.038922037331      ))<PRECISION);
 assert(std::abs(xcorvec[2](2)-(-0.028910777853      ))<PRECISION);
 assert(std::abs(xcorvec[3](0)-(-0.070281349628      ))<PRECISION);
 assert(std::abs(xcorvec[3](1)-(-0.051077349390      ))<PRECISION);
 assert(std::abs(xcorvec[3](2)-(-0.029089798032      ))<PRECISION);
 assert(std::abs(xcorvec[4](0)-(-0.036900685650      ))<PRECISION);
 assert(std::abs(xcorvec[4](1)-(-0.015873933544      ))<PRECISION);
 assert(std::abs(xcorvec[4](2)-( 0.092927756407      ))<PRECISION);
 assert(std::abs(xcorvec[5](0)-( 0.009071694796      ))<PRECISION);
 assert(std::abs(xcorvec[5](1)-(-0.055116969593      ))<PRECISION);
 assert(std::abs(xcorvec[5](2)-( 0.087519073879      ))<PRECISION);
 assert(std::abs(xcorvec[6](0)-(-0.005656009018      ))<PRECISION);
 assert(std::abs(xcorvec[6](1)-(-0.047190530132      ))<PRECISION);
 assert(std::abs(xcorvec[6](2)-(-0.002326994959      ))<PRECISION);
 assert(std::abs(xcorvec[7](0)-(-0.037308228993      ))<PRECISION);
 assert(std::abs(xcorvec[7](1)-( 0.041958257016      ))<PRECISION);
 assert(std::abs(xcorvec[7](2)-( 0.021499978194      ))<PRECISION);
 assert(std::abs(xcorvec[8](0)-( 0.108262223548      ))<PRECISION);
 assert(std::abs(xcorvec[8](1)-( 0.134604310035      ))<PRECISION);
 assert(std::abs(xcorvec[8](2)-( 0.029070999622      ))<PRECISION);
 assert(std::abs(xcorvec[9](0)-( 0.120749110625      ))<PRECISION);
 assert(std::abs(xcorvec[9](1)-( 0.092670270057      ))<PRECISION);
 assert(std::abs(xcorvec[9](2)-( 0.082334424151      ))<PRECISION);
 printf("Test case #  2    passed\n");
                // Test case #  4
 t=dso::datetime<dso::nanoseconds>(
dso::year(2029 ), dso::month( 4    ), dso::day_of_month( 2 ),dso::nanoseconds( 59698     *1000000000L));
  xsun = Eigen::Matrix<double,3,1>(  0.1378598950343476257324E+12,  0.5422821307187422943115E+11,  0.2350950432285425567627E+11 );
  xmon = Eigen::Matrix<double,3,1>( -0.1798656091280980408192E+09, -0.3124631190384941101074E+09, -0.1694164175347735881805E+09 );
 iers2010::dehanttideinel(t,xsun,xmon,xstavec,xcorvec);
 assert(std::abs(xcorvec[0](0)-( 0.018524585288      ))<PRECISION);
 assert(std::abs(xcorvec[0](1)-( 0.037081128023      ))<PRECISION);
 assert(std::abs(xcorvec[0](2)-(-0.056513894025      ))<PRECISION);
 assert(std::abs(xcorvec[1](0)-( 0.002416574063      ))<PRECISION);
 assert(std::abs(xcorvec[1](1)-( 0.048390531907      ))<PRECISION);
 assert(std::abs(xcorvec[1](2)-(-0.053135821470      ))<PRECISION);
 assert(std::abs(xcorvec[2](0)-(-0.040535565687      ))<PRECISION);
 assert(std::abs(xcorvec[2](1)-(-0.040722234416      ))<PRECISION);
 assert(std::abs(xcorvec[2](2)-(-0.027204392176      ))<PRECISION);
 assert(std::abs(xcorvec[3](0)-(-0.065161062850      ))<PRECISION);
 assert(std::abs(xcorvec[3](1)-(-0.050790737309      ))<PRECISION);
 assert(std::abs(xcorvec[3](2)-(-0.028305089686      ))<PRECISION);
 assert(std::abs(xcorvec[4](0)-(-0.036345925447      ))<PRECISION);
 assert(std::abs(xcorvec[4](1)-(-0.016122899847      ))<PRECISION);
 assert(std::abs(xcorvec[4](2)-( 0.086906403965      ))<PRECISION);
 assert(std::abs(xcorvec[5](0)-( 0.011854634262      ))<PRECISION);
 assert(std::abs(xcorvec[5](1)-(-0.057389276808      ))<PRECISION);
 assert(std::abs(xcorvec[5](2)-( 0.096704037295      ))<PRECISION);
 assert(std::abs(xcorvec[6](0)-( 0.002542005533      ))<PRECISION);
 assert(std::abs(xcorvec[6](1)-(-0.049024115580      ))<PRECISION);
 assert(std::abs(xcorvec[6](2)-( 0.000503402460      ))<PRECISION);
 assert(std::abs(xcorvec[7](0)-(-0.034126499886      ))<PRECISION);
 assert(std::abs(xcorvec[7](1)-( 0.041194238661      ))<PRECISION);
 assert(std::abs(xcorvec[7](2)-( 0.021593991908      ))<PRECISION);
 assert(std::abs(xcorvec[8](0)-( 0.108033497306      ))<PRECISION);
 assert(std::abs(xcorvec[8](1)-( 0.134379110451      ))<PRECISION);
 assert(std::abs(xcorvec[8](2)-( 0.028957839530      ))<PRECISION);
 assert(std::abs(xcorvec[9](0)-( 0.116357489140      ))<PRECISION);
 assert(std::abs(xcorvec[9](1)-( 0.090294231190      ))<PRECISION);
 assert(std::abs(xcorvec[9](2)-( 0.078725164086      ))<PRECISION);
 printf("Test case #  3    passed\n");
                // Test case #  5
 t=dso::datetime<dso::nanoseconds>(
dso::year(2005 ), dso::month( 8    ), dso::day_of_month( 6 ),dso::nanoseconds( 15336     *1000000000L));
  xsun = Eigen::Matrix<double,3,1>(  0.1378599216286288146973E+12,  0.5422821678524359893799E+11,  0.2350950390772578430176E+11 );
  xmon = Eigen::Matrix<double,3,1>( -0.1798491702385945618153E+09, -0.3124526791419105529785E+09, -0.1693855961160113811493E+09 );
 iers2010::dehanttideinel(t,xsun,xmon,xstavec,xcorvec);
 assert(std::abs(xcorvec[0](0)-( 0.018696265709      ))<PRECISION);
 assert(std::abs(xcorvec[0](1)-( 0.037982743737      ))<PRECISION);
 assert(std::abs(xcorvec[0](2)-(-0.053019908691      ))<PRECISION);
 assert(std::abs(xcorvec[1](0)-( 0.006548184934      ))<PRECISION);
 assert(std::abs(xcorvec[1](1)-( 0.047912392629      ))<PRECISION);
 assert(std::abs(xcorvec[1](2)-(-0.043077612315      ))<PRECISION);
 assert(std::abs(xcorvec[2](0)-(-0.037474920841      ))<PRECISION);
 assert(std::abs(xcorvec[2](1)-(-0.039246558846      ))<PRECISION);
 assert(std::abs(xcorvec[2](2)-(-0.028203235829      ))<PRECISION);
 assert(std::abs(xcorvec[3](0)-(-0.069142179524      ))<PRECISION);
 assert(std::abs(xcorvec[3](1)-(-0.051129517854      ))<PRECISION);
 assert(std::abs(xcorvec[3](2)-(-0.029248344880      ))<PRECISION);
 assert(std::abs(xcorvec[4](0)-(-0.037187781344      ))<PRECISION);
 assert(std::abs(xcorvec[4](1)-(-0.016099899631      ))<PRECISION);
 assert(std::abs(xcorvec[4](2)-( 0.092487234572      ))<PRECISION);
 assert(std::abs(xcorvec[5](0)-( 0.008441191384      ))<PRECISION);
 assert(std::abs(xcorvec[5](1)-(-0.054998951594      ))<PRECISION);
 assert(std::abs(xcorvec[5](2)-( 0.084976565271      ))<PRECISION);
 assert(std::abs(xcorvec[6](0)-(-0.005245707313      ))<PRECISION);
 assert(std::abs(xcorvec[6](1)-(-0.047428244439      ))<PRECISION);
 assert(std::abs(xcorvec[6](2)-(-0.002655546981      ))<PRECISION);
 assert(std::abs(xcorvec[7](0)-(-0.038012945515      ))<PRECISION);
 assert(std::abs(xcorvec[7](1)-( 0.042091891925      ))<PRECISION);
 assert(std::abs(xcorvec[7](2)-( 0.021502728406      ))<PRECISION);
 assert(std::abs(xcorvec[8](0)-( 0.108344632160      ))<PRECISION);
 assert(std::abs(xcorvec[8](1)-( 0.134731692984      ))<PRECISION);
 assert(std::abs(xcorvec[8](2)-( 0.029314858855      ))<PRECISION);
 assert(std::abs(xcorvec[9](0)-( 0.118505320827      ))<PRECISION);
 assert(std::abs(xcorvec[9](1)-( 0.091845509428      ))<PRECISION);
 assert(std::abs(xcorvec[9](2)-( 0.081294608489      ))<PRECISION);
 printf("Test case #  4    passed\n");
                // Test case #  6
 t=dso::datetime<dso::nanoseconds>(
dso::year(2013 ), dso::month( 4    ), dso::day_of_month( 9 ),dso::nanoseconds( 16655     *1000000000L));
  xsun = Eigen::Matrix<double,3,1>(  0.1378599481963084716797E+12,  0.5422822593639835357666E+11,  0.2350954644765016937256E+11 );
  xmon = Eigen::Matrix<double,3,1>( -0.1798663342126412689686E+09, -0.3124316303695755004883E+09, -0.1693978009776523113251E+09 );
 iers2010::dehanttideinel(t,xsun,xmon,xstavec,xcorvec);
 assert(std::abs(xcorvec[0](0)-( 0.019009006860      ))<PRECISION);
 assert(std::abs(xcorvec[0](1)-( 0.037482556938      ))<PRECISION);
 assert(std::abs(xcorvec[0](2)-(-0.049004610782      ))<PRECISION);
 assert(std::abs(xcorvec[1](0)-( 0.008634359468      ))<PRECISION);
 assert(std::abs(xcorvec[1](1)-( 0.046486761953      ))<PRECISION);
 assert(std::abs(xcorvec[1](2)-(-0.038684252658      ))<PRECISION);
 assert(std::abs(xcorvec[2](0)-(-0.028389714618      ))<PRECISION);
 assert(std::abs(xcorvec[2](1)-(-0.036046842036      ))<PRECISION);
 assert(std::abs(xcorvec[2](2)-(-0.031871888111      ))<PRECISION);
 assert(std::abs(xcorvec[3](0)-(-0.075507183671      ))<PRECISION);
 assert(std::abs(xcorvec[3](1)-(-0.051164247993      ))<PRECISION);
 assert(std::abs(xcorvec[3](2)-(-0.029758751494      ))<PRECISION);
 assert(std::abs(xcorvec[4](0)-(-0.036554845954      ))<PRECISION);
 assert(std::abs(xcorvec[4](1)-(-0.015277453975      ))<PRECISION);
 assert(std::abs(xcorvec[4](2)-( 0.094663763996      ))<PRECISION);
 assert(std::abs(xcorvec[5](0)-( 0.009024834201      ))<PRECISION);
 assert(std::abs(xcorvec[5](1)-(-0.054202692370      ))<PRECISION);
 assert(std::abs(xcorvec[5](2)-( 0.085961004418      ))<PRECISION);
 assert(std::abs(xcorvec[6](0)-(-0.010975974440      ))<PRECISION);
 assert(std::abs(xcorvec[6](1)-(-0.045704049249      ))<PRECISION);
 assert(std::abs(xcorvec[6](2)-(-0.004064760033      ))<PRECISION);
 assert(std::abs(xcorvec[7](0)-(-0.039429038492      ))<PRECISION);
 assert(std::abs(xcorvec[7](1)-( 0.042586828747      ))<PRECISION);
 assert(std::abs(xcorvec[7](2)-( 0.021346630287      ))<PRECISION);
 assert(std::abs(xcorvec[8](0)-( 0.107117858620      ))<PRECISION);
 assert(std::abs(xcorvec[8](1)-( 0.132903416755      ))<PRECISION);
 assert(std::abs(xcorvec[8](2)-( 0.028565134230      ))<PRECISION);
 assert(std::abs(xcorvec[9](0)-( 0.130232458664      ))<PRECISION);
 assert(std::abs(xcorvec[9](1)-( 0.096808222790      ))<PRECISION);
 assert(std::abs(xcorvec[9](2)-( 0.089975804283      ))<PRECISION);
 printf("Test case #  5    passed\n");
                // Test case #  7
 t=dso::datetime<dso::nanoseconds>(
dso::year(2031 ), dso::month(12    ), dso::day_of_month( 7 ),dso::nanoseconds( 44527     *1000000000L));
  xsun = Eigen::Matrix<double,3,1>(  0.1378599839484678344727E+12,  0.5422827514338240051270E+11,  0.2350952723675725555420E+11 );
  xmon = Eigen::Matrix<double,3,1>( -0.1798918402024312317371E+09, -0.3124559093262271881104E+09, -0.1694353146092345714569E+09 );
 iers2010::dehanttideinel(t,xsun,xmon,xstavec,xcorvec);
 assert(std::abs(xcorvec[0](0)-( 0.019019318291      ))<PRECISION);
 assert(std::abs(xcorvec[0](1)-( 0.037513982003      ))<PRECISION);
 assert(std::abs(xcorvec[0](2)-(-0.047724138477      ))<PRECISION);
 assert(std::abs(xcorvec[1](0)-( 0.009060000881      ))<PRECISION);
 assert(std::abs(xcorvec[1](1)-( 0.046345866401      ))<PRECISION);
 assert(std::abs(xcorvec[1](2)-(-0.037018175155      ))<PRECISION);
 assert(std::abs(xcorvec[2](0)-(-0.027045196494      ))<PRECISION);
 assert(std::abs(xcorvec[2](1)-(-0.035515745162      ))<PRECISION);
 assert(std::abs(xcorvec[2](2)-(-0.032125093188      ))<PRECISION);
 assert(std::abs(xcorvec[3](0)-(-0.076106687714      ))<PRECISION);
 assert(std::abs(xcorvec[3](1)-(-0.051175993214      ))<PRECISION);
 assert(std::abs(xcorvec[3](2)-(-0.029959750334      ))<PRECISION);
 assert(std::abs(xcorvec[4](0)-(-0.036539361047      ))<PRECISION);
 assert(std::abs(xcorvec[4](1)-(-0.015212618089      ))<PRECISION);
 assert(std::abs(xcorvec[4](2)-( 0.094595805739      ))<PRECISION);
 assert(std::abs(xcorvec[5](0)-( 0.008893164381      ))<PRECISION);
 assert(std::abs(xcorvec[5](1)-(-0.054009374482      ))<PRECISION);
 assert(std::abs(xcorvec[5](2)-( 0.084688706826      ))<PRECISION);
 assert(std::abs(xcorvec[6](0)-(-0.011820886175      ))<PRECISION);
 assert(std::abs(xcorvec[6](1)-(-0.045487550688      ))<PRECISION);
 assert(std::abs(xcorvec[6](2)-(-0.004567379562      ))<PRECISION);
 assert(std::abs(xcorvec[7](0)-(-0.040106758435      ))<PRECISION);
 assert(std::abs(xcorvec[7](1)-( 0.042757824856      ))<PRECISION);
 assert(std::abs(xcorvec[7](2)-( 0.021240205169      ))<PRECISION);
 assert(std::abs(xcorvec[8](0)-( 0.106807010840      ))<PRECISION);
 assert(std::abs(xcorvec[8](1)-( 0.132428740051      ))<PRECISION);
 assert(std::abs(xcorvec[8](2)-( 0.028495713785      ))<PRECISION);
 assert(std::abs(xcorvec[9](0)-( 0.131340520418      ))<PRECISION);
 assert(std::abs(xcorvec[9](1)-( 0.097325940815      ))<PRECISION);
 assert(std::abs(xcorvec[9](2)-( 0.091296243386      ))<PRECISION);
 printf("Test case #  6    passed\n");
                // Test case #  8
 t=dso::datetime<dso::nanoseconds>(
dso::year(2014 ), dso::month( 5    ), dso::day_of_month( 7 ),dso::nanoseconds( 81796     *1000000000L));
  xsun = Eigen::Matrix<double,3,1>(  0.1378599974876509704590E+12,  0.5422829540245875549316E+11,  0.2350954847692010498047E+11 );
  xmon = Eigen::Matrix<double,3,1>( -0.1799031549819512665272E+09, -0.3124999822701530456543E+09, -0.1694604469613482952118E+09 );
 iers2010::dehanttideinel(t,xsun,xmon,xstavec,xcorvec);
 assert(std::abs(xcorvec[0](0)-( 0.019001414478      ))<PRECISION);
 assert(std::abs(xcorvec[0](1)-( 0.036892698908      ))<PRECISION);
 assert(std::abs(xcorvec[0](2)-(-0.049494189007      ))<PRECISION);
 assert(std::abs(xcorvec[1](0)-( 0.006412152161      ))<PRECISION);
 assert(std::abs(xcorvec[1](1)-( 0.046624697739      ))<PRECISION);
 assert(std::abs(xcorvec[1](2)-(-0.043251044188      ))<PRECISION);
 assert(std::abs(xcorvec[2](0)-(-0.028582415262      ))<PRECISION);
 assert(std::abs(xcorvec[2](1)-(-0.036325339212      ))<PRECISION);
 assert(std::abs(xcorvec[2](2)-(-0.031570194370      ))<PRECISION);
 assert(std::abs(xcorvec[3](0)-(-0.073461435265      ))<PRECISION);
 assert(std::abs(xcorvec[3](1)-(-0.050935812947      ))<PRECISION);
 assert(std::abs(xcorvec[3](2)-(-0.029483108158      ))<PRECISION);
 assert(std::abs(xcorvec[4](0)-(-0.036034521040      ))<PRECISION);
 assert(std::abs(xcorvec[4](1)-(-0.015206955304      ))<PRECISION);
 assert(std::abs(xcorvec[4](2)-( 0.090492013803      ))<PRECISION);
 assert(std::abs(xcorvec[5](0)-( 0.011140612805      ))<PRECISION);
 assert(std::abs(xcorvec[5](1)-(-0.055603972994      ))<PRECISION);
 assert(std::abs(xcorvec[5](2)-( 0.092232002291      ))<PRECISION);
 assert(std::abs(xcorvec[6](0)-(-0.006637748510      ))<PRECISION);
 assert(std::abs(xcorvec[6](1)-(-0.046538936075      ))<PRECISION);
 assert(std::abs(xcorvec[6](2)-(-0.002659600352      ))<PRECISION);
 assert(std::abs(xcorvec[7](0)-(-0.037743997247      ))<PRECISION);
 assert(std::abs(xcorvec[7](1)-( 0.042212309085      ))<PRECISION);
 assert(std::abs(xcorvec[7](2)-( 0.021348733814      ))<PRECISION);
 assert(std::abs(xcorvec[8](0)-( 0.106404503957      ))<PRECISION);
 assert(std::abs(xcorvec[8](1)-( 0.131922996546      ))<PRECISION);
 assert(std::abs(xcorvec[8](2)-( 0.028268030633      ))<PRECISION);
 assert(std::abs(xcorvec[9](0)-( 0.130249453353      ))<PRECISION);
 assert(std::abs(xcorvec[9](1)-( 0.096404509088      ))<PRECISION);
 assert(std::abs(xcorvec[9](2)-( 0.090112033973      ))<PRECISION);
 printf("Test case #  7    passed\n");
                // Test case #  9
 t=dso::datetime<dso::nanoseconds>(
dso::year(2011 ), dso::month( 1    ), dso::day_of_month(12 ),dso::nanoseconds(  6695     *1000000000L));
  xsun = Eigen::Matrix<double,3,1>(  0.1378600067396687011719E+12,  0.5422827850723609161377E+11,  0.2350953902151343917847E+11 );
  xmon = Eigen::Matrix<double,3,1>( -0.1798950112410588562489E+09, -0.3125412142242507934570E+09, -0.1694778742031505107880E+09 );
 iers2010::dehanttideinel(t,xsun,xmon,xstavec,xcorvec);
 assert(std::abs(xcorvec[0](0)-( 0.018795274261      ))<PRECISION);
 assert(std::abs(xcorvec[0](1)-( 0.036600978739      ))<PRECISION);
 assert(std::abs(xcorvec[0](2)-(-0.053688502097      ))<PRECISION);
 assert(std::abs(xcorvec[1](0)-( 0.002643612869      ))<PRECISION);
 assert(std::abs(xcorvec[1](1)-( 0.047749224916      ))<PRECISION);
 assert(std::abs(xcorvec[1](2)-(-0.051863253150      ))<PRECISION);
 assert(std::abs(xcorvec[2](0)-(-0.035688465218      ))<PRECISION);
 assert(std::abs(xcorvec[2](1)-(-0.039090702562      ))<PRECISION);
 assert(std::abs(xcorvec[2](2)-(-0.028781394766      ))<PRECISION);
 assert(std::abs(xcorvec[3](0)-(-0.067040502425      ))<PRECISION);
 assert(std::abs(xcorvec[3](1)-(-0.050686359905      ))<PRECISION);
 assert(std::abs(xcorvec[3](2)-(-0.028702425684      ))<PRECISION);
 assert(std::abs(xcorvec[4](0)-(-0.035947072125      ))<PRECISION);
 assert(std::abs(xcorvec[4](1)-(-0.015695030759      ))<PRECISION);
 assert(std::abs(xcorvec[4](2)-( 0.085331662985      ))<PRECISION);
 assert(std::abs(xcorvec[5](0)-( 0.012878598926      ))<PRECISION);
 assert(std::abs(xcorvec[5](1)-(-0.057566036693      ))<PRECISION);
 assert(std::abs(xcorvec[5](2)-( 0.098729004709      ))<PRECISION);
 assert(std::abs(xcorvec[6](0)-( 0.001771665920      ))<PRECISION);
 assert(std::abs(xcorvec[6](1)-(-0.048586210396      ))<PRECISION);
 assert(std::abs(xcorvec[6](2)-( 0.000023995323      ))<PRECISION);
 assert(std::abs(xcorvec[7](0)-(-0.034636898924      ))<PRECISION);
 assert(std::abs(xcorvec[7](1)-( 0.041394774864      ))<PRECISION);
 assert(std::abs(xcorvec[7](2)-( 0.021559720043      ))<PRECISION);
 assert(std::abs(xcorvec[8](0)-( 0.106805196706      ))<PRECISION);
 assert(std::abs(xcorvec[8](1)-( 0.132610414473      ))<PRECISION);
 assert(std::abs(xcorvec[8](2)-( 0.028505042406      ))<PRECISION);
 assert(std::abs(xcorvec[9](0)-( 0.121958074131      ))<PRECISION);
 assert(std::abs(xcorvec[9](1)-( 0.092454070164      ))<PRECISION);
 assert(std::abs(xcorvec[9](2)-( 0.083569936109      ))<PRECISION);
 printf("Test case #  8    passed\n");
                // Test case # 10
 t=dso::datetime<dso::nanoseconds>(
dso::year(2014 ), dso::month(12    ), dso::day_of_month( 9 ),dso::nanoseconds( 39803     *1000000000L));
  xsun = Eigen::Matrix<double,3,1>(  0.1378599578161047363281E+12,  0.5422823575113162231445E+11,  0.2350949991401789093018E+11 );
  xmon = Eigen::Matrix<double,3,1>( -0.1799101470359368622303E+09, -0.3124912561084346771240E+09, -0.1694332632378985881805E+09 );
 iers2010::dehanttideinel(t,xsun,xmon,xstavec,xcorvec);
 assert(std::abs(xcorvec[0](0)-( 0.019053226717      ))<PRECISION);
 assert(std::abs(xcorvec[0](1)-( 0.037294949249      ))<PRECISION);
 assert(std::abs(xcorvec[0](2)-(-0.047743979265      ))<PRECISION);
 assert(std::abs(xcorvec[1](0)-( 0.008332737396      ))<PRECISION);
 assert(std::abs(xcorvec[1](1)-( 0.046356964689      ))<PRECISION);
 assert(std::abs(xcorvec[1](2)-(-0.038573742414      ))<PRECISION);
 assert(std::abs(xcorvec[2](0)-(-0.026529057834      ))<PRECISION);
 assert(std::abs(xcorvec[2](1)-(-0.035405939542      ))<PRECISION);
 assert(std::abs(xcorvec[2](2)-(-0.032290933248      ))<PRECISION);
 assert(std::abs(xcorvec[3](0)-(-0.075783310374      ))<PRECISION);
 assert(std::abs(xcorvec[3](1)-(-0.051104800869      ))<PRECISION);
 assert(std::abs(xcorvec[3](2)-(-0.029928513663      ))<PRECISION);
 assert(std::abs(xcorvec[4](0)-(-0.036344482069      ))<PRECISION);
 assert(std::abs(xcorvec[4](1)-(-0.015166285146      ))<PRECISION);
 assert(std::abs(xcorvec[4](2)-( 0.093218827922      ))<PRECISION);
 assert(std::abs(xcorvec[5](0)-( 0.009750308816      ))<PRECISION);
 assert(std::abs(xcorvec[5](1)-(-0.054567008204      ))<PRECISION);
 assert(std::abs(xcorvec[5](2)-( 0.087285849001      ))<PRECISION);
 assert(std::abs(xcorvec[6](0)-(-0.010548634626      ))<PRECISION);
 assert(std::abs(xcorvec[6](1)-(-0.045711604649      ))<PRECISION);
 assert(std::abs(xcorvec[6](2)-(-0.004139497547      ))<PRECISION);
 assert(std::abs(xcorvec[7](0)-(-0.039505938962      ))<PRECISION);
 assert(std::abs(xcorvec[7](1)-( 0.042628320818      ))<PRECISION);
 assert(std::abs(xcorvec[7](2)-( 0.021247317731      ))<PRECISION);
 assert(std::abs(xcorvec[8](0)-( 0.106480077826      ))<PRECISION);
 assert(std::abs(xcorvec[8](1)-( 0.131974406758      ))<PRECISION);
 assert(std::abs(xcorvec[8](2)-( 0.028385216582      ))<PRECISION);
 assert(std::abs(xcorvec[9](0)-( 0.132151804039      ))<PRECISION);
 assert(std::abs(xcorvec[9](1)-( 0.097532388087      ))<PRECISION);
 assert(std::abs(xcorvec[9](2)-( 0.091961386671      ))<PRECISION);
 printf("Test case #  9    passed\n");
  /* untill here */
  
  printf("All tests passed for a precision (C++ Vs FORTRAN) < %.2e\n",
         PRECISION);
  
  return 0;
}

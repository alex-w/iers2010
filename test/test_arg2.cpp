#include "iers2010.hpp"
#include "test_help.hpp"
#include <cassert>

int main() {
  double angles[11];
  constexpr const double PRECISION = 1e-10;

  // testing arg2
  iers2010::arg2(1978,    0.66038134454640626814E+02, angles);
assert(std::abs(angles[ 0]-(    0.14581182353602599733E+01 ))<PRECISION);
assert(std::abs(angles[ 1]-(    0.47921134643291457555E+00 ))<PRECISION);
assert(std::abs(angles[ 2]-(    0.74353226886715617638E+00 ))<PRECISION);
assert(std::abs(angles[ 3]-(    0.62179179894512301985E+01 ))<PRECISION);
assert(std::abs(angles[ 4]-(    0.15381626679307132122E+01 ))<PRECISION);
assert(std::abs(angles[ 5]-(    0.62031408746103835483E+01 ))<PRECISION);
assert(std::abs(angles[ 6]-(    0.52242339856817920918E+01 ))<PRECISION);
assert(std::abs(angles[ 7]-(    0.54885549081154607620E+01 ))<PRECISION);
assert(std::abs(angles[ 8]-(    0.47598010720187104994E+01 ))<PRECISION);
assert(std::abs(angles[ 9]-(    0.71458662545748552475E+00 ))<PRECISION);
assert(std::abs(angles[10]-(    0.57387073019817265163E+01 ))<PRECISION);
iers2010::arg2(2031,    0.37818489946043158056E+02, angles);
assert(std::abs(angles[ 0]-(    0.41255841422030101739E+01 ))<PRECISION);
assert(std::abs(angles[ 1]-(    0.40022553207632274308E+01 ))<PRECISION);
assert(std::abs(angles[ 2]-(    0.20914635907542589166E+00 ))<PRECISION);
assert(std::abs(angles[ 3]-(    0.24925081863300775353E+01 ))<PRECISION);
assert(std::abs(angles[ 4]-(    0.59586430735497799560E+01 ))<PRECISION);
assert(std::abs(angles[ 5]-(    0.44501263758319069552E+01 ))<PRECISION);
assert(std::abs(angles[ 6]-(    0.43267975543929821924E+01 ))<PRECISION);
assert(std::abs(angles[ 7]-(    0.53368859270432267294E+00 ))<PRECISION);
assert(std::abs(angles[ 8]-(    0.46501376383196912911E+01 ))<PRECISION);
assert(std::abs(angles[ 9]-(    0.39164519266323978286E+01 ))<PRECISION);
assert(std::abs(angles[10]-(    0.47734523162528930129E+01 ))<PRECISION);
iers2010::arg2(1982,    0.12602197520603395731E+03, angles);
assert(std::abs(angles[ 0]-(    0.11875777832210516749E+01 ))<PRECISION);
assert(std::abs(angles[ 1]-(    0.27614838525720936113E+00 ))<PRECISION);
assert(std::abs(angles[ 2]-(    0.55057583577677959852E+01 ))<PRECISION);
assert(std::abs(angles[ 3]-(    0.17965251699623507875E+01 ))<PRECISION);
assert(std::abs(angles[ 4]-(    0.24690589117761234661E+01 ))<PRECISION);
assert(std::abs(angles[ 5]-(    0.50017041786258786829E+01 ))<PRECISION);
assert(std::abs(angles[ 6]-(    0.40902747806606782888E+01 ))<PRECISION);
assert(std::abs(angles[ 7]-(    0.30366994459893987823E+01 ))<PRECISION);
assert(std::abs(angles[ 8]-(    0.60894814620461801269E+00 ))<PRECISION);
assert(std::abs(angles[ 9]-(    0.19650051123632508165E+01 ))<PRECISION);
assert(std::abs(angles[10]-(    0.15203771644367947147E+01 ))<PRECISION);
iers2010::arg2(2013,    0.17042816106279622090E+03, angles);
assert(std::abs(angles[ 0]-(    0.80448719099628362983E+00 ))<PRECISION);
assert(std::abs(angles[ 1]-(    0.53804267381376185142E+01 ))<PRECISION);
assert(std::abs(angles[ 2]-(    0.17177684966886914708E+01 ))<PRECISION);
assert(std::abs(angles[ 3]-(    0.21623735980487097663E+01 ))<PRECISION);
assert(std::abs(angles[ 4]-(    0.57935757794090960715E+01 ))<PRECISION);
assert(std::abs(angles[ 5]-(    0.12940967187657506088E+01 ))<PRECISION);
assert(std::abs(angles[ 6]-(    0.58700362659080340677E+01 ))<PRECISION);
assert(std::abs(angles[ 7]-(    0.22073780244581584498E+01 ))<PRECISION);
assert(std::abs(angles[ 8]-(    0.13579012042983933384E+01 ))<PRECISION);
assert(std::abs(angles[ 9]-(    0.53699114001119809814E+01 ))<PRECISION);
assert(std::abs(angles[10]-(    0.30651395657138493789E+01 ))<PRECISION);
iers2010::arg2(2031,    0.79587810093816520052E+01, angles);
assert(std::abs(angles[ 0]-(    0.60285881452272747083E+01 ))<PRECISION);
assert(std::abs(angles[ 1]-(    0.57652035519232445182E+01 ))<PRECISION);
assert(std::abs(angles[ 2]-(    0.26377919797020012993E+01 ))<PRECISION);
assert(std::abs(angles[ 3]-(    0.32281130993317574962E+01 ))<PRECISION);
assert(std::abs(angles[ 4]-(    0.43260222871033704450E-01 ))<PRECISION);
assert(std::abs(angles[ 5]-(    0.59853279223546493881E+01 ))<PRECISION);
assert(std::abs(angles[ 6]-(    0.57219433290522090374E+01 ))<PRECISION);
assert(std::abs(angles[ 7]-(    0.25945317568293759791E+01 ))<PRECISION);
assert(std::abs(angles[ 8]-(    0.34827433967565184503E+01 ))<PRECISION);
assert(std::abs(angles[ 9]-(    0.33908127332591107006E+01 ))<PRECISION);
assert(std::abs(angles[10]-(    0.37461114223238709542E+01 ))<PRECISION);
iers2010::arg2(2009,    0.87587590960539458251E+02, angles);
assert(std::abs(angles[ 0]-(    0.35443002213973784364E-01 ))<PRECISION);
assert(std::abs(angles[ 1]-(    0.11006951758505776340E+01 ))<PRECISION);
assert(std::abs(angles[ 2]-(    0.11279193682871593296E+01 ))<PRECISION);
assert(std::abs(angles[ 3]-(    0.13145698557930884931E+01 ))<PRECISION);
assert(std::abs(angles[ 4]-(    0.53696739082812854349E+01 ))<PRECISION);
assert(std::abs(angles[ 5]-(    0.94895440111295670249E+00 ))<PRECISION);
assert(std::abs(angles[ 6]-(    0.20142065747488260286E+01 ))<PRECISION);
assert(std::abs(angles[ 7]-(    0.20414307671861422477E+01 ))<PRECISION);
assert(std::abs(angles[ 8]-(    0.12791471607224735862E+01 ))<PRECISION);
assert(std::abs(angles[ 9]-(    0.51907190946834234069E+01 ))<PRECISION);
assert(std::abs(angles[10]-(    0.21388483351447007408E+00 ))<PRECISION);
iers2010::arg2(2008,    0.35512932914038094623E+03, angles);
assert(std::abs(angles[ 0]-(    0.47585009508886173535E+01 ))<PRECISION);
assert(std::abs(angles[ 1]-(    0.16251967434441321192E+01 ))<PRECISION);
assert(std::abs(angles[ 2]-(    0.31693851302916584700E+01 ))<PRECISION);
assert(std::abs(angles[ 3]-(    0.47347511211277080179E+01 ))<PRECISION);
assert(std::abs(angles[ 4]-(    0.79657923376900896528E+00 ))<PRECISION);
assert(std::abs(angles[ 5]-(    0.39619217171177893988E+01 ))<PRECISION);
assert(std::abs(angles[ 6]-(    0.82861750967511227373E+00 ))<PRECISION);
assert(std::abs(angles[ 7]-(    0.23728058965208305153E+01 ))<PRECISION);
assert(std::abs(angles[ 8]-(    0.62594399470337549474E+01 ))<PRECISION);
assert(std::abs(angles[ 9]-(    0.15891180554018831117E+01 ))<PRECISION);
assert(std::abs(angles[10]-(    0.31095566124912394912E+01 ))<PRECISION);
iers2010::arg2(1982,    0.18719167580692078445E+03, angles);
assert(std::abs(angles[ 0]-(    0.24228435320229309013E+01 ))<PRECISION);
assert(std::abs(angles[ 1]-(    0.24086674997383599184E+01 ))<PRECISION);
assert(std::abs(angles[ 2]-(    0.53590451941656525037E+01 ))<PRECISION);
assert(std::abs(angles[ 3]-(    0.60336204502888080015E+01 ))<PRECISION);
assert(std::abs(angles[ 4]-(    0.45876065519393520731E+01 ))<PRECISION);
assert(std::abs(angles[ 5]-(    0.41184222872635061208E+01 ))<PRECISION);
assert(std::abs(angles[ 6]-(    0.41042462549786193904E+01 ))<PRECISION);
assert(std::abs(angles[ 7]-(    0.77143864222482250170E+00 ))<PRECISION);
assert(std::abs(angles[ 8]-(    0.36107835425823608944E+01 ))<PRECISION);
assert(std::abs(angles[ 9]-(    0.33469869571973802636E+01 ))<PRECISION);
assert(std::abs(angles[10]-(    0.36249562627084372934E+01 ))<PRECISION);
iers2010::arg2(1990,    0.26501049737731012357E+02, angles);
assert(std::abs(angles[ 0]-(    0.62256954179440242569E+01 ))<PRECISION);
assert(std::abs(angles[ 1]-(    0.13186876733477959078E-01 ))<PRECISION);
assert(std::abs(angles[ 2]-(    0.15437396925539630388E+01 ))<PRECISION);
assert(std::abs(angles[ 3]-(    0.43948168125191244826E+01 ))<PRECISION);
assert(std::abs(angles[ 4]-(    0.37682047330545103137E+01 ))<PRECISION);
assert(std::abs(angles[ 5]-(    0.24574906848894002565E+01 ))<PRECISION);
assert(std::abs(angles[ 6]-(    0.25281674508585254557E+01 ))<PRECISION);
assert(std::abs(angles[ 7]-(    0.40587202666789252703E+01 ))<PRECISION);
assert(std::abs(angles[ 8]-(    0.44523240180335861282E+01 ))<PRECISION);
assert(std::abs(angles[ 9]-(    0.46819643835267825693E+01 ))<PRECISION);
assert(std::abs(angles[10]-(    0.43816385939251247805E+01 ))<PRECISION);
iers2010::arg2(2023,    0.36248235856116764353E+03, angles);
assert(std::abs(angles[ 0]-(    0.56079555196735171307E+01 ))<PRECISION);
assert(std::abs(angles[ 1]-(    0.60614921004883264288E+01 ))<PRECISION);
assert(std::abs(angles[ 2]-(    0.33352593891739985565E+01 ))<PRECISION);
assert(std::abs(angles[ 3]-(    0.31534777547784784701E+01 ))<PRECISION);
assert(std::abs(angles[ 4]-(    0.31475352041841873074E+01 ))<PRECISION);
assert(std::abs(angles[ 5]-(    0.24604203154893298233E+01 ))<PRECISION);
assert(std::abs(angles[ 6]-(    0.29139568963042208338E+01 ))<PRECISION);
assert(std::abs(angles[ 7]-(    0.18772418498617327032E+00 ))<PRECISION);
assert(std::abs(angles[ 8]-(    0.38287242125964269235E+01 ))<PRECISION);
assert(std::abs(angles[ 9]-(    0.22727044656583004212E+01 ))<PRECISION);
assert(std::abs(angles[10]-(    0.33751792966255962369E+01 ))<PRECISION);
iers2010::arg2(2021,    0.34560167774957596976E+03, angles);
assert(std::abs(angles[ 0]-(    0.44906040682114394258E+01 ))<PRECISION);
assert(std::abs(angles[ 1]-(    0.12777148606662960262E+01 ))<PRECISION);
assert(std::abs(angles[ 2]-(    0.28809825763733556414E+01 ))<PRECISION);
assert(std::abs(angles[ 3]-(    0.40887585168734261742E+01 ))<PRECISION);
assert(std::abs(angles[ 4]-(    0.36151755852316611595E+01 ))<PRECISION);
assert(std::abs(angles[ 5]-(    0.87542848298046038735E+00 ))<PRECISION);
assert(std::abs(angles[ 6]-(    0.39457245826141686962E+01 ))<PRECISION);
assert(std::abs(angles[ 7]-(    0.55489922983183248562E+01 ))<PRECISION);
assert(std::abs(angles[ 8]-(    0.58813605498228938018E+01 ))<PRECISION);
assert(std::abs(angles[ 9]-(    0.16096318888340874764E+01 ))<PRECISION);
assert(std::abs(angles[10]-(    0.28110540531986387691E+01 ))<PRECISION);
iers2010::arg2(2008,    0.17120993119449232722E+03, angles);
assert(std::abs(angles[ 0]-(    0.23545568169926198721E+01 ))<PRECISION);
assert(std::abs(angles[ 1]-(    0.26380713011105121346E+01 ))<PRECISION);
assert(std::abs(angles[ 2]-(    0.50049471700820831188E+01 ))<PRECISION);
assert(std::abs(angles[ 3]-(    0.57029551406664182878E+01 ))<PRECISION);
assert(std::abs(angles[ 4]-(    0.44222738971281572162E+01 ))<PRECISION);
assert(std::abs(angles[ 5]-(    0.42154682270399561617E+01 ))<PRECISION);
assert(std::abs(angles[ 6]-(    0.44989827111619007383E+01 ))<PRECISION);
assert(std::abs(angles[ 7]-(    0.58267327295347115523E+00 ))<PRECISION);
assert(std::abs(angles[ 8]-(    0.33484055788974345091E+01 ))<PRECISION);
assert(std::abs(angles[ 9]-(    0.36327985816988714873E+01 ))<PRECISION);
assert(std::abs(angles[10]-(    0.30648874671670824910E+01 ))<PRECISION);
iers2010::arg2(1991,    0.28595195078721121718E+03, angles);
assert(std::abs(angles[ 0]-(    0.37752513255540449677E+01 ))<PRECISION);
assert(std::abs(angles[ 1]-(    0.56793725103212242544E+01 ))<PRECISION);
assert(std::abs(angles[ 2]-(    0.12148057209378109178E+01 ))<PRECISION);
assert(std::abs(angles[ 3]-(    0.12966571797425530121E+00 ))<PRECISION);
assert(std::abs(angles[ 4]-(    0.47772218393718688390E+01 ))<PRECISION);
assert(std::abs(angles[ 5]-(    0.52812147933628992291E+01 ))<PRECISION);
assert(std::abs(angles[ 6]-(    0.90215067094928258484E+00 ))<PRECISION);
assert(std::abs(angles[ 7]-(    0.27207691887448461898E+01 ))<PRECISION);
assert(std::abs(angles[ 8]-(    0.26376325990201721083E+01 ))<PRECISION);
assert(std::abs(angles[ 9]-(    0.25604620543240343977E+01 ))<PRECISION);
assert(std::abs(angles[10]-(    0.73349496454230944664E+00 ))<PRECISION);
iers2010::arg2(1995,    0.15858886631336065420E+03, angles);
assert(std::abs(angles[ 0]-(    0.34700240065133698408E+01 ))<PRECISION);
assert(std::abs(angles[ 1]-(    0.11167217205693056314E+01 ))<PRECISION);
assert(std::abs(angles[ 2]-(    0.46802255516324393625E+01 ))<PRECISION);
assert(std::abs(angles[ 3]-(    0.37524670608697547891E+01 ))<PRECISION);
assert(std::abs(angles[ 4]-(    0.30543720364003235090E+00 ))<PRECISION);
assert(std::abs(angles[ 5]-(    0.31645868028743606715E+01 ))<PRECISION);
assert(std::abs(angles[ 6]-(    0.81128451692927683325E+00 ))<PRECISION);
assert(std::abs(angles[ 7]-(    0.43747883479916112037E+01 ))<PRECISION);
assert(std::abs(angles[ 8]-(    0.28246340557499394208E+00 ))<PRECISION);
assert(std::abs(angles[ 9]-(    0.50729939376718675703E+01 ))<PRECISION);
assert(std::abs(angles[10]-(    0.26357555159104322229E+01 ))<PRECISION);
iers2010::arg2(1974,    0.91356552004944603596E+02, angles);
assert(std::abs(angles[ 0]-(    0.64357348240267242545E+00 ))<PRECISION);
assert(std::abs(angles[ 1]-(    0.44805614233388766365E+01 ))<PRECISION);
assert(std::abs(angles[ 2]-(    0.57773614807510398350E+00 ))<PRECISION);
assert(std::abs(angles[ 3]-(    0.48060958181740573991E+01 ))<PRECISION);
assert(std::abs(angles[ 4]-(    0.39738442358819199285E+01 ))<PRECISION);
assert(std::abs(angles[ 5]-(    0.29529145537006229461E+01 ))<PRECISION);
assert(std::abs(angles[ 6]-(    0.50671718745696381347E+00 ))<PRECISION);
assert(std::abs(angles[ 7]-(    0.28870772193694165253E+01 ))<PRECISION);
assert(std::abs(angles[ 8]-(    0.41625346582085995806E+01 ))<PRECISION);
assert(std::abs(angles[ 9]-(    0.65843495545720998052E-01 ))<PRECISION);
assert(std::abs(angles[10]-(    0.32554055605383780403E+00 ))<PRECISION);
iers2010::arg2(1974,    0.19951242007085070895E+03, angles);
assert(std::abs(angles[ 0]-(    0.56019702187672493210E+00 ))<PRECISION);
assert(std::abs(angles[ 1]-(    0.15607059422804248072E+00 ))<PRECISION);
assert(std::abs(angles[ 2]-(    0.96462935854206222075E+00 ))<PRECISION);
assert(std::abs(angles[ 3]-(    0.42027679460190583427E+01 ))<PRECISION);
assert(std::abs(angles[ 4]-(    0.53058764621462728428E+00 ))<PRECISION);
assert(std::abs(angles[ 5]-(    0.29609375662154491238E-01 ))<PRECISION);
assert(std::abs(angles[ 6]-(    0.59086682551929641249E+01 ))<PRECISION);
assert(std::abs(angles[ 7]-(    0.43404171232749177989E+00 ))<PRECISION);
assert(std::abs(angles[ 8]-(    0.36425886333806971606E+01 ))<PRECISION);
assert(std::abs(angles[ 9]-(    0.58787618251327486973E+01 ))<PRECISION);
assert(std::abs(angles[10]-(    0.40467062064098939800E+01 ))<PRECISION);
iers2010::arg2(2009,    0.38166557652583826155E+02, angles);
assert(std::abs(angles[ 0]-(    0.32087080147712256917E+01 ))<PRECISION);
assert(std::abs(angles[ 1]-(    0.20930236896155336446E+01 ))<PRECISION);
assert(std::abs(angles[ 2]-(    0.30041438767770145546E+01 ))<PRECISION);
assert(std::abs(angles[ 3]-(    0.60654657868380468244E+00 ))<PRECISION);
assert(std::abs(angles[ 4]-(    0.18740696161368504136E+01 ))<PRECISION);
assert(std::abs(angles[ 5]-(    0.13346383986346026518E+01 ))<PRECISION);
assert(std::abs(angles[ 6]-(    0.21895407347865614156E+00 ))<PRECISION);
assert(std::abs(angles[ 7]-(    0.11300742606367535359E+01 ))<PRECISION);
assert(std::abs(angles[ 8]-(    0.36810296273252873789E+01 ))<PRECISION);
assert(std::abs(angles[ 9]-(    0.20456701611202277036E+00 ))<PRECISION);
assert(std::abs(angles[10]-(    0.47967110743642180637E+01 ))<PRECISION);
iers2010::arg2(2043,    0.17820350562524245674E+03, angles);
assert(std::abs(angles[ 0]-(    0.46569263573967845105E+00 ))<PRECISION);
assert(std::abs(angles[ 1]-(    0.25573252744307990447E+01 ))<PRECISION);
assert(std::abs(angles[ 2]-(    0.18202035639801650291E+01 ))<PRECISION);
assert(std::abs(angles[ 3]-(    0.58808476219055592082E+01 ))<PRECISION);
assert(std::abs(angles[ 4]-(    0.45112201377477276765E+01 ))<PRECISION);
assert(std::abs(angles[ 5]-(    0.22376578051699453908E+01 ))<PRECISION);
assert(std::abs(angles[ 6]-(    0.43292904438626678143E+01 ))<PRECISION);
assert(std::abs(angles[ 7]-(    0.35921687334177079265E+01 ))<PRECISION);
assert(std::abs(angles[ 8]-(    0.54151620193186502661E+01 ))<PRECISION);
assert(std::abs(angles[ 9]-(    0.49286778955167349636E+01 ))<PRECISION);
assert(std::abs(angles[10]-(    0.33235258640520441986E+01 ))<PRECISION);
iers2010::arg2(1979,    0.18356479302194068737E+03, angles);
assert(std::abs(angles[ 0]-(    0.38050821188640640003E+01 ))<PRECISION);
assert(std::abs(angles[ 1]-(    0.81420803568382549287E+00 ))<PRECISION);
assert(std::abs(angles[ 2]-(    0.61586622407537845447E+01 ))<PRECISION);
assert(std::abs(angles[ 3]-(    0.43049606540625759976E+01 ))<PRECISION);
assert(std::abs(angles[ 4]-(    0.58168400023638611174E+00 ))<PRECISION);
assert(std::abs(angles[ 5]-(    0.32233981186297810950E+01 ))<PRECISION);
assert(std::abs(angles[ 6]-(    0.23252403544745448016E+00 ))<PRECISION);
assert(std::abs(angles[ 7]-(    0.55769782405176826501E+01 ))<PRECISION);
assert(std::abs(angles[ 8]-(    0.49989805444365487119E+00 ))<PRECISION);
assert(std::abs(angles[ 9]-(    0.39296149449110728824E+01 ))<PRECISION);
assert(std::abs(angles[10]-(    0.34907623780021594939E+01 ))<PRECISION);
iers2010::arg2(1986,    0.20204851512322747453E+03, angles);
assert(std::abs(angles[ 0]-(    0.91002764610714592663E+00 ))<PRECISION);
assert(std::abs(angles[ 1]-(    0.60965858154500407462E+00 ))<PRECISION);
assert(std::abs(angles[ 2]-(    0.31961866773332303637E+00 ))<PRECISION);
assert(std::abs(angles[ 3]-(    0.47468485044332027201E+01 ))<PRECISION);
assert(std::abs(angles[ 4]-(    0.39442205790115494324E+01 ))<PRECISION);
assert(std::abs(angles[ 5]-(    0.32489923742764332815E+01 ))<PRECISION);
assert(std::abs(angles[ 6]-(    0.29486233097131275827E+01 ))<PRECISION);
assert(std::abs(angles[ 7]-(    0.26585833959026103912E+01 ))<PRECISION);
assert(std::abs(angles[ 8]-(    0.38368225350077338476E+01 ))<PRECISION);
assert(std::abs(angles[ 9]-(    0.59040981671511616469E+00 ))<PRECISION);
assert(std::abs(angles[10]-(    0.41371907612294052115E+01 ))<PRECISION);
iers2010::arg2(2031,    0.14453125276702269275E+03, angles);
assert(std::abs(angles[ 0]-(    0.53712600005589337115E+01 ))<PRECISION);
assert(std::abs(angles[ 1]-(    0.39272906422812603466E+00 ))<PRECISION);
assert(std::abs(angles[ 2]-(    0.22541507506882467737E+01 ))<PRECISION);
assert(std::abs(angles[ 3]-(    0.25545021891294155125E+01 ))<PRECISION);
assert(std::abs(angles[ 4]-(    0.59896400749494489446E+01 ))<PRECISION);
assert(std::abs(angles[ 5]-(    0.56648052327855467070E+01 ))<PRECISION);
assert(std::abs(angles[ 6]-(    0.68627429645832194183E+00 ))<PRECISION);
assert(std::abs(angles[ 7]-(    0.25476959829184977480E+01 ))<PRECISION);
assert(std::abs(angles[ 8]-(    0.34664458558483062234E+01 ))<PRECISION);
assert(std::abs(angles[ 9]-(    0.31171184299209429014E+01 ))<PRECISION);
assert(std::abs(angles[10]-(    0.21617823049489857112E+01 ))<PRECISION);
iers2010::arg2(2050,    0.31033272069022990536E+03, angles);
assert(std::abs(angles[ 0]-(    0.13040375880602326220E+01 ))<PRECISION);
assert(std::abs(angles[ 1]-(    0.41810885052305781784E+01 ))<PRECISION);
assert(std::abs(angles[ 2]-(    0.52162241532715327708E+01 ))<PRECISION);
assert(std::abs(angles[ 3]-(    0.57778915616715025294E+01 ))<PRECISION);
assert(std::abs(angles[ 4]-(    0.13181494540409062211E+01 ))<PRECISION);
assert(std::abs(angles[ 5]-(    0.62690734411972073303E+01 ))<PRECISION);
assert(std::abs(angles[ 6]-(    0.28629390511895849158E+01 ))<PRECISION);
assert(std::abs(angles[ 7]-(    0.38980746992325592259E+01 ))<PRECISION);
assert(std::abs(angles[ 8]-(    0.44738654724378221772E+01 ))<PRECISION);
assert(std::abs(angles[ 9]-(    0.23710044913881560547E+01 ))<PRECISION);
assert(std::abs(angles[10]-(    0.15968088058545149011E+01 ))<PRECISION);
iers2010::arg2(1996,    0.28938545286087156683E+03, angles);
assert(std::abs(angles[ 0]-(    0.35621458847477782683E+01 ))<PRECISION);
assert(std::abs(angles[ 1]-(    0.48437400294666002054E+01 ))<PRECISION);
assert(std::abs(angles[ 2]-(    0.48145960939513585686E+01 ))<PRECISION);
assert(std::abs(angles[ 3]-(    0.56881044409505463477E+01 ))<PRECISION);
assert(std::abs(angles[ 4]-(    0.12732558936804281302E+01 ))<PRECISION);
assert(std::abs(angles[ 5]-(    0.22888899910680322591E+01 ))<PRECISION);
assert(std::abs(angles[ 6]-(    0.35704841357862022733E+01 ))<PRECISION);
assert(std::abs(angles[ 7]-(    0.35413402002716125594E+01 ))<PRECISION);
assert(std::abs(angles[ 8]-(    0.21259718774536580099E+01 ))<PRECISION);
assert(std::abs(angles[ 9]-(    0.50307417586040656943E+01 ))<PRECISION);
assert(std::abs(angles[10]-(    0.84437107210936090951E+00 ))<PRECISION);
iers2010::arg2(2035,    0.24206398298130559965E+03, angles);
assert(std::abs(angles[ 0]-(    0.23029935949176945087E+01 ))<PRECISION);
assert(std::abs(angles[ 1]-(    0.80403327933220536394E+00 ))<PRECISION);
assert(std::abs(angles[ 2]-(    0.19396546968230694574E+01 ))<PRECISION);
assert(std::abs(angles[ 3]-(    0.39376798418608416341E-01 ))<PRECISION);
assert(std::abs(angles[ 4]-(    0.47320773795940453965E+01 ))<PRECISION);
assert(std::abs(angles[ 5]-(    0.38541015225038037784E+01 ))<PRECISION);
assert(std::abs(angles[ 6]-(    0.23551412069177430908E+01 ))<PRECISION);
assert(std::abs(angles[ 7]-(    0.34907626244164546847E+01 ))<PRECISION);
assert(std::abs(angles[ 8]-(    0.40195707219317853287E+01 ))<PRECISION);
assert(std::abs(angles[ 9]-(    0.36334000372004027213E+00 ))<PRECISION);
assert(std::abs(angles[10]-(    0.55185299318917486744E+01 ))<PRECISION);
iers2010::arg2(2015,    0.24599399542229173221E+03, angles);
assert(std::abs(angles[ 0]-(    0.44085638535525788484E+01 ))<PRECISION);
assert(std::abs(angles[ 1]-(    0.62077205980830214571E+01 ))<PRECISION);
assert(std::abs(angles[ 2]-(    0.38433452281171511800E+01 ))<PRECISION);
assert(std::abs(angles[ 3]-(    0.55728791344829602394E+01 ))<PRECISION);
assert(std::abs(angles[ 4]-(    0.43572358940364281921E+01 ))<PRECISION);
assert(std::abs(angles[ 5]-(    0.51327959515241161625E-01 ))<PRECISION);
assert(std::abs(angles[ 6]-(    0.18504847040465790542E+01 ))<PRECISION);
assert(std::abs(angles[ 7]-(    0.57692946412593997252E+01 ))<PRECISION);
assert(std::abs(angles[ 8]-(    0.11643496334108789370E+01 ))<PRECISION);
assert(std::abs(angles[ 9]-(    0.56523580167579012823E+00 ))<PRECISION);
assert(std::abs(angles[10]-(    0.56483610198202427455E+01 ))<PRECISION);
iers2010::arg2(2002,    0.17276526348283877610E+03, angles);
assert(std::abs(angles[ 0]-(    0.48291308092765490301E+01 ))<PRECISION);
assert(std::abs(angles[ 1]-(    0.33333923374478686696E+01 ))<PRECISION);
assert(std::abs(angles[ 2]-(    0.40775388285221367823E+01 ))<PRECISION);
assert(std::abs(angles[ 3]-(    0.18418114718963352061E+00 ))<PRECISION);
assert(std::abs(angles[ 4]-(    0.16628869003897648327E+01 ))<PRECISION);
assert(std::abs(angles[ 5]-(    0.31662439088862157632E+01 ))<PRECISION);
assert(std::abs(angles[ 6]-(    0.16705054370581038370E+01 ))<PRECISION);
assert(std::abs(angles[ 7]-(    0.24146519281318035155E+01 ))<PRECISION);
assert(std::abs(angles[ 8]-(    0.16382620925974222814E+01 ))<PRECISION);
assert(std::abs(angles[ 9]-(    0.75160520450906176393E+00 ))<PRECISION);
assert(std::abs(angles[10]-(    0.31339873406742952966E+01 ))<PRECISION);
iers2010::arg2(2041,    0.27744617411148260544E+03, angles);
assert(std::abs(angles[ 0]-(    0.17490451445525394547E+01 ))<PRECISION);
assert(std::abs(angles[ 1]-(    0.56067852214491322727E+01 ))<PRECISION);
assert(std::abs(angles[ 2]-(    0.24200983769146304780E+01 ))<PRECISION);
assert(std::abs(angles[ 3]-(    0.60782843182358377021E+01 ))<PRECISION);
assert(std::abs(angles[ 4]-(    0.14683458323230738074E+01 ))<PRECISION);
assert(std::abs(angles[ 5]-(    0.28069931222923827363E+00 ))<PRECISION);
assert(std::abs(angles[ 6]-(    0.41384393891260984333E+01 ))<PRECISION);
assert(std::abs(angles[ 7]-(    0.95175254459860525458E+00 ))<PRECISION);
assert(std::abs(angles[ 8]-(    0.43292545934622452819E+01 ))<PRECISION);
assert(std::abs(angles[ 9]-(    0.56121397846986695868E+01 ))<PRECISION);
assert(std::abs(angles[10]-(    0.47150680667534317081E+00 ))<PRECISION);
iers2010::arg2(2036,    0.36191462364469362001E+03, angles);
assert(std::abs(angles[ 0]-(    0.14491133693183044784E+01 ))<PRECISION);
assert(std::abs(angles[ 1]-(    0.52103061399503634021E+01 ))<PRECISION);
assert(std::abs(angles[ 2]-(    0.36240127757334406056E+01 ))<PRECISION);
assert(std::abs(angles[ 3]-(    0.22776478010594090051E+01 ))<PRECISION);
assert(std::abs(angles[ 4]-(    0.58512128809144456909E+01 ))<PRECISION);
assert(std::abs(angles[ 5]-(    0.18810857955851503220E+01 ))<PRECISION);
assert(std::abs(angles[ 6]-(    0.56422785662154950614E+01 ))<PRECISION);
assert(std::abs(angles[ 7]-(    0.40559852020002864492E+01 ))<PRECISION);
assert(std::abs(angles[ 8]-(    0.82856604113305820647E+00 ))<PRECISION);
assert(std::abs(angles[ 9]-(    0.41083017054631554288E+01 ))<PRECISION);
assert(std::abs(angles[10]-(    0.33505427729851859908E+01 ))<PRECISION);
iers2010::arg2(1993,    0.48878100387073061484E+02, angles);
assert(std::abs(angles[ 0]-(    0.82672142520578972835E-02 ))<PRECISION);
assert(std::abs(angles[ 1]-(    0.47513416778804682394E+01 ))<PRECISION);
assert(std::abs(angles[ 2]-(    0.41997684232175274133E+01 ))<PRECISION);
assert(std::abs(angles[ 3]-(    0.36290833954374832615E+01 ))<PRECISION);
assert(std::abs(angles[ 4]-(    0.24374537092389658710E+00 ))<PRECISION);
assert(std::abs(angles[ 5]-(    0.60477071505080886027E+01 ))<PRECISION);
assert(std::abs(angles[ 6]-(    0.45075963069566142849E+01 ))<PRECISION);
assert(std::abs(angles[ 7]-(    0.39560230522921528973E+01 ))<PRECISION);
assert(std::abs(angles[ 8]-(    0.36208465283360666831E+01 ))<PRECISION);
assert(std::abs(angles[ 9]-(    0.20916992717908016175E+01 ))<PRECISION);
assert(std::abs(angles[10]-(    0.51609421983113108467E+01 ))<PRECISION);
iers2010::arg2(2050,    0.33541491298325809112E+03, angles);
assert(std::abs(angles[ 0]-(    0.42298559601001599617E+01 ))<PRECISION);
assert(std::abs(angles[ 1]-(    0.52139465801559188307E+01 ))<PRECISION);
assert(std::abs(angles[ 2]-(    0.24226229879555987168E+01 ))<PRECISION);
assert(std::abs(angles[ 3]-(    0.13905303076159043485E+01 ))<PRECISION);
assert(std::abs(angles[ 4]-(    0.22660614806029002466E+01 ))<PRECISION);
assert(std::abs(angles[ 5]-(    0.19637944794970323414E+01 ))<PRECISION);
assert(std::abs(angles[ 6]-(    0.29478850995530478940E+01 ))<PRECISION);
assert(std::abs(angles[ 7]-(    0.15656150735610907532E+00 ))<PRECISION);
assert(std::abs(angles[ 8]-(    0.34438739940891593960E+01 ))<PRECISION);
assert(std::abs(angles[ 9]-(    0.18072401418404524520E+01 ))<PRECISION);
assert(std::abs(angles[10]-(    0.24597762043360020812E+01 ))<PRECISION);
iers2010::arg2(1976,    0.26894637705080800316E+02, angles);
assert(std::abs(angles[ 0]-(    0.65414519269512538813E+00 ))<PRECISION);
assert(std::abs(angles[ 1]-(    0.49591555958599080611E+01 ))<PRECISION);
assert(std::abs(angles[ 2]-(    0.59071973927938969950E+01 ))<PRECISION);
assert(std::abs(angles[ 3]-(    0.30501655000270986307E+01 ))<PRECISION);
assert(std::abs(angles[ 4]-(    0.62374717303982336603E+01 ))<PRECISION);
assert(std::abs(angles[ 5]-(    0.69985876947556846517E+00 ))<PRECISION);
assert(std::abs(angles[ 6]-(    0.50048691726412855019E+01 ))<PRECISION);
assert(std::abs(angles[ 7]-(    0.59529109695725210827E+01 ))<PRECISION);
assert(std::abs(angles[ 8]-(    0.23960512260114725791E+01 ))<PRECISION);
assert(std::abs(angles[ 9]-(    0.10301485664234633077E+01 ))<PRECISION);
assert(std::abs(angles[10]-(    0.43742106706862742271E+01 ))<PRECISION);
iers2010::arg2(2038,    0.25603313081690494357E+02, angles);
assert(std::abs(angles[ 0]-(    0.55114431196441628913E+01 ))<PRECISION);
assert(std::abs(angles[ 1]-(    0.12982650353535047927E+01 ))<PRECISION);
assert(std::abs(angles[ 2]-(    0.56511923831723649414E+01 ))<PRECISION);
assert(std::abs(angles[ 3]-(    0.56619221831372072984E+01 ))<PRECISION);
assert(std::abs(angles[ 4]-(    0.44017574183635517215E+01 ))<PRECISION);
assert(std::abs(angles[ 5]-(    0.11096857012797016750E+01 ))<PRECISION);
assert(std::abs(angles[ 6]-(    0.31796929241694513735E+01 ))<PRECISION);
assert(std::abs(angles[ 7]-(    0.12494349648115417040E+01 ))<PRECISION);
assert(std::abs(angles[ 8]-(    0.15049991399354922805E+00 ))<PRECISION);
assert(std::abs(angles[ 9]-(    0.61434464689017502792E+01 ))<PRECISION);
assert(std::abs(angles[10]-(    0.43636675730338154722E+01 ))<PRECISION);
iers2010::arg2(1975,    0.33906877170327635440E+03, angles);
assert(std::abs(angles[ 0]-(    0.18901294765193199510E+00 ))<PRECISION);
assert(std::abs(angles[ 1]-(    0.86421009121857417234E+00 ))<PRECISION);
assert(std::abs(angles[ 2]-(    0.49214116897054438482E+01 ))<PRECISION);
assert(std::abs(angles[ 3]-(    0.34209157057503389865E+01 ))<PRECISION);
assert(std::abs(angles[ 4]-(    0.13966152608026760618E+00 ))<PRECISION);
assert(std::abs(angles[ 5]-(    0.49351421571891762596E-01 ))<PRECISION);
assert(std::abs(angles[ 6]-(    0.72454856513825660613E+00 ))<PRECISION);
assert(std::abs(angles[ 7]-(    0.47817501636272226051E+01 ))<PRECISION);
assert(std::abs(angles[ 8]-(    0.32319051348491925069E+01 ))<PRECISION);
assert(std::abs(angles[ 9]-(    0.15507877535009555459E+01 ))<PRECISION);
assert(std::abs(angles[10]-(    0.25567068029068096280E+01 ))<PRECISION);
iers2010::arg2(2014,    0.12830930492437315138E+03, angles);
assert(std::abs(angles[ 0]-(    0.14295885599975122204E+00 ))<PRECISION);
assert(std::abs(angles[ 1]-(    0.38868375243336736879E+01 ))<PRECISION);
assert(std::abs(angles[ 2]-(    0.28287937848870683410E+01 ))<PRECISION);
assert(std::abs(angles[ 3]-(    0.54945157088005629475E+01 ))<PRECISION);
assert(std::abs(angles[ 4]-(    0.43180541811952295461E+01 ))<PRECISION);
assert(std::abs(angles[ 5]-(    0.21080899819799014949E+01 ))<PRECISION);
assert(std::abs(angles[ 6]-(    0.58519686503179570991E+01 ))<PRECISION);
assert(std::abs(angles[ 7]-(    0.47939249108708565927E+01 ))<PRECISION);
assert(std::abs(angles[ 8]-(    0.53515675423821704726E+01 ))<PRECISION);
assert(std::abs(angles[ 9]-(    0.35973557230761272763E+01 ))<PRECISION);
assert(std::abs(angles[10]-(    0.16076835292559366053E+01 ))<PRECISION);
iers2010::arg2(2012,    0.26762240383516746078E+03, angles);
assert(std::abs(angles[ 0]-(    0.45349924458081147804E+01 ))<PRECISION);
assert(std::abs(angles[ 1]-(    0.15381663467615220853E+01 ))<PRECISION);
assert(std::abs(angles[ 2]-(    0.39114355877435258435E+01 ))<PRECISION);
assert(std::abs(angles[ 3]-(    0.16380610834743549731E+01 ))<PRECISION);
assert(std::abs(angles[ 4]-(    0.23898268685321255589E+01 ))<PRECISION);
assert(std::abs(angles[ 5]-(    0.21451655772757618479E+01 ))<PRECISION);
assert(std::abs(angles[ 6]-(    0.54315247854089392376E+01 ))<PRECISION);
assert(std::abs(angles[ 7]-(    0.15216087192111729109E+01 ))<PRECISION);
assert(std::abs(angles[ 8]-(    0.33862754551215275001E+01 ))<PRECISION);
assert(std::abs(angles[ 9]-(    0.62356761320323528253E+00 ))<PRECISION);
assert(std::abs(angles[10]-(    0.99905491851068006781E-01 ))<PRECISION);
iers2010::arg2(2020,    0.23367171924245883474E+03, angles);
assert(std::abs(angles[ 0]-(    0.14027454918802177986E+01 ))<PRECISION);
assert(std::abs(angles[ 1]-(    0.21578815872362042683E+01 ))<PRECISION);
assert(std::abs(angles[ 2]-(    0.19599830679752727747E+01 ))<PRECISION);
assert(std::abs(angles[ 3]-(    0.10918350244878922695E+01 ))<PRECISION);
assert(std::abs(angles[ 4]-(    0.21167138390388942071E+01 ))<PRECISION);
assert(std::abs(angles[ 5]-(    0.55692169600181813394E+01 ))<PRECISION);
assert(std::abs(angles[ 6]-(    0.41167748197345588324E-01 ))<PRECISION);
assert(std::abs(angles[ 7]-(    0.61264545361168742943E+01 ))<PRECISION);
assert(std::abs(angles[ 8]-(    0.59722980544064654396E+01 ))<PRECISION);
assert(std::abs(angles[ 9]-(    0.57259593383887903428E+01 ))<PRECISION);
assert(std::abs(angles[10]-(    0.52171503517395905192E+01 ))<PRECISION);
iers2010::arg2(1988,    0.36409520087558570367E+03, angles);
assert(std::abs(angles[ 0]-(    0.51717429457349766153E+01 ))<PRECISION);
assert(std::abs(angles[ 1]-(    0.11963286272465640803E+01 ))<PRECISION);
assert(std::abs(angles[ 2]-(    0.22324006213270806143E+01 ))<PRECISION);
assert(std::abs(angles[ 3]-(    0.46089785572660773028E+01 ))<PRECISION);
assert(std::abs(angles[ 4]-(    0.73369295183819360773E+00 ))<PRECISION);
assert(std::abs(angles[ 5]-(    0.44380499938967830076E+01 ))<PRECISION);
assert(std::abs(angles[ 6]-(    0.46263567540835026648E+00 ))<PRECISION);
assert(std::abs(angles[ 7]-(    0.14987076694907059959E+01 ))<PRECISION);
assert(std::abs(angles[ 8]-(    0.57204242088530179444E+01 ))<PRECISION);
assert(std::abs(angles[ 9]-(    0.29393439694791752004E+01 ))<PRECISION);
assert(std::abs(angles[10]-(    0.34126515750906989410E+01 ))<PRECISION);
iers2010::arg2(1996,    0.26864440398700389778E+03, angles);
assert(std::abs(angles[ 0]-(    0.30759460222289476405E+01 ))<PRECISION);
assert(std::abs(angles[ 1]-(    0.18146282099930939324E+01 ))<PRECISION);
assert(std::abs(angles[ 2]-(    0.27747377617694013452E+01 ))<PRECISION);
assert(std::abs(angles[ 3]-(    0.19453799553049577753E+01 ))<PRECISION);
assert(std::abs(angles[ 4]-(    0.25434863044474269600E+01 ))<PRECISION);
assert(std::abs(angles[ 5]-(    0.53245971778129330687E+00 ))<PRECISION);
assert(std::abs(angles[ 6]-(    0.55543272127252265591E+01 ))<PRECISION);
assert(std::abs(angles[ 7]-(    0.23125145731992802212E+00 ))<PRECISION);
assert(std::abs(angles[ 8]-(    0.51526415108579541879E+01 ))<PRECISION);
assert(std::abs(angles[ 9]-(    0.30121939575697354030E+00 ))<PRECISION);
assert(std::abs(angles[10]-(    0.13076288061272833829E+00 ))<PRECISION);
iers2010::arg2(1989,    0.80130398024282492031E+01, angles);
assert(std::abs(angles[ 0]-(    0.62020493200356057173E+01 ))<PRECISION);
assert(std::abs(angles[ 1]-(    0.16386287250593753462E+00 ))<PRECISION);
assert(std::abs(angles[ 2]-(    0.10011690015078471561E+01 ))<PRECISION);
assert(std::abs(angles[ 3]-(    0.39177433558389154200E+01 ))<PRECISION);
assert(std::abs(angles[ 4]-(    0.38807535112461266635E+00 ))<PRECISION);
assert(std::abs(angles[ 5]-(    0.58139739689122436062E+01 ))<PRECISION);
assert(std::abs(angles[ 6]-(    0.60589728285608615010E+01 ))<PRECISION);
assert(std::abs(angles[ 7]-(    0.61309365038084706612E+00 ))<PRECISION);
assert(std::abs(angles[ 8]-(    0.39988797936384301579E+01 ))<PRECISION);
assert(std::abs(angles[ 9]-(    0.52008805438559804202E+01 ))<PRECISION);
assert(std::abs(angles[10]-(    0.37538807086607945962E+01 ))<PRECISION);
iers2010::arg2(2015,    0.34412724755974085156E+03, angles);
assert(std::abs(angles[ 0]-(    0.20227917330523439432E+01 ))<PRECISION);
assert(std::abs(angles[ 1]-(    0.15990388484211428555E+01 ))<PRECISION);
assert(std::abs(angles[ 2]-(    0.42132530109297405829E+01 ))<PRECISION);
assert(std::abs(angles[ 3]-(    0.43405452095135288459E+01 ))<PRECISION);
assert(std::abs(angles[ 4]-(    0.59947627796191937932E+00 ))<PRECISION);
assert(std::abs(angles[ 5]-(    0.14233154550886055745E+01 ))<PRECISION);
assert(std::abs(angles[ 6]-(    0.99956257045925411830E+00 ))<PRECISION);
assert(std::abs(angles[ 7]-(    0.36137767329660022142E+01 ))<PRECISION);
assert(std::abs(angles[ 8]-(    0.23177578741352320435E+01 ))<PRECISION);
assert(std::abs(angles[ 9]-(    0.40927262281402363442E+01 ))<PRECISION);
assert(std::abs(angles[10]-(    0.27415085599300610397E+01 ))<PRECISION);
iers2010::arg2(1985,    0.36207443596863225821E+03, angles);
assert(std::abs(angles[ 0]-(    0.49530857789486759657E+00 ))<PRECISION);
assert(std::abs(angles[ 1]-(    0.93538929787921409886E+00 ))<PRECISION);
assert(std::abs(angles[ 2]-(    0.26622581029135474751E+01 ))<PRECISION);
assert(std::abs(angles[ 3]-(    0.43035111038379412207E+01 ))<PRECISION);
assert(std::abs(angles[ 4]-(    0.58095922512412556671E+00 ))<PRECISION);
assert(std::abs(angles[ 5]-(    0.61975346599526019986E+01 ))<PRECISION);
assert(std::abs(angles[ 6]-(    0.35443007275504356812E+00 ))<PRECISION);
assert(std::abs(angles[ 7]-(    0.20812988777898766557E+01 ))<PRECISION);
assert(std::abs(angles[ 8]-(    0.38082050984495197099E+01 ))<PRECISION);
assert(std::abs(angles[ 9]-(    0.41162370684165168200E+01 ))<PRECISION);
assert(std::abs(angles[10]-(    0.33681230922122225024E+01 ))<PRECISION);
iers2010::arg2(2040,    0.23924820422026874667E+03, angles);
assert(std::abs(angles[ 0]-(    0.16166442464785077959E+01 ))<PRECISION);
assert(std::abs(angles[ 1]-(    0.31190239825431196330E+01 ))<PRECISION);
assert(std::abs(angles[ 2]-(    0.20802767393067966850E+00 ))<PRECISION);
assert(std::abs(angles[ 3]-(    0.22502299015521813885E+01 ))<PRECISION);
assert(std::abs(angles[ 4]-(    0.58375039311608318826E+01 ))<PRECISION);
assert(std::abs(angles[ 5]-(    0.20623256224945336612E+01 ))<PRECISION);
assert(std::abs(angles[ 6]-(    0.35647053585618806437E+01 ))<PRECISION);
assert(std::abs(angles[ 7]-(    0.65370904995034351259E+00 ))<PRECISION);
assert(std::abs(angles[ 8]-(    0.63359423301274375717E+00 ))<PRECISION);
assert(std::abs(angles[ 9]-(    0.14086208615192958860E+01 ))<PRECISION);
assert(std::abs(angles[10]-(    0.54143955151574942875E+01 ))<PRECISION);
iers2010::arg2(2041,    0.34631324451429921218E+01, angles);
assert(std::abs(angles[ 0]-(    0.54548550748784236930E+01 ))<PRECISION);
assert(std::abs(angles[ 1]-(    0.58198897743590025655E+01 ))<PRECISION);
assert(std::abs(angles[ 2]-(    0.57696291466270892556E+01 ))<PRECISION);
assert(std::abs(angles[ 3]-(    0.31480271584492527381E+01 ))<PRECISION);
assert(std::abs(angles[ 4]-(    0.31448099060195744414E+01 ))<PRECISION);
assert(std::abs(angles[ 5]-(    0.23100451688574850095E+01 ))<PRECISION);
assert(std::abs(angles[ 6]-(    0.26750798683394378941E+01 ))<PRECISION);
assert(std::abs(angles[ 7]-(    0.26248192406134265298E+01 ))<PRECISION);
assert(std::abs(angles[ 8]-(    0.39763733966063838920E+01 ))<PRECISION);
assert(std::abs(angles[ 9]-(    0.59684192383567449269E+01 ))<PRECISION);
assert(std::abs(angles[10]-(    0.36113306941984930631E+01 ))<PRECISION);
iers2010::arg2(1983,    0.14430029251009045765E+03, angles);
assert(std::abs(angles[ 0]-(    0.49485640977028211296E+01 ))<PRECISION);
assert(std::abs(angles[ 1]-(    0.37735842675683395342E+01 ))<PRECISION);
assert(std::abs(angles[ 2]-(    0.35502961167351259064E+01 ))<PRECISION);
assert(std::abs(angles[ 3]-(    0.59144997474650722324E+01 ))<PRECISION);
assert(std::abs(angles[ 4]-(    0.45280462005274841886E+01 ))<PRECISION);
assert(std::abs(angles[ 5]-(    0.42051789717522325418E+00 ))<PRECISION);
assert(std::abs(angles[ 6]-(    0.55287233742204691112E+01 ))<PRECISION);
assert(std::abs(angles[ 7]-(    0.53054352233852952736E+01 ))<PRECISION);
assert(std::abs(angles[ 8]-(    0.96594602787168781788E+00 ))<PRECISION);
assert(std::abs(angles[ 9]-(    0.13982731700233230754E+01 ))<PRECISION);
assert(std::abs(angles[10]-(    0.21409206689511961486E+01 ))<PRECISION);
iers2010::arg2(2040,    0.33384364426882717680E+03, angles);
assert(std::abs(angles[ 0]-(    0.26119526209791388283E+00 ))<PRECISION);
assert(std::abs(angles[ 1]-(    0.43183536366703254572E+01 ))<PRECISION);
assert(std::abs(angles[ 2]-(    0.24150012702734215964E+01 ))<PRECISION);
assert(std::abs(angles[ 3]-(    0.42097471286644605470E+00 ))<PRECISION);
assert(std::abs(angles[ 4]-(    0.49228763368179642157E+01 ))<PRECISION);
assert(std::abs(angles[ 5]-(    0.16215042324590811518E+01 ))<PRECISION);
assert(std::abs(angles[ 6]-(    0.56786626070319954351E+01 ))<PRECISION);
assert(std::abs(angles[ 7]-(    0.37753102406382268441E+01 ))<PRECISION);
assert(std::abs(angles[ 8]-(    0.15980860711571409638E+00 ))<PRECISION);
assert(std::abs(angles[ 9]-(    0.41293938771745999361E+01 ))<PRECISION);
assert(std::abs(angles[10]-(    0.23858209615485677091E+01 ))<PRECISION);
iers2010::arg2(1974,    0.20286740763456822378E+03, angles);
assert(std::abs(angles[ 0]-(    0.35934324943581898992E+01 ))<PRECISION);
assert(std::abs(angles[ 1]-(    0.46169726834053719244E+01 ))<PRECISION);
assert(std::abs(angles[ 2]-(    0.32328428101783188708E+01 ))<PRECISION);
assert(std::abs(angles[ 3]-(    0.24959085088869983338E+01 ))<PRECISION);
assert(std::abs(angles[ 4]-(    0.28187505812383903958E+01 ))<PRECISION);
assert(std::abs(angles[ 5]-(    0.77468191312048162445E+00 ))<PRECISION);
assert(std::abs(angles[ 6]-(    0.17982221021669673178E+01 ))<PRECISION);
assert(std::abs(angles[ 7]-(    0.41409222893697261725E+00 ))<PRECISION);
assert(std::abs(angles[ 8]-(    0.51856912993159909320E+01 ))<PRECISION);
assert(std::abs(angles[ 9]-(    0.36060467298452181240E+00 ))<PRECISION);
assert(std::abs(angles[10]-(    0.41621361214650818283E+01 ))<PRECISION);
iers2010::arg2(2008,    0.21468193816857345269E+03, angles);
assert(std::abs(angles[ 0]-(    0.23533796213570710165E+01 ))<PRECISION);
assert(std::abs(angles[ 1]-(    0.22862963079561762214E+01 ))<PRECISION);
assert(std::abs(angles[ 2]-(    0.13741656037670111346E+01 ))<PRECISION);
assert(std::abs(angles[ 3]-(    0.56366596645611366512E+00 ))<PRECISION);
assert(std::abs(angles[ 4]-(    0.18526293100230049049E+01 ))<PRECISION);
assert(std::abs(angles[ 5]-(    0.50075031133133762751E+00 ))<PRECISION);
assert(std::abs(angles[ 6]-(    0.43366699793323704171E+00 ))<PRECISION);
assert(std::abs(angles[ 7]-(    0.58047216009208639775E+01 ))<PRECISION);
assert(std::abs(angles[ 8]-(    0.44934952200619022733E+01 ))<PRECISION);
assert(std::abs(angles[ 9]-(    0.97922580148544824397E+00 ))<PRECISION);
assert(std::abs(angles[10]-(    0.45605667495709809600E+01 ))<PRECISION);
iers2010::arg2(1974,    0.25273545285045727837E+03, angles);
assert(std::abs(angles[ 0]-(    0.58472597811997175654E+01 ))<PRECISION);
assert(std::abs(angles[ 1]-(    0.29587811514173001370E+01 ))<PRECISION);
assert(std::abs(angles[ 2]-(    0.39858488743581688141E+00 ))<PRECISION);
assert(std::abs(angles[ 3]-(    0.25534586300230444067E+01 ))<PRECISION);
assert(std::abs(angles[ 4]-(    0.28475256418064134323E+01 ))<PRECISION);
assert(std::abs(angles[ 5]-(    0.29997341393926220121E+01 ))<PRECISION);
assert(std::abs(angles[ 6]-(    0.11125550961089203383E+00 ))<PRECISION);
assert(std::abs(angles[ 7]-(    0.38342445528064885707E+01 ))<PRECISION);
assert(std::abs(angles[ 8]-(    0.29894095732540080235E+01 ))<PRECISION);
assert(std::abs(angles[ 9]-(    0.54486876023907555577E+01 ))<PRECISION);
assert(std::abs(angles[10]-(    0.58778754944105315872E+01 ))<PRECISION);
iers2010::arg2(1976,    0.19577275304351343266E+03, angles);
assert(std::abs(angles[ 0]-(    0.26567598005361503510E+01 ))<PRECISION);
assert(std::abs(angles[ 1]-(    0.34275088651107434856E+01 ))<PRECISION);
assert(std::abs(angles[ 2]-(    0.81694112128080575985E+00 ))<PRECISION);
assert(std::abs(angles[ 3]-(    0.10456859168327525822E+01 ))<PRECISION);
assert(std::abs(angles[ 4]-(    0.20936392852112675200E+01 ))<PRECISION);
assert(std::abs(angles[ 5]-(    0.56312051532465545733E+00 ))<PRECISION);
assert(std::abs(angles[ 6]-(    0.13338695798994351094E+01 ))<PRECISION);
assert(std::abs(angles[ 7]-(    0.50064871432470781087E+01 ))<PRECISION);
assert(std::abs(angles[ 8]-(    0.46721381298223363387E+01 ))<PRECISION);
assert(std::abs(angles[ 9]-(    0.18398320324265426962E+01 ))<PRECISION);
assert(std::abs(angles[10]-(    0.39013757120742553752E+01 ))<PRECISION);
iers2010::arg2(1976,    0.19720568433900945138E+03, angles);
assert(std::abs(angles[ 0]-(    0.12041789177352413276E+01 ))<PRECISION);
assert(std::abs(angles[ 1]-(    0.25847037794497516039E+01 ))<PRECISION);
assert(std::abs(angles[ 2]-(    0.53207883548376742056E+01 ))<PRECISION);
assert(std::abs(angles[ 3]-(    0.25219209458543190294E+00 ))<PRECISION);
assert(std::abs(angles[ 4]-(    0.48384850276774002964E+01 ))<PRECISION);
assert(std::abs(angles[ 5]-(    0.26488791972387346618E+01 ))<PRECISION);
assert(std::abs(angles[ 6]-(    0.40294040589519255491E+01 ))<PRECISION);
assert(std::abs(angles[ 7]-(    0.48230332715976231839E+00 ))<PRECISION);
assert(std::abs(angles[ 8]-(    0.53312055924809769181E+01 ))<PRECISION);
assert(std::abs(angles[ 9]-(    0.21665794243015028542E+01 ))<PRECISION);
assert(std::abs(angles[10]-(    0.39506771765407080466E+01 ))<PRECISION);
iers2010::arg2(2011,    0.22382048708343663179E+03, angles);
assert(std::abs(angles[ 0]-(    0.50555121683889296946E+01 ))<PRECISION);
assert(std::abs(angles[ 1]-(    0.40273520714144996901E+01 ))<PRECISION);
assert(std::abs(angles[ 2]-(    0.34021163150574480483E+01 ))<PRECISION);
assert(std::abs(angles[ 3]-(    0.26285449348510638856E+01 ))<PRECISION);
assert(std::abs(angles[ 4]-(    0.28850687942204800152E+01 ))<PRECISION);
assert(std::abs(angles[ 5]-(    0.21704433741693591742E+01 ))<PRECISION);
assert(std::abs(angles[ 6]-(    0.11422832771939965824E+01 ))<PRECISION);
assert(std::abs(angles[ 7]-(    0.51704752083787752781E+00 ))<PRECISION);
assert(std::abs(angles[ 8]-(    0.38562464296744920489E+01 ))<PRECISION);
assert(std::abs(angles[ 9]-(    0.16534100313498001356E+01 ))<PRECISION);
assert(std::abs(angles[10]-(    0.48843923486329003936E+01 ))<PRECISION);
iers2010::arg2(2014,    0.29063606225360797453E+03, angles);
assert(std::abs(angles[ 0]-(    0.42880417246463267134E+01 ))<PRECISION);
assert(std::abs(angles[ 1]-(    0.17098029717691263230E+01 ))<PRECISION);
assert(std::abs(angles[ 2]-(    0.13749005937608558270E+01 ))<PRECISION);
assert(std::abs(angles[ 3]-(    0.26192367922811286007E+01 ))<PRECISION);
assert(std::abs(angles[ 4]-(    0.28804147229355123727E+01 ))<PRECISION);
assert(std::abs(angles[ 5]-(    0.14076270017112690880E+01 ))<PRECISION);
assert(std::abs(angles[ 6]-(    0.51125735560131886359E+01 ))<PRECISION);
assert(std::abs(angles[ 7]-(    0.47776711780053844336E+01 ))<PRECISION);
assert(std::abs(angles[ 8]-(    0.46144023571237511305E+01 ))<PRECISION);
assert(std::abs(angles[ 9]-(    0.29131521220434493102E+01 ))<PRECISION);
assert(std::abs(angles[10]-(    0.90944481166783219805E+00 ))<PRECISION);
iers2010::arg2(1999,    0.19034973667092145888E+03, angles);
assert(std::abs(angles[ 0]-(    0.61242989261292706260E+01 ))<PRECISION);
assert(std::abs(angles[ 1]-(    0.43949174715792578283E+01 ))<PRECISION);
assert(std::abs(angles[ 2]-(    0.62364937211103708137E+01 ))<PRECISION);
assert(std::abs(angles[ 3]-(    0.18413094171005823796E+01 ))<PRECISION);
assert(std::abs(angles[ 4]-(    0.56330436889350323781E+01 ))<PRECISION);
assert(std::abs(angles[ 5]-(    0.49125523719389718735E+00 ))<PRECISION);
assert(std::abs(angles[ 6]-(    0.50450590898237734905E+01 ))<PRECISION);
assert(std::abs(angles[ 7]-(    0.60345003217317838562E+00 ))<PRECISION);
assert(std::abs(angles[ 8]-(    0.20002078850503579588E+01 ))<PRECISION);
assert(std::abs(angles[ 9]-(    0.61709965556488981520E+01 ))<PRECISION);
assert(std::abs(angles[10]-(    0.37295832961506789616E+01 ))<PRECISION);
iers2010::arg2(2001,    0.19263886949157057416E+03, angles);
assert(std::abs(angles[ 0]-(    0.55917545450280172759E+01 ))<PRECISION);
assert(std::abs(angles[ 1]-(    0.17450797391044012841E+01 ))<PRECISION);
assert(std::abs(angles[ 2]-(    0.18569400200925656463E+01 ))<PRECISION);
assert(std::abs(angles[ 3]-(    0.55711515403629121579E+01 ))<PRECISION);
assert(std::abs(angles[ 4]-(    0.12147794433866110353E+01 ))<PRECISION);
assert(std::abs(angles[ 5]-(    0.43769751016414062406E+01 ))<PRECISION);
assert(std::abs(angles[ 6]-(    0.53030029571779380149E+00 ))<PRECISION);
assert(std::abs(angles[ 7]-(    0.64216057670595461104E+00 ))<PRECISION);
assert(std::abs(angles[ 8]-(    0.62626043818460104262E+01 ))<PRECISION);
assert(std::abs(angles[ 9]-(    0.37348255645986014883E+01 ))<PRECISION);
assert(std::abs(angles[10]-(    0.38260828409233624825E+01 ))<PRECISION);
iers2010::arg2(2036,    0.17447577404202365869E+03, angles);
assert(std::abs(angles[ 0]-(    0.29838642146555827139E+00 ))<PRECISION);
assert(std::abs(angles[ 1]-(    0.59787486519628911807E+01 ))<PRECISION);
assert(std::abs(angles[ 2]-(    0.12321285790799265669E+01 ))<PRECISION);
assert(std::abs(angles[ 3]-(    0.28803405034810154461E+01 ))<PRECISION);
assert(std::abs(angles[ 4]-(    0.61525592321252489114E+01 ))<PRECISION);
assert(std::abs(angles[ 5]-(    0.42901249651875872360E+00 ))<PRECISION);
assert(std::abs(angles[ 6]-(    0.61093747270171974151E+01 ))<PRECISION);
assert(std::abs(angles[ 7]-(    0.13627546541440409555E+01 ))<PRECISION);
assert(std::abs(angles[ 8]-(    0.25819705247667599224E+01 ))<PRECISION);
assert(std::abs(angles[ 9]-(    0.53494513709371176446E+01 ))<PRECISION);
assert(std::abs(angles[10]-(    0.31847853800732792706E+01 ))<PRECISION);
iers2010::arg2(2050,    0.48232426687390876907E+02, angles);
assert(std::abs(angles[ 0]-(    0.47630415033832349536E+01 ))<PRECISION);
assert(std::abs(angles[ 1]-(    0.29207577992439199832E+01 ))<PRECISION);
assert(std::abs(angles[ 2]-(    0.56093579127261250505E+01 ))<PRECISION);
assert(std::abs(angles[ 3]-(    0.17830341643474838520E+01 ))<PRECISION);
assert(std::abs(angles[ 4]-(    0.24623134089686899983E+01 ))<PRECISION);
assert(std::abs(angles[ 5]-(    0.23007280944146586421E+01 ))<PRECISION);
assert(std::abs(angles[ 6]-(    0.45844439027522554397E+00 ))<PRECISION);
assert(std::abs(angles[ 7]-(    0.31470445037611867178E+01 ))<PRECISION);
assert(std::abs(angles[ 8]-(    0.33031860008096813885E+01 ))<PRECISION);
assert(std::abs(angles[ 9]-(    0.54368729141634801749E+01 ))<PRECISION);
assert(std::abs(angles[10]-(    0.51454656886164187313E+01 ))<PRECISION);
iers2010::arg2(1984,    0.93043922861261521007E+02, angles);
assert(std::abs(angles[ 0]-(    0.16415736562507277085E+00 ))<PRECISION);
assert(std::abs(angles[ 1]-(    0.55195055711890517181E+00 ))<PRECISION);
assert(std::abs(angles[ 2]-(    0.26220426185120899731E+01 ))<PRECISION);
assert(std::abs(angles[ 3]-(    0.92103303548721271454E+00 ))<PRECISION);
assert(std::abs(angles[ 4]-(    0.20313128445385544296E+01 ))<PRECISION);
assert(std::abs(angles[ 5]-(    0.44160298282671277548E+01 ))<PRECISION);
assert(std::abs(angles[ 6]-(    0.48038230197600029214E+01 ))<PRECISION);
assert(std::abs(angles[ 7]-(    0.59072977397273973565E+00 ))<PRECISION);
assert(std::abs(angles[ 8]-(    0.75687718783562729641E+00 ))<PRECISION);
assert(std::abs(angles[ 9]-(    0.38253008132795400797E+01 ))<PRECISION);
assert(std::abs(angles[10]-(    0.36908323735544001920E+00 ))<PRECISION);
iers2010::arg2(1984,    0.21640667359657746260E+03, angles);
assert(std::abs(angles[ 0]-(    0.24926344221221654607E+01 ))<PRECISION);
assert(std::abs(angles[ 1]-(    0.51104074677649178327E+01 ))<PRECISION);
assert(std::abs(angles[ 2]-(    0.19532107606005908451E+01 ))<PRECISION);
assert(std::abs(angles[ 3]-(    0.34406654813631050160E+01 ))<PRECISION);
assert(std::abs(angles[ 4]-(    0.14953641388670746437E+00 ))<PRECISION);
assert(std::abs(angles[ 5]-(    0.23430980082371632989E+01 ))<PRECISION);
assert(std::abs(angles[ 6]-(    0.49608710538782503363E+01 ))<PRECISION);
assert(std::abs(angles[ 7]-(    0.18036743467119507045E+01 ))<PRECISION);
assert(std::abs(angles[ 8]-(    0.94804511387902579145E+00 ))<PRECISION);
assert(std::abs(angles[ 9]-(    0.53943068884425571241E+00 ))<PRECISION);
assert(std::abs(angles[10]-(    0.46134503480975723733E+01 ))<PRECISION);
iers2010::arg2(1999,    0.27251734975577693376E+03, angles);
assert(std::abs(angles[ 0]-(    0.46811196636586558384E+01 ))<PRECISION);
assert(std::abs(angles[ 1]-(    0.21801879758505204876E+00 ))<PRECISION);
assert(std::abs(angles[ 2]-(    0.49064265490078966536E+01 ))<PRECISION);
assert(std::abs(angles[ 3]-(    0.49143240188460879381E+00 ))<PRECISION);
assert(std::abs(angles[ 4]-(    0.18165125277372524693E+01 ))<PRECISION);
assert(std::abs(angles[ 5]-(    0.28646071359218581165E+01 ))<PRECISION);
assert(std::abs(angles[ 6]-(    0.46846915770274719648E+01 ))<PRECISION);
assert(std::abs(angles[ 7]-(    0.30899140212692799423E+01 ))<PRECISION);
assert(std::abs(angles[ 8]-(    0.20935159250134063313E+01 ))<PRECISION);
assert(std::abs(angles[ 9]-(    0.60578873616339379282E+01 ))<PRECISION);
assert(std::abs(angles[10]-(    0.27342254410317679003E+00 ))<PRECISION);
iers2010::arg2(2033,    0.14529083863207614513E+03, angles);
assert(std::abs(angles[ 0]-(    0.51182932918767107822E+01 ))<PRECISION);
assert(std::abs(angles[ 1]-(    0.36547834179181983849E+01 ))<PRECISION);
assert(std::abs(angles[ 2]-(    0.47861269101902337297E+01 ))<PRECISION);
assert(std::abs(angles[ 3]-(    0.58604360051017181377E+01 ))<PRECISION);
assert(std::abs(angles[ 4]-(    0.45010143293458071412E+01 ))<PRECISION);
assert(std::abs(angles[ 5]-(    0.61727896252794778320E+00 ))<PRECISION);
assert(std::abs(angles[ 6]-(    0.54369543957520036770E+01 ))<PRECISION);
assert(std::abs(angles[ 7]-(    0.28511258084147073077E+00 ))<PRECISION);
assert(std::abs(angles[ 8]-(    0.74215276461143275810E+00 ))<PRECISION);
assert(std::abs(angles[ 9]-(    0.33217140737593808808E+00 ))<PRECISION);
assert(std::abs(angles[10]-(    0.22056576128752283239E+01 ))<PRECISION);
iers2010::arg2(1999,    0.35762432853898098983E+03, angles);
assert(std::abs(angles[ 0]-(    0.12251766433254829280E+01 ))<PRECISION);
assert(std::abs(angles[ 1]-(    0.15623528708552276711E+01 ))<PRECISION);
assert(std::abs(angles[ 2]-(    0.89333936512525013995E+00 ))<PRECISION);
assert(std::abs(angles[ 3]-(    0.47639198431413802837E+01 ))<PRECISION);
assert(std::abs(angles[ 4]-(    0.39527562483656382142E+01 ))<PRECISION);
assert(std::abs(angles[ 5]-(    0.35556057021402267537E+01 ))<PRECISION);
assert(std::abs(angles[ 6]-(    0.38927819296691197337E+01 ))<PRECISION);
assert(std::abs(angles[ 7]-(    0.32237684239399939656E+01 ))<PRECISION);
assert(std::abs(angles[ 8]-(    0.35387647766099945557E+01 ))<PRECISION);
assert(std::abs(angles[ 9]-(    0.33184806659728138811E+00 ))<PRECISION);
assert(std::abs(angles[10]-(    0.32015777606832571678E+01 ))<PRECISION);
iers2010::arg2(2049,    0.27076600836344897516E+03, angles);
assert(std::abs(angles[ 0]-(    0.29779868153177986301E+01 ))<PRECISION);
assert(std::abs(angles[ 1]-(    0.33427527765444597918E+01 ))<PRECISION);
assert(std::abs(angles[ 2]-(    0.48945982716862204143E+01 ))<PRECISION);
assert(std::abs(angles[ 3]-(    0.35865642294515254207E+01 ))<PRECISION);
assert(std::abs(angles[ 4]-(    0.33640784415207107827E+01 ))<PRECISION);
assert(std::abs(angles[ 5]-(    0.58970936809774698872E+01 ))<PRECISION);
assert(std::abs(angles[ 6]-(    0.62618596422032979376E+01 ))<PRECISION);
assert(std::abs(angles[ 7]-(    0.15305198301663054394E+01 ))<PRECISION);
assert(std::abs(angles[ 8]-(    0.60860388738172588319E+00 ))<PRECISION);
assert(std::abs(angles[ 9]-(    0.43665870874406209623E+01 ))<PRECISION);
assert(std::abs(angles[10]-(    0.24382468953167091286E+00 ))<PRECISION);
iers2010::arg2(1974,    0.24800416201840911867E+03, angles);
assert(std::abs(angles[ 0]-(    0.49541086777128953145E+01 ))<PRECISION);
assert(std::abs(angles[ 1]-(    0.52301428314841982847E-01 ))<PRECISION);
assert(std::abs(angles[ 2]-(    0.58428371201329554196E+00 ))<PRECISION);
assert(std::abs(angles[ 3]-(    0.57673948333045785830E+01 ))<PRECISION);
assert(std::abs(angles[ 4]-(    0.44544937434471805204E+01 ))<PRECISION);
assert(std::abs(angles[ 5]-(    0.49961493426673797558E+00 ))<PRECISION);
assert(std::abs(angles[ 6]-(    0.18809929920472256981E+01 ))<PRECISION);
assert(std::abs(angles[ 7]-(    0.24129752757467244351E+01 ))<PRECISION);
assert(std::abs(angles[ 8]-(    0.81328629943133989855E+00 ))<PRECISION);
assert(std::abs(angles[ 9]-(    0.43698250376197123046E+01 ))<PRECISION);
assert(std::abs(angles[10]-(    0.57150934769094732246E+01 ))<PRECISION);
iers2010::arg2(2022,    0.34536727584077476649E+03, angles);
assert(std::abs(angles[ 0]-(    0.34032365691987465084E+01 ))<PRECISION);
assert(std::abs(angles[ 1]-(    0.46153210221197396024E+01 ))<PRECISION);
assert(std::abs(angles[ 2]-(    0.29855885344564114803E+00 ))<PRECISION);
assert(std::abs(angles[ 3]-(    0.11267866558977743807E+01 ))<PRECISION);
assert(std::abs(angles[ 4]-(    0.21341896547438352627E+01 ))<PRECISION);
assert(std::abs(angles[ 5]-(    0.12690469144549112457E+01 ))<PRECISION);
assert(std::abs(angles[ 6]-(    0.24811313673758661480E+01 ))<PRECISION);
assert(std::abs(angles[ 7]-(    0.44475545058813921173E+01 ))<PRECISION);
assert(std::abs(angles[ 8]-(    0.40067480869301448365E+01 ))<PRECISION);
assert(std::abs(angles[ 9]-(    0.31046840622780749186E+01 ))<PRECISION);
assert(std::abs(angles[10]-(    0.27946572874843340628E+01 ))<PRECISION);
iers2010::arg2(2017,    0.21220971440623875992E+03, angles);
assert(std::abs(angles[ 0]-(    0.57376826589156095793E+01 ))<PRECISION);
assert(std::abs(angles[ 1]-(    0.26353470615255529808E+01 ))<PRECISION);
assert(std::abs(angles[ 2]-(    0.32679673856641286989E+01 ))<PRECISION);
assert(std::abs(angles[ 3]-(    0.85589306396804687438E+00 ))<PRECISION);
assert(std::abs(angles[ 4]-(    0.51403355123687646255E+01 ))<PRECISION);
assert(std::abs(angles[ 5]-(    0.59734714654468490380E+00 ))<PRECISION);
assert(std::abs(angles[ 6]-(    0.37781968563364571878E+01 ))<PRECISION);
assert(std::abs(angles[ 7]-(    0.44108171804727902554E+01 ))<PRECISION);
assert(std::abs(angles[ 8]-(    0.14014029599611959043E+01 ))<PRECISION);
assert(std::abs(angles[ 9]-(    0.24697188971167491900E+01 ))<PRECISION);
assert(std::abs(angles[10]-(    0.45037349334868110873E+01 ))<PRECISION);
iers2010::arg2(2048,    0.28332670392110259616E+00, angles);
assert(std::abs(angles[ 0]-(    0.38658504702616980353E+01 ))<PRECISION);
assert(std::abs(angles[ 1]-(    0.35603858124087133241E+01 ))<PRECISION);
assert(std::abs(angles[ 2]-(    0.12134184892353516716E+00 ))<PRECISION);
assert(std::abs(angles[ 3]-(    0.75520330825044368339E+00 ))<PRECISION);
assert(std::abs(angles[ 4]-(    0.19483979809201699140E+01 ))<PRECISION);
assert(std::abs(angles[ 5]-(    0.19174524893385722635E+01 ))<PRECISION);
assert(std::abs(angles[ 6]-(    0.16119878314885838222E+01 ))<PRECISION);
assert(std::abs(angles[ 7]-(    0.44561291751872715849E+01 ))<PRECISION);
assert(std::abs(angles[ 8]-(    0.31725479369413136510E+01 ))<PRECISION);
assert(std::abs(angles[ 9]-(    0.37445135172281780456E+01 ))<PRECISION);
assert(std::abs(angles[10]-(    0.34780076989066301962E+01 ))<PRECISION);
iers2010::arg2(2009,    0.12333818250486260126E+03, angles);
assert(std::abs(angles[ 0]-(    0.53762270088134300750E+00 ))<PRECISION);
assert(std::abs(angles[ 1]-(    0.42497236428972060551E+01 ))<PRECISION);
assert(std::abs(angles[ 2]-(    0.60443597119318468458E+01 ))<PRECISION);
assert(std::abs(angles[ 3]-(    0.56936229018673145674E+01 ))<PRECISION);
assert(std::abs(angles[ 4]-(    0.44176077777286053561E+01 ))<PRECISION);
assert(std::abs(angles[ 5]-(    0.24032002303308459545E+01 ))<PRECISION);
assert(std::abs(angles[ 6]-(    0.61153011723481327522E+01 ))<PRECISION);
assert(std::abs(angles[ 7]-(    0.16267519342017635608E+01 ))<PRECISION);
assert(std::abs(angles[ 8]-(    0.51560118885758754459E+01 ))<PRECISION);
assert(std::abs(angles[ 9]-(    0.77645413992176059992E+00 ))<PRECISION);
assert(std::abs(angles[10]-(    0.14439051027637503921E+01 ))<PRECISION);
iers2010::arg2(2047,    0.23294772634754733076E+03, angles);
assert(std::abs(angles[ 0]-(    0.56968469784035917769E+01 ))<PRECISION);
assert(std::abs(angles[ 1]-(    0.56262866739474439726E+01 ))<PRECISION);
assert(std::abs(angles[ 2]-(    0.71253406533120511313E+00 ))<PRECISION);
assert(std::abs(angles[ 3]-(    0.45511935689362559287E+01 ))<PRECISION);
assert(std::abs(angles[ 4]-(    0.38463931112630760367E+01 ))<PRECISION);
assert(std::abs(angles[ 5]-(    0.18504538671359682667E+01 ))<PRECISION);
assert(std::abs(angles[ 6]-(    0.17798935626843501723E+01 ))<PRECISION);
assert(std::abs(angles[ 7]-(    0.31493262612540817713E+01 ))<PRECISION);
assert(std::abs(angles[ 8]-(    0.51375646511373531666E+01 ))<PRECISION);
assert(std::abs(angles[ 9]-(    0.49843292897814137632E+01 ))<PRECISION);
assert(std::abs(angles[10]-(    0.52081085788798304748E+01 ))<PRECISION);
iers2010::arg2(2013,    0.36071960992397595192E+03, angles);
assert(std::abs(angles[ 0]-(    0.51722179690185114964E+01 ))<PRECISION);
assert(std::abs(angles[ 1]-(    0.27596932084507344030E+01 ))<PRECISION);
assert(std::abs(angles[ 2]-(    0.39299892168374839230E+00 ))<PRECISION);
assert(std::abs(angles[ 3]-(    0.60887232146400123156E+01 ))<PRECISION);
assert(std::abs(angles[ 4]-(    0.46151579341149542302E+01 ))<PRECISION);
assert(std::abs(angles[ 5]-(    0.55706003490219302421E+00 ))<PRECISION);
assert(std::abs(angles[ 6]-(    0.44277205815153095614E+01 ))<PRECISION);
assert(std::abs(angles[ 7]-(    0.20610262947470161521E+01 ))<PRECISION);
assert(std::abs(angles[ 8]-(    0.91653011534007333694E+00 ))<PRECISION);
assert(std::abs(angles[ 9]-(    0.47792314821955272919E+01 ))<PRECISION);
assert(std::abs(angles[10]-(    0.33290424410487347018E+01 ))<PRECISION);
iers2010::arg2(2013,    0.13000492558833215639E+03, angles);
assert(std::abs(angles[ 0]-(    0.12117912693676657909E+00 ))<PRECISION);
assert(std::abs(angles[ 1]-(    0.61896724074618159062E-01 ))<PRECISION);
assert(std::abs(angles[ 2]-(    0.39688629930157688364E+01 ))<PRECISION);
assert(std::abs(angles[ 3]-(    0.17362516323309193922E+01 ))<PRECISION);
assert(std::abs(angles[ 4]-(    0.24389221429604077684E+01 ))<PRECISION);
assert(std::abs(angles[ 5]-(    0.39654422911545808006E+01 ))<PRECISION);
assert(std::abs(angles[ 6]-(    0.39061598882937644817E+01 ))<PRECISION);
assert(std::abs(angles[ 7]-(    0.15299408500539968259E+01 ))<PRECISION);
assert(std::abs(angles[ 8]-(    0.16150726756231392756E+01 ))<PRECISION);
assert(std::abs(angles[ 9]-(    0.24355015262147361454E+01 ))<PRECISION);
assert(std::abs(angles[10]-(    0.16743549933704855448E+01 ))<PRECISION);
iers2010::arg2(2035,    0.14348156266808388182E+03, angles);
assert(std::abs(angles[ 0]-(    0.55186712954589367541E+01 ))<PRECISION);
assert(std::abs(angles[ 1]-(    0.60514906202028377891E+01 ))<PRECISION);
assert(std::abs(angles[ 2]-(    0.25020673226238514530E+01 ))<PRECISION);
assert(std::abs(angles[ 3]-(    0.18950406673958255510E+01 ))<PRECISION);
assert(std::abs(angles[ 4]-(    0.56599093140826539639E+01 ))<PRECISION);
assert(std::abs(angles[ 5]-(    0.61419472885529131645E+01 ))<PRECISION);
assert(std::abs(angles[ 6]-(    0.39158130612025843220E+00 ))<PRECISION);
assert(std::abs(angles[ 7]-(    0.31253433157287417998E+01 ))<PRECISION);
assert(std::abs(angles[ 8]-(    0.26595713219238703573E+01 ))<PRECISION);
assert(std::abs(angles[ 9]-(    0.30166122942332123102E+01 ))<PRECISION);
assert(std::abs(angles[10]-(    0.21267436757754012433E+01 ))<PRECISION);
iers2010::arg2(2048,    0.28108128432051137224E+03, angles);
assert(std::abs(angles[ 0]-(    0.12173877295156216860E+01 ))<PRECISION);
assert(std::abs(angles[ 1]-(    0.10214481639562005277E+01 ))<PRECISION);
assert(std::abs(angles[ 2]-(    0.25583542545550415070E+01 ))<PRECISION);
assert(std::abs(angles[ 3]-(    0.15941019535709912702E+01 ))<PRECISION);
assert(std::abs(angles[ 4]-(    0.55094399571702368235E+01 ))<PRECISION);
assert(std::abs(angles[ 5]-(    0.19911330795269037708E+01 ))<PRECISION);
assert(std::abs(angles[ 6]-(    0.17951935139656285401E+01 ))<PRECISION);
assert(std::abs(angles[ 7]-(    0.33320996045663235918E+01 ))<PRECISION);
assert(std::abs(angles[ 8]-(    0.37671703323848504397E+00 ))<PRECISION);
assert(std::abs(angles[ 9]-(    0.49422201867401369668E+01 ))<PRECISION);
assert(std::abs(angles[10]-(    0.57265519420774779746E+00 ))<PRECISION);
iers2010::arg2(2013,    0.30387597200595104141E+03, angles);
assert(std::abs(angles[ 0]-(    0.61934778115416762034E+01 ))<PRECISION);
assert(std::abs(angles[ 1]-(    0.47245956710785517174E+01 ))<PRECISION);
assert(std::abs(angles[ 2]-(    0.18097838123495151308E+01 ))<PRECISION);
assert(std::abs(angles[ 3]-(    0.60978842205930590126E+01 ))<PRECISION);
assert(std::abs(angles[ 4]-(    0.46197384370914775786E+01 ))<PRECISION);
assert(std::abs(angles[ 5]-(    0.15737393744486070091E+01 ))<PRECISION);
assert(std::abs(angles[ 6]-(    0.10485723398703328257E+00 ))<PRECISION);
assert(std::abs(angles[ 7]-(    0.34732306824360321684E+01 ))<PRECISION);
assert(std::abs(angles[ 8]-(    0.61876219898219062543E+01 ))<PRECISION);
assert(std::abs(angles[ 9]-(    0.43837091359870612450E+01 ))<PRECISION);
assert(std::abs(angles[10]-(    0.13733036863108125658E+01 ))<PRECISION);
iers2010::arg2(2029,    0.15558919108247698659E+03, angles);
assert(std::abs(angles[ 0]-(    0.41600153851452645881E+01 ))<PRECISION);
assert(std::abs(angles[ 1]-(    0.11208028867216510704E+01 ))<PRECISION);
assert(std::abs(angles[ 2]-(    0.16184016770568803167E+01 ))<PRECISION);
assert(std::abs(angles[ 3]-(    0.36796943237171788610E+01 ))<PRECISION);
assert(std::abs(angles[ 4]-(    0.26905083506374438684E+00 ))<PRECISION);
assert(std::abs(angles[ 5]-(    0.38909645500817475749E+01 ))<PRECISION);
assert(std::abs(angles[ 6]-(    0.85175205165789691364E+00 ))<PRECISION);
assert(std::abs(angles[ 7]-(    0.13493508419933633036E+01 ))<PRECISION);
assert(std::abs(angles[ 8]-(    0.58028846081930467449E+01 ))<PRECISION);
assert(std::abs(angles[ 9]-(    0.25416238893140459254E+01 ))<PRECISION);
assert(std::abs(angles[10]-(    0.25589016182174475489E+01 ))<PRECISION);
iers2010::arg2(2041,    0.14528576518219577451E+03, angles);
assert(std::abs(angles[ 0]-(    0.57070046212779601547E+01 ))<PRECISION);
assert(std::abs(angles[ 1]-(    0.35910286121619843236E+01 ))<PRECISION);
assert(std::abs(angles[ 2]-(    0.50982906059515755715E+01 ))<PRECISION);
assert(std::abs(angles[ 3]-(    0.57986598401033404571E+01 ))<PRECISION);
assert(std::abs(angles[ 4]-(    0.44701262468466183009E+01 ))<PRECISION);
assert(std::abs(angles[ 5]-(    0.12368783744271354408E+01 ))<PRECISION);
assert(std::abs(angles[ 6]-(    0.54040876724949171717E+01 ))<PRECISION);
assert(std::abs(angles[ 7]-(    0.62816435910075085758E+00 ))<PRECISION);
assert(std::abs(angles[ 8]-(    0.91665094871004271226E-01 ))<PRECISION);
assert(std::abs(angles[ 9]-(    0.60871895334783232556E+00 ))<PRECISION);
assert(std::abs(angles[10]-(    0.22076361659636347667E+01 ))<PRECISION);
iers2010::arg2(1978,    0.18040229133227472857E+03, angles);
assert(std::abs(angles[ 0]-(    0.13503186401719560195E+01 ))<PRECISION);
assert(std::abs(angles[ 1]-(    0.50553383499099897591E+01 ))<PRECISION);
assert(std::abs(angles[ 2]-(    0.59735328668115386108E+01 ))<PRECISION);
assert(std::abs(angles[ 3]-(    0.21624333121857475248E+01 ))<PRECISION);
assert(std::abs(angles[ 4]-(    0.57936056364775581073E+01 ))<PRECISION);
assert(std::abs(angles[ 5]-(    0.18398983108760305072E+01 ))<PRECISION);
assert(std::abs(angles[ 6]-(    0.55449180206119876857E+01 ))<PRECISION);
assert(std::abs(angles[ 7]-(    0.17992723033602686655E+00 ))<PRECISION);
assert(std::abs(angles[ 8]-(    0.81212857520202419437E+00 ))<PRECISION);
assert(std::abs(angles[ 9]-(    0.16599780321317894050E+01 ))<PRECISION);
assert(std::abs(angles[10]-(    0.33902872210496042271E+01 ))<PRECISION);
iers2010::arg2(2039,    0.14519969117783037404E+03, angles);
assert(std::abs(angles[ 0]-(    0.15705929520070753824E+01 ))<PRECISION);
assert(std::abs(angles[ 1]-(    0.25093915489463838320E+01 ))<PRECISION);
assert(std::abs(angles[ 2]-(    0.43065371681296937822E+01 ))<PRECISION);
assert(std::abs(angles[ 3]-(    0.46963218522950569422E+01 ))<PRECISION);
assert(std::abs(angles[ 4]-(    0.39189572529424765435E+01 ))<PRECISION);
assert(std::abs(angles[ 5]-(    0.39348210062420250210E+01 ))<PRECISION);
assert(std::abs(angles[ 6]-(    0.48736196031834921882E+01 ))<PRECISION);
assert(std::abs(angles[ 7]-(    0.38757991518869516767E+00 ))<PRECISION);
assert(std::abs(angles[ 8]-(    0.31257358016160878833E+01 ))<PRECISION);
assert(std::abs(angles[ 9]-(    0.35472445417198841255E+01 ))<PRECISION);
assert(std::abs(angles[10]-(    0.21869337540123865438E+01 ))<PRECISION);
iers2010::arg2(2049,    0.24376990112148052958E+03, angles);
assert(std::abs(angles[ 0]-(    0.19483882814083628432E+01 ))<PRECISION);
assert(std::abs(angles[ 1]-(    0.33916705815902759014E+01 ))<PRECISION);
assert(std::abs(angles[ 2]-(    0.37376600595030069485E+01 ))<PRECISION);
assert(std::abs(angles[ 3]-(    0.27066651111210120462E+01 ))<PRECISION);
assert(std::abs(angles[ 4]-(    0.29241288823554540954E+01 ))<PRECISION);
assert(std::abs(angles[ 5]-(    0.53074447062322676061E+01 ))<PRECISION);
assert(std::abs(angles[ 6]-(    0.46754169923475785708E+00 ))<PRECISION);
assert(std::abs(angles[ 7]-(    0.81353117715460143700E+00 ))<PRECISION);
assert(std::abs(angles[ 8]-(    0.75830343749515094487E+00 ))<PRECISION);
assert(std::abs(angles[ 9]-(    0.44939268329751698161E+01 ))<PRECISION);
assert(std::abs(angles[10]-(    0.55981931406017508834E+01 ))<PRECISION);
iers2010::arg2(2045,    0.28529754594222754349E+03, angles);
assert(std::abs(angles[ 0]-(    0.31486138115833597340E+01 ))<PRECISION);
assert(std::abs(angles[ 1]-(    0.37390699026440210595E+01 ))<PRECISION);
assert(std::abs(angles[ 2]-(    0.18904854111317916932E+01 ))<PRECISION);
assert(std::abs(angles[ 3]-(    0.44817793746066243443E+01 ))<PRECISION);
assert(std::abs(angles[ 4]-(    0.67009336050846712851E+00 ))<PRECISION);
assert(std::abs(angles[ 5]-(    0.24785204510746652318E+01 ))<PRECISION);
assert(std::abs(angles[ 6]-(    0.30689765421355517105E+01 ))<PRECISION);
assert(std::abs(angles[ 7]-(    0.12203920506230971910E+01 ))<PRECISION);
assert(std::abs(angles[ 8]-(    0.13331758462126046538E+01 ))<PRECISION);
assert(std::abs(angles[ 9]-(    0.12581335420488528598E+01 ))<PRECISION);
assert(std::abs(angles[10]-(    0.74271461355636603230E+00 ))<PRECISION);
iers2010::arg2(2017,    0.37483574458488533310E+02, angles);
assert(std::abs(angles[ 0]-(    0.18502163097726906926E+01 ))<PRECISION);
assert(std::abs(angles[ 1]-(    0.60767715058910987125E+01 ))<PRECISION);
assert(std::abs(angles[ 2]-(    0.15236982921489925502E+01 ))<PRECISION);
assert(std::abs(angles[ 3]-(    0.45689428222389949497E+01 ))<PRECISION);
assert(std::abs(angles[ 4]-(    0.38552677379144455472E+01 ))<PRECISION);
assert(std::abs(angles[ 5]-(    0.42781338790349892065E+01 ))<PRECISION);
assert(std::abs(angles[ 6]-(    0.22215037679766425072E+01 ))<PRECISION);
assert(std::abs(angles[ 7]-(    0.39516158614112910641E+01 ))<PRECISION);
assert(std::abs(angles[ 8]-(    0.27187432247988851941E+01 ))<PRECISION);
assert(std::abs(angles[ 9]-(    0.32652637378998861095E+00 ))<PRECISION);
assert(std::abs(angles[10]-(    0.47753649796941246564E+01 ))<PRECISION);
iers2010::arg2(2020,    0.35283654297338631523E+03, angles);
assert(std::abs(angles[ 0]-(    0.30303720017644550921E+01 ))<PRECISION);
assert(std::abs(angles[ 1]-(    0.42291161903320286797E+01 ))<PRECISION);
assert(std::abs(angles[ 2]-(    0.15475381398920688980E+01 ))<PRECISION);
assert(std::abs(angles[ 3]-(    0.97981669547858274427E+00 ))<PRECISION);
assert(std::abs(angles[ 4]-(    0.52022973281240325605E+01 ))<PRECISION);
assert(std::abs(angles[ 5]-(    0.41112599808197813900E+01 ))<PRECISION);
assert(std::abs(angles[ 6]-(    0.53100041693875112969E+01 ))<PRECISION);
assert(std::abs(angles[ 7]-(    0.26284261189473951958E+01 ))<PRECISION);
assert(std::abs(angles[ 8]-(    0.42326589118187527561E+01 ))<PRECISION);
assert(std::abs(angles[ 9]-(    0.14828483173320634592E+01 ))<PRECISION);
assert(std::abs(angles[10]-(    0.30339002677888444737E+01 ))<PRECISION);
iers2010::arg2(2025,    0.16724101771889527868E+03, angles);
assert(std::abs(angles[ 0]-(    0.78448057553530503583E+00 ))<PRECISION);
assert(std::abs(angles[ 1]-(    0.30287158076452245226E+01 ))<PRECISION);
assert(std::abs(angles[ 2]-(    0.20079641231652232136E+01 ))<PRECISION);
assert(std::abs(angles[ 3]-(    0.59874250843014067414E+01 ))<PRECISION);
assert(std::abs(angles[ 4]-(    0.45645088689456514430E+01 ))<PRECISION);
assert(std::abs(angles[ 5]-(    0.25031570137663976539E+01 ))<PRECISION);
assert(std::abs(angles[ 6]-(    0.47473922458791335544E+01 ))<PRECISION);
assert(std::abs(angles[ 7]-(    0.37266405613963158316E+01 ))<PRECISION);
assert(std::abs(angles[ 8]-(    0.52029528383405860836E+01 ))<PRECISION);
assert(std::abs(angles[ 9]-(    0.50597059243314532750E+01 ))<PRECISION);
assert(std::abs(angles[10]-(    0.29587134414424269835E+01 ))<PRECISION);
iers2010::arg2(2019,    0.13643597460577456104E+03, angles);
assert(std::abs(angles[ 0]-(    0.36015762492314706833E+00 ))<PRECISION);
assert(std::abs(angles[ 1]-(    0.54786145445805818355E+01 ))<PRECISION);
assert(std::abs(angles[ 2]-(    0.57887272390517310328E+01 ))<PRECISION);
assert(std::abs(angles[ 3]-(    0.10754519886264475304E+01 ))<PRECISION);
assert(std::abs(angles[ 4]-(    0.52501149746979649535E+01 ))<PRECISION);
assert(std::abs(angles[ 5]-(    0.13932279574067010230E+01 ))<PRECISION);
assert(std::abs(angles[ 6]-(    0.22849956988267194902E+00 ))<PRECISION);
assert(std::abs(angles[ 7]-(    0.53861226435206077667E+00 ))<PRECISION);
assert(std::abs(angles[ 8]-(    0.71530943098324684115E+00 ))<PRECISION);
assert(std::abs(angles[ 9]-(    0.85462322669393131491E+00 ))<PRECISION);
assert(std::abs(angles[10]-(    0.18800302848666206046E+01 ))<PRECISION);
iers2010::arg2(1994,    0.35467713155670610448E+01, angles);
assert(std::abs(angles[ 0]-(    0.43269360890415029530E+01 ))<PRECISION);
assert(std::abs(angles[ 1]-(    0.58774075674381176526E+00 ))<PRECISION);
assert(std::abs(angles[ 2]-(    0.47403335157809536327E+01 ))<PRECISION);
assert(std::abs(angles[ 3]-(    0.41806906587165002520E+01 ))<PRECISION);
assert(std::abs(angles[ 4]-(    0.36611416561531981984E+01 ))<PRECISION);
assert(std::abs(angles[ 5]-(    0.66579443289057849142E+00 ))<PRECISION);
assert(std::abs(angles[ 6]-(    0.32097844077702362142E+01 ))<PRECISION);
assert(std::abs(angles[ 7]-(    0.10791918596263911923E+01 ))<PRECISION);
assert(std::abs(angles[ 8]-(    0.61369587732702512994E+01 ))<PRECISION);
assert(std::abs(angles[ 9]-(    0.58697973286467188814E+01 ))<PRECISION);
assert(std::abs(angles[10]-(    0.35929593501810543899E+01 ))<PRECISION);
iers2010::arg2(1991,    0.12007919372578645323E+03, angles);
assert(std::abs(angles[ 0]-(    0.56106991104451964247E+00 ))<PRECISION);
assert(std::abs(angles[ 1]-(    0.99517699468381559669E+00 ))<PRECISION);
assert(std::abs(angles[ 2]-(    0.44081746705731603697E+01 ))<PRECISION);
assert(std::abs(angles[ 3]-(    0.23049077402624220667E+01 ))<PRECISION);
assert(std::abs(angles[ 4]-(    0.27232501969261591057E+01 ))<PRECISION);
assert(std::abs(angles[ 5]-(    0.41210050212986288898E+01 ))<PRECISION);
assert(std::abs(angles[ 6]-(    0.45551121049372156335E+01 ))<PRECISION);
assert(std::abs(angles[ 7]-(    0.16849244736440454062E+01 ))<PRECISION);
assert(std::abs(angles[ 8]-(    0.17438405661532598856E+01 ))<PRECISION);
assert(std::abs(angles[ 9]-(    0.24360819161203295380E+01 ))<PRECISION);
assert(std::abs(angles[10]-(    0.13097321140461986033E+01 ))<PRECISION);
iers2010::arg2(1986,    0.94979653123370752610E+02, angles);
assert(std::abs(angles[ 0]-(    0.16242019229366349009E+01 ))<PRECISION);
assert(std::abs(angles[ 1]-(    0.60274900836667004711E+01 ))<PRECISION);
assert(std::abs(angles[ 2]-(    0.31567556960045095593E+00 ))<PRECISION);
assert(std::abs(angles[ 3]-(    0.19771082990303057159E+00 ))<PRECISION);
assert(std::abs(angles[ 4]-(    0.16696517417464633581E+01 ))<PRECISION);
assert(std::abs(angles[ 5]-(    0.62377354883704398958E+01 ))<PRECISION);
assert(std::abs(angles[ 6]-(    0.43578383419202637583E+01 ))<PRECISION);
assert(std::abs(angles[ 7]-(    0.49292091350324369614E+01 ))<PRECISION);
assert(std::abs(angles[ 8]-(    0.48567280709577786979E+01 ))<PRECISION);
assert(std::abs(angles[ 9]-(    0.13085432817465161293E+01 ))<PRECISION);
assert(std::abs(angles[10]-(    0.45342298182201545842E+00 ))<PRECISION);
iers2010::arg2(2020,    0.23544148989422120621E+03, angles);
assert(std::abs(angles[ 0]-(    0.40396778805624649067E+01 ))<PRECISION);
assert(std::abs(angles[ 1]-(    0.55479216535294275658E+01 ))<PRECISION);
assert(std::abs(angles[ 2]-(    0.41933556511668612643E+01 ))<PRECISION);
assert(std::abs(angles[ 3]-(    0.45427693170175231785E+01 ))<PRECISION);
assert(std::abs(angles[ 4]-(    0.70058833171391654560E+00 ))<PRECISION);
assert(std::abs(angles[ 5]-(    0.33390895488476388664E+01 ))<PRECISION);
assert(std::abs(angles[ 6]-(    0.48473333218155261193E+01 ))<PRECISION);
assert(std::abs(angles[ 7]-(    0.34927673194483972452E+01 ))<PRECISION);
assert(std::abs(angles[ 8]-(    0.50310669434531263278E+00 ))<PRECISION);
assert(std::abs(angles[ 9]-(    0.61295151655204307417E+01 ))<PRECISION);
assert(std::abs(angles[10]-(    0.52780405996132486734E+01 ))<PRECISION);
iers2010::arg2(2044,    0.19384072979559627470E+03, angles);
assert(std::abs(angles[ 0]-(    0.35775379986109925312E+01 ))<PRECISION);
assert(std::abs(angles[ 1]-(    0.42817293121772888043E+01 ))<PRECISION);
assert(std::abs(angles[ 2]-(    0.61010308667493262647E+01 ))<PRECISION);
assert(std::abs(angles[ 3]-(    0.18517302317424366720E+01 ))<PRECISION);
assert(std::abs(angles[ 4]-(    0.24966614426661664083E+01 ))<PRECISION);
assert(std::abs(angles[ 5]-(    0.10808765559460766781E+01 ))<PRECISION);
assert(std::abs(angles[ 6]-(    0.17850678695110886451E+01 ))<PRECISION);
assert(std::abs(angles[ 7]-(    0.36043694240880483903E+01 ))<PRECISION);
assert(std::abs(angles[ 8]-(    0.45574065959300824602E+01 ))<PRECISION);
assert(std::abs(angles[ 9]-(    0.37597069668566902578E+01 ))<PRECISION);
assert(std::abs(angles[10]-(    0.38532007545556581363E+01 ))<PRECISION);
iers2010::arg2(1984,    0.22105243688549541048E+03, angles);
assert(std::abs(angles[ 0]-(    0.23474007515536001733E+01 ))<PRECISION);
assert(std::abs(angles[ 1]-(    0.65894086431312326457E+00 ))<PRECISION);
assert(std::abs(angles[ 2]-(    0.74861070899790149724E+00 ))<PRECISION);
assert(std::abs(angles[ 3]-(    0.54322308976159234817E+01 ))<PRECISION);
assert(std::abs(angles[ 4]-(    0.42869117756029098132E+01 ))<PRECISION);
assert(std::abs(angles[ 5]-(    0.43436742831316408342E+01 ))<PRECISION);
assert(std::abs(angles[ 6]-(    0.26552143958897573839E+01 ))<PRECISION);
assert(std::abs(angles[ 7]-(    0.27448842405741231687E+01 ))<PRECISION);
assert(std::abs(angles[ 8]-(    0.30848319582821304152E+01 ))<PRECISION);
assert(std::abs(angles[ 9]-(    0.15987909486616231902E+01 ))<PRECISION);
assert(std::abs(angles[10]-(    0.47732909394121776359E+01 ))<PRECISION);
iers2010::arg2(1983,    0.33009832954271905692E+03, angles);
assert(std::abs(angles[ 0]-(    0.50280096092589303680E+01 ))<PRECISION);
assert(std::abs(angles[ 1]-(    0.12356445897703163261E+01 ))<PRECISION);
assert(std::abs(angles[ 2]-(    0.52450383215106910484E+01 ))<PRECISION);
assert(std::abs(angles[ 3]-(    0.34858684875341978682E+01 ))<PRECISION);
assert(std::abs(angles[ 4]-(    0.17213791697225389044E+00 ))<PRECISION);
assert(std::abs(angles[ 5]-(    0.48558716922888365275E+01 ))<PRECISION);
assert(std::abs(angles[ 6]-(    0.10635066727980913015E+01 ))<PRECISION);
assert(std::abs(angles[ 7]-(    0.50729004045369592291E+01 ))<PRECISION);
assert(std::abs(angles[ 8]-(    0.47410475837226897511E+01 ))<PRECISION);
assert(std::abs(angles[ 9]-(    0.60661582940621983084E+01 ))<PRECISION);
assert(std::abs(angles[10]-(    0.22502255968982254331E+01 ))<PRECISION);
iers2010::arg2(2050,    0.27248414283803731450E+03, angles);
assert(std::abs(angles[ 0]-(    0.46329647400432349968E+00 ))<PRECISION);
assert(std::abs(angles[ 1]-(    0.60839139688271286488E+01 ))<PRECISION);
assert(std::abs(angles[ 2]-(    0.43961865756109830272E+00 ))<PRECISION);
assert(std::abs(angles[ 3]-(    0.95326486411408950516E-01 ))<PRECISION);
assert(std::abs(angles[ 4]-(    0.16184595700006525476E+01 ))<PRECISION);
assert(std::abs(angles[ 5]-(    0.51280222111820066289E+01 ))<PRECISION);
assert(std::abs(angles[ 6]-(    0.44654543988264663312E+01 ))<PRECISION);
assert(std::abs(angles[ 7]-(    0.51043443947460573895E+01 ))<PRECISION);
assert(std::abs(angles[ 8]-(    0.59152320515611549467E+01 ))<PRECISION);
assert(std::abs(angles[ 9]-(    0.23686182433877434050E-01 ))<PRECISION);
assert(std::abs(angles[10]-(    0.29460619075202743034E+00 ))<PRECISION);
iers2010::arg2(2027,    0.27126359439888108227E+03, angles);
assert(std::abs(angles[ 0]-(    0.43019223809133677605E+01 ))<PRECISION);
assert(std::abs(angles[ 1]-(    0.33124225320743150291E+01 ))<PRECISION);
assert(std::abs(angles[ 2]-(    0.38411709472002186772E+01 ))<PRECISION);
assert(std::abs(angles[ 3]-(    0.35502390734174937847E+01 ))<PRECISION);
assert(std::abs(angles[ 4]-(    0.20432320991390184872E+00 ))<PRECISION);
assert(std::abs(angles[ 5]-(    0.40975991709986701039E+01 ))<PRECISION);
assert(std::abs(angles[ 6]-(    0.31080993221604771293E+01 ))<PRECISION);
assert(std::abs(angles[ 7]-(    0.36368477372855210206E+01 ))<PRECISION);
assert(std::abs(angles[ 8]-(    0.55315111095059705804E+01 ))<PRECISION);
assert(std::abs(angles[ 9]-(    0.46075598862450561910E+00 ))<PRECISION);
assert(std::abs(angles[10]-(    0.23782109625424396881E+00 ))<PRECISION);
iers2010::arg2(2007,    0.10048541865889671953E+03, angles);
assert(std::abs(angles[ 0]-(    0.27379690531856155644E+01 ))<PRECISION);
assert(std::abs(angles[ 1]-(    0.60999463950832346626E+01 ))<PRECISION);
assert(std::abs(angles[ 2]-(    0.42144191595246027759E+01 ))<PRECISION);
assert(std::abs(angles[ 3]-(    0.45665400074486939275E+00 ))<PRECISION);
assert(std::abs(angles[ 4]-(    0.49407159807571758847E+01 ))<PRECISION);
assert(std::abs(angles[ 5]-(    0.40804383796068890433E+01 ))<PRECISION);
assert(std::abs(angles[ 6]-(    0.11592304143260037108E+01 ))<PRECISION);
assert(std::abs(angles[ 7]-(    0.55568884859458762548E+01 ))<PRECISION);
assert(std::abs(angles[ 8]-(    0.40018870308090370713E+01 ))<PRECISION);
assert(std::abs(angles[ 9]-(    0.48067435888755838391E+01 ))<PRECISION);
assert(std::abs(angles[10]-(    0.63990130087557872685E+00 ))<PRECISION);
iers2010::arg2(2006,    0.15960550776237471382E+03, angles);
assert(std::abs(angles[ 0]-(    0.24635155907705552636E+01 ))<PRECISION);
assert(std::abs(angles[ 1]-(    0.13258441864279424394E+01 ))<PRECISION);
assert(std::abs(angles[ 2]-(    0.45738544624641761516E+01 ))<PRECISION);
assert(std::abs(angles[ 3]-(    0.40081284274278559110E+01 ))<PRECISION);
assert(std::abs(angles[ 4]-(    0.43326788691908291185E+00 ))<PRECISION);
assert(std::abs(angles[ 5]-(    0.20302477038505628570E+01 ))<PRECISION);
assert(std::abs(angles[ 6]-(    0.89257629950885331027E+00 ))<PRECISION);
assert(std::abs(angles[ 7]-(    0.41405865755441837450E+01 ))<PRECISION);
assert(std::abs(angles[ 8]-(    0.15446337630060256174E+01 ))<PRECISION);
assert(std::abs(angles[ 9]-(    0.41728568986604415159E+01 ))<PRECISION);
assert(std::abs(angles[10]-(    0.26822947041739411134E+01 ))<PRECISION);
iers2010::arg2(2048,    0.34518155572665875752E+03, angles);
assert(std::abs(angles[ 0]-(    0.33311243078364327630E+00 ))<PRECISION);
assert(std::abs(angles[ 1]-(    0.22814949117447067550E+01 ))<PRECISION);
assert(std::abs(angles[ 2]-(    0.59070340475631226695E+01 ))<PRECISION);
assert(std::abs(angles[ 3]-(    0.50595541688778595812E+01 ))<PRECISION);
assert(std::abs(angles[ 4]-(    0.95898075764408474697E+00 ))<PRECISION);
assert(std::abs(angles[ 5]-(    0.56573169803210774376E+01 ))<PRECISION);
assert(std::abs(angles[ 6]-(    0.13225141541006593116E+01 ))<PRECISION);
assert(std::abs(angles[ 7]-(    0.49480532899173326200E+01 ))<PRECISION);
assert(std::abs(angles[ 8]-(    0.47264480126595103116E+01 ))<PRECISION);
assert(std::abs(angles[ 9]-(    0.70926682768752868924E+00 ))<PRECISION);
assert(std::abs(angles[10]-(    0.27780623944161035865E+01 ))<PRECISION);
iers2010::arg2(1990,    0.19689187056082732852E+03, angles);
assert(std::abs(angles[ 0]-(    0.14610781171504214626E+01 ))<PRECISION);
assert(std::abs(angles[ 1]-(    0.49243826605714193789E+01 ))<PRECISION);
assert(std::abs(angles[ 2]-(    0.19076929947496665818E+01 ))<PRECISION);
assert(std::abs(angles[ 3]-(    0.26020305407443515833E+01 ))<PRECISION);
assert(std::abs(angles[ 4]-(    0.28718115971671238640E+01 ))<PRECISION);
assert(std::abs(angles[ 5]-(    0.48724518271632248911E+01 ))<PRECISION);
assert(std::abs(angles[ 6]-(    0.20525710634042368952E+01 ))<PRECISION);
assert(std::abs(angles[ 7]-(    0.53190667047624700103E+01 ))<PRECISION);
assert(std::abs(angles[ 8]-(    0.11409832466413121210E+01 ))<PRECISION);
assert(std::abs(angles[ 9]-(    0.58365858411008488815E+01 ))<PRECISION);
assert(std::abs(angles[10]-(    0.39608485988758133090E+01 ))<PRECISION);
iers2010::arg2(1986,    0.27425855491913381456E+03, angles);
assert(std::abs(angles[ 0]-(    0.42373186916418461578E+01 ))<PRECISION);
assert(std::abs(angles[ 1]-(    0.32490946072942725742E+01 ))<PRECISION);
assert(std::abs(angles[ 2]-(    0.60306197055881511915E+01 ))<PRECISION);
assert(std::abs(angles[ 3]-(    0.35875239689820759281E+01 ))<PRECISION);
assert(std::abs(angles[ 4]-(    0.22296565769619292041E+00 ))<PRECISION);
assert(std::abs(angles[ 5]-(    0.40143530339454258637E+01 ))<PRECISION);
assert(std::abs(angles[ 6]-(    0.30261289495979895037E+01 ))<PRECISION);
assert(std::abs(angles[ 7]-(    0.58076540478880929186E+01 ))<PRECISION);
assert(std::abs(angles[ 8]-(    0.56333995201781590367E+01 ))<PRECISION);
assert(std::abs(angles[ 9]-(    0.44898887610623390287E+01 ))<PRECISION);
assert(std::abs(angles[10]-(    0.33843382951695133443E+00 ))<PRECISION);
iers2010::arg2(1980,    0.51350302391615898046E+02, angles);
assert(std::abs(angles[ 0]-(    0.25817276665802211255E+01 ))<PRECISION);
assert(std::abs(angles[ 1]-(    0.44020265223901828833E+01 ))<PRECISION);
assert(std::abs(angles[ 2]-(    0.21193702316998894730E+01 ))<PRECISION);
assert(std::abs(angles[ 3]-(    0.33355339136505364195E+01 ))<PRECISION);
assert(std::abs(angles[ 4]-(    0.32385632836202162821E+01 ))<PRECISION);
assert(std::abs(angles[ 5]-(    0.56263496901395910754E+01 ))<PRECISION);
assert(std::abs(angles[ 6]-(    0.11634632387700420963E+01 ))<PRECISION);
assert(std::abs(angles[ 7]-(    0.51639922552574404335E+01 ))<PRECISION);
assert(std::abs(angles[ 8]-(    0.75381835352141024487E+00 ))<PRECISION);
assert(std::abs(angles[ 9]-(    0.46236348810417382538E+00 ))<PRECISION);
assert(std::abs(angles[10]-(    0.52166987516652412182E+01 ))<PRECISION);
iers2010::arg2(2011,    0.31612059675992151142E+03, angles);
assert(std::abs(angles[ 0]-(    0.96557029196774379898E+00 ))<PRECISION);
assert(std::abs(angles[ 1]-(    0.15154624929621001161E+01 ))<PRECISION);
assert(std::abs(angles[ 2]-(    0.33979721733413583706E+01 ))<PRECISION);
assert(std::abs(angles[ 3]-(    0.32923074359939406008E+01 ))<PRECISION);
assert(std::abs(angles[ 4]-(    0.75357391202125256768E-01 ))<PRECISION);
assert(std::abs(angles[ 5]-(    0.89021290076152581605E+00 ))<PRECISION);
assert(std::abs(angles[ 6]-(    0.14401051017599897364E+01 ))<PRECISION);
assert(std::abs(angles[ 7]-(    0.33226147821351403877E+01 ))<PRECISION);
assert(std::abs(angles[ 8]-(    0.23267413118500144265E+01 ))<PRECISION);
assert(std::abs(angles[ 9]-(    0.38507855097184489068E+01 ))<PRECISION);
assert(std::abs(angles[10]-(    0.17768470269438481068E+01 ))<PRECISION);
iers2010::arg2(1988,    0.19472940544941633334E+03, angles);
assert(std::abs(angles[ 0]-(    0.35314753122234421312E+01 ))<PRECISION);
assert(std::abs(angles[ 1]-(    0.28827873231965668310E+01 ))<PRECISION);
assert(std::abs(angles[ 2]-(    0.15130320381479549496E+01 ))<PRECISION);
assert(std::abs(angles[ 3]-(    0.46829644931634106797E+00 ))<PRECISION);
assert(std::abs(angles[ 4]-(    0.18049445514531186063E+01 ))<PRECISION);
assert(std::abs(angles[ 5]-(    0.17265307607705508985E+01 ))<PRECISION);
assert(std::abs(angles[ 6]-(    0.10778427717435405953E+01 ))<PRECISION);
assert(std::abs(angles[ 7]-(    0.59912727938710119702E+01 ))<PRECISION);
assert(std::abs(angles[ 8]-(    0.32200316525254493172E+01 ))<PRECISION);
assert(std::abs(angles[ 9]-(    0.20184558782004913269E+01 ))<PRECISION);
assert(std::abs(angles[10]-(    0.38687070374254091121E+01 ))<PRECISION);
  return 0;
}

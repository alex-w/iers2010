noinst_PROGRAMS = testIers2010 \
		testBlqIn \
		testHardisp \
		testGpt3

check_PROGRAMS = testFundarg \
	testPmsdnut2 \
	testUtlibr \
	testFcnnut \
	testDehanttideinel \
	testArg2 \
	testCnmtx \
	testOrthoeop \
	testRgZont2 \
	testFcula \
	testFculb \
	testFculZdhPa \
	testGmf \
	testVmf1 \
	testVmf1Ht \
	testGpt2 \
	testGpt \
	testTdfrph

TESTS = testFundarg \
	testPmsdnut2 \
	testUtlibr \
	testFcnnut \
	testDehanttideinel \
	testArg2 \
	testCnmtx \
	testOrthoeop \
	testRgZont2 \
	testFcula \
	testFculb \
	testFculZdhPa \
	testGmf \
	testVmf1 \
	testVmf1Ht \
	testGpt2 \
	testGpt \
	testTdfrph

MCXXFLAGS = \
	-std=c++17 \
	-g \
	-pg \
	-Wall \
	-Wextra \
	-Werror \
	-pedantic \
	-W \
	-Wshadow \
	-Wdisabled-optimization \
	-DDEBUG

AM_LDFLAGS =-lggeodesy -lggdatetime

testIers2010_SOURCES  = test_iers2010.cpp
testIers2010_CXXFLAGS = $(MCXXFLAGS) -I$(top_srcdir)/src 
testIers2010_LDADD    = $(top_srcdir)/src/libiers2010.la $(AM_LDFLAGS)

testBlqIn_SOURCES  = test_blq.cpp
testBlqIn_CXXFLAGS = $(MCXXFLAGS) -I$(top_srcdir)/src 
testBlqIn_LDADD    = $(top_srcdir)/src/libiers2010.la $(AM_LDFLAGS)

testHardisp_SOURCES  = test_hardisp.cpp
testHardisp_CXXFLAGS = $(MCXXFLAGS) -I$(top_srcdir)/src 
testHardisp_LDADD    = $(top_srcdir)/src/libiers2010.la $(AM_LDFLAGS)

testFundarg_SOURCES  = test_fundarg.cpp
testFundarg_CXXFLAGS = $(MCXXFLAGS) -I$(top_srcdir)/src 
testFundarg_LDADD    = $(top_srcdir)/src/libiers2010.la $(AM_LDFLAGS)

testPmsdnut2_SOURCES  = test_pmsdnut2.cpp
testPmsdnut2_CXXFLAGS = $(MCXXFLAGS) -I$(top_srcdir)/src 
testPmsdnut2_LDADD    = $(top_srcdir)/src/libiers2010.la $(AM_LDFLAGS)

testUtlibr_SOURCES  = test_utlibr.cpp
testUtlibr_CXXFLAGS = $(MCXXFLAGS) -I$(top_srcdir)/src 
testUtlibr_LDADD    = $(top_srcdir)/src/libiers2010.la $(AM_LDFLAGS)

testFcnnut_SOURCES  = test_fcnnut.cpp
testFcnnut_CXXFLAGS = $(MCXXFLAGS) -I$(top_srcdir)/src 
testFcnnut_LDADD    = $(top_srcdir)/src/libiers2010.la $(AM_LDFLAGS)

testDehanttideinel_SOURCES  = test_dehanttideinel.cpp
testDehanttideinel_CXXFLAGS = $(MCXXFLAGS) -I$(top_srcdir)/src 
testDehanttideinel_LDADD    = $(top_srcdir)/src/libiers2010.la $(AM_LDFLAGS)

testArg2_SOURCES  = test_arg2.cpp
testArg2_CXXFLAGS = $(MCXXFLAGS) -I$(top_srcdir)/src 
testArg2_LDADD    = $(top_srcdir)/src/libiers2010.la $(AM_LDFLAGS)

testCnmtx_SOURCES  = test_cnmtx.cpp
testCnmtx_CXXFLAGS = $(MCXXFLAGS) -I$(top_srcdir)/src 
testCnmtx_LDADD    = $(top_srcdir)/src/libiers2010.la $(AM_LDFLAGS)

testOrthoeop_SOURCES  = test_orthoeop.cpp
testOrthoeop_CXXFLAGS = $(MCXXFLAGS) -I$(top_srcdir)/src 
testOrthoeop_LDADD    = $(top_srcdir)/src/libiers2010.la $(AM_LDFLAGS)

testRgZont2_SOURCES  = test_rgzont2.cpp
testRgZont2_CXXFLAGS = $(MCXXFLAGS) -I$(top_srcdir)/src 
testRgZont2_LDADD    = $(top_srcdir)/src/libiers2010.la $(AM_LDFLAGS)

testFcula_SOURCES  = test_fcula.cpp
testFcula_CXXFLAGS = $(MCXXFLAGS) -I$(top_srcdir)/src 
testFcula_LDADD    = $(top_srcdir)/src/libiers2010.la $(AM_LDFLAGS)

testFculb_SOURCES  = test_fculb.cpp
testFculb_CXXFLAGS = $(MCXXFLAGS) -I$(top_srcdir)/src 
testFculb_LDADD    = $(top_srcdir)/src/libiers2010.la $(AM_LDFLAGS)

testFculZdhPa_SOURCES  = test_fculzdhpa.cpp
testFculZdhPa_CXXFLAGS = $(MCXXFLAGS) -I$(top_srcdir)/src 
testFculZdhPa_LDADD    = $(top_srcdir)/src/libiers2010.la $(AM_LDFLAGS)

testGmf_SOURCES  = test_gmf.cpp
testGmf_CXXFLAGS = $(MCXXFLAGS) -I$(top_srcdir)/src 
testGmf_LDADD    = $(top_srcdir)/src/libiers2010.la $(AM_LDFLAGS)

testVmf1_SOURCES  = test_vmf1.cpp
testVmf1_CXXFLAGS = $(MCXXFLAGS) -I$(top_srcdir)/src 
testVmf1_LDADD    = $(top_srcdir)/src/libiers2010.la $(AM_LDFLAGS)

testVmf1Ht_SOURCES  = test_vmf1ht.cpp
testVmf1Ht_CXXFLAGS = $(MCXXFLAGS) -I$(top_srcdir)/src 
testVmf1Ht_LDADD    = $(top_srcdir)/src/libiers2010.la $(AM_LDFLAGS)

testGpt_SOURCES  = test_gpt.cpp
testGpt_CXXFLAGS = $(MCXXFLAGS) -I$(top_srcdir)/src 
testGpt_LDADD    = $(top_srcdir)/src/libiers2010.la $(AM_LDFLAGS)

testGpt2_SOURCES  = test_gpt2.cpp
testGpt2_CXXFLAGS = $(MCXXFLAGS) -I$(top_srcdir)/src 
testGpt2_LDADD    = $(top_srcdir)/src/libiers2010.la $(AM_LDFLAGS)

testGpt3_SOURCES  = test_gpt3.cpp
testGpt3_CXXFLAGS = $(MCXXFLAGS) -I$(top_srcdir)/src 
testGpt3_LDADD    = $(top_srcdir)/src/libiers2010.la $(AM_LDFLAGS)

testTdfrph_SOURCES  = test_tdfrph.cpp
testTdfrph_CXXFLAGS = $(MCXXFLAGS) -I$(top_srcdir)/src 
testTdfrph_LDADD    = $(top_srcdir)/src/libiers2010.la $(AM_LDFLAGS)

#check_PROGRAMS    = test
#dist_test_SOURCES = test.cpp
#EXTRA_DIST        = hardisp_results_onsa \
#					hardisp_results_reyk \
#					reyk.blq \
#					onsa.blq
#test_CXXFLAGS     = -I$(top_srcdir)/src -L$(top_srcdir)/src -std=c++11
#test_LDADD        = $(top_srcdir)/src/libiers10++.a
#
#check_SCRIPTS     = greptest.sh
#TESTS             = $(check_SCRIPTS)
#
#EXTRA_PROGRAMS            = test-hardisp
#dist_test_hardisp_SOURCES = test-hardisp.cpp
#test_hardisp_CXXFLAGS     = -I$(top_srcdir)/src -L$(top_srcdir)/src -std=c++11
#test_hardisp_LDADD        = $(top_srcdir)/src/libiers10++.a
#
#greptest.sh:
#	echo './test | grep "Library Status : OK"' > greptest.sh
#	chmod +x greptest.sh
#
#CLEANFILES        = greptest.sh

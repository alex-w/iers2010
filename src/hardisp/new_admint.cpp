#include "hardisp.hpp"
#include "iau.hpp"
#include "fundarg.hpp"
#include "cspline.hpp"
#include <numeric>
#include <algorithm>
#ifdef DEBUG
#include <cassert>
#endif

namespace {
struct Constituent {dso::DoodsonNumber d; double ampl; };
constexpr const int NTIN = 342;
constexpr std::array<Constituent,NTIN> AllConstituents = {{{2, 0, 0, 0, 0, 0}, +6.32208e-01},
                                 {{2, 2, -2, 0, 0, 0}, +2.94107e-01},
                                 {{2, -1, 0, 1, 0, 0}, +1.21046e-01},
                                 {{2, 2, 0, 0, 0, 0}, +7.99150e-02},
                                 {{2, 2, 0, 0, 1, 0}, +2.38180e-02},
                                 {{2, 0, 0, 0, -1, 0}, -2.35890e-02},
                                 {{2, -1, 2, -1, 0, 0}, +2.29940e-02},
                                 {{2, -2, 2, 0, 0, 0}, +1.93330e-02},
                                 {{2, 1, 0, -1, 0, 0}, -1.78710e-02},
                                 {{2, 2, -3, 0, 0, 1}, +1.71920e-02},
                                 {{2, -2, 0, 2, 0, 0}, +1.60180e-02},
                                 {{2, -3, 2, 1, 0, 0}, +4.67100e-03},
                                 {{2, 1, -2, 1, 0, 0}, -4.66200e-03},
                                 {{2, -1, 0, 1, -1, 0}, -4.51900e-03},
                                 {{2, 3, 0, -1, 0, 0}, +4.47000e-03},
                                 {{2, 1, 0, 1, 0, 0}, +4.46700e-03},
                                 {{2, 2, 0, 0, 2, 0}, +2.58900e-03},
                                 {{2, 2, -1, 0, 0, -1}, -2.45500e-03},
                                 {{2, 0, -1, 0, 0, 1}, -2.17200e-03},
                                 {{2, 1, 0, 1, 1, 0}, +1.97200e-03},
                                 {{2, 3, 0, -1, 1, 0}, +1.94700e-03},
                                 {{2, 0, 1, 0, 0, -1}, +1.91400e-03},
                                 {{2, 0, -2, 2, 0, 0}, -1.89800e-03},
                                 {{2, -3, 0, 3, 0, 0}, +1.80200e-03},
                                 {{2, -2, 3, 0, 0, -1}, +1.30400e-03},
                                 {{2, 4, 0, 0, 0, 0}, +1.17000e-03},
                                 {{2, -1, 1, 1, 0, -1}, +1.13000e-03},
                                 {{2, -1, 3, -1, 0, -1}, +1.06100e-03},
                                 {{2, 2, 0, 0, -1, 0}, -1.02200e-03},
                                 {{2, -1, -1, 1, 0, 1}, -1.01700e-03},
                                 {{2, 4, 0, 0, 1, 0}, +1.01400e-03},
                                 {{2, -3, 4, -1, 0, 0}, +9.01000e-04},
                                 {{2, -1, 2, -1, -1, 0}, -8.57000e-04},
                                 {{2, 3, -2, 1, 0, 0}, +8.55000e-04},
                                 {{2, 1, 2, -1, 0, 0}, +8.55000e-04},
                                 {{2, -4, 2, 2, 0, 0}, +7.72000e-04},
                                 {{2, 4, -2, 0, 0, 0}, +7.41000e-04},
                                 {{2, 0, 2, 0, 0, 0}, +7.41000e-04},
                                 {{2, -2, 2, 0, -1, 0}, -7.21000e-04},
                                 {{2, 2, -4, 0, 0, 2}, +6.98000e-04},
                                 {{2, 2, -2, 0, -1, 0}, +6.58000e-04},
                                 {{2, 1, 0, -1, -1, 0}, +6.54000e-04},
                                 {{2, -1, 1, 0, 0, 0}, -6.53000e-04},
                                 {{2, 2, -1, 0, 0, 1}, +6.33000e-04},
                                 {{2, 2, 1, 0, 0, -1}, +6.26000e-04},
                                 {{2, -2, 0, 2, -1, 0}, -5.98000e-04},
                                 {{2, -2, 4, -2, 0, 0}, +5.90000e-04},
                                 {{2, 2, 2, 0, 0, 0}, +5.44000e-04},
                                 {{2, -4, 4, 0, 0, 0}, +4.79000e-04},
                                 {{2, -1, 0, -1, -2, 0}, -4.64000e-04},
                                 {{2, 1, 2, -1, 1, 0}, +4.13000e-04},
                                 {{2, -1, -2, 3, 0, 0}, -3.90000e-04},
                                 {{2, 3, -2, 1, 1, 0}, +3.73000e-04},
                                 {{2, 4, 0, -2, 0, 0}, +3.66000e-04},
                                 {{2, 0, 0, 2, 0, 0}, +3.66000e-04},
                                 {{2, 0, 2, -2, 0, 0}, -3.60000e-04},
                                 {{2, 0, 2, 0, 1, 0}, -3.55000e-04},
                                 {{2, -3, 3, 1, 0, -1}, +3.54000e-04},
                                 {{2, 0, 0, 0, -2, 0}, +3.29000e-04},
                                 {{2, 4, 0, 0, 2, 0}, +3.28000e-04},
                                 {{2, 4, -2, 0, 1, 0}, +3.19000e-04},
                                 {{2, 0, 0, 0, 0, 2}, +3.02000e-04},
                                 {{2, 1, 0, 1, 2, 0}, +2.79000e-04},
                                 {{2, 0, -2, 0, -2, 0}, -2.74000e-04},
                                 {{2, -2, 1, 0, 0, 1}, -2.72000e-04},
                                 {{2, -2, 1, 2, 0, -1}, +2.48000e-04},
                                 {{2, -1, 1, -1, 0, 1}, -2.25000e-04},
                                 {{2, 5, 0, -1, 0, 0}, +2.24000e-04},
                                 {{2, 1, -3, 1, 0, 1}, -2.23000e-04},
                                 {{2, -2, -1, 2, 0, 1}, -2.16000e-04},
                                 {{2, 3, 0, -1, 2, 0}, +2.11000e-04},
                                 {{2, 1, -2, 1, -1, 0}, +2.09000e-04},
                                 {{2, 5, 0, -1, 1, 0}, +1.94000e-04},
                                 {{2, -4, 0, 4, 0, 0}, +1.85000e-04},
                                 {{2, -3, 2, 1, -1, 0}, -1.74000e-04},
                                 {{2, -2, 1, 1, 0, 0}, -1.71000e-04},
                                 {{2, 4, 0, -2, 1, 0}, +1.59000e-04},
                                 {{2, 0, 0, 2, 1, 0}, +1.31000e-04},
                                 {{2, -5, 4, 1, 0, 0}, +1.27000e-04},
                                 {{2, 0, 2, 0, 2, 0}, +1.20000e-04},
                                 {{2, -1, 2, 1, 0, 0}, +1.18000e-04},
                                 {{2, 5, -2, -1, 0, 0}, +1.17000e-04},
                                 {{2, 1, -1, 0, 0, 0}, +1.08000e-04},
                                 {{2, 2, -2, 0, 0, 2}, +1.07000e-04},
                                 {{2, -5, 2, 3, 0, 0}, +1.05000e-04},
                                 {{2, -1, -2, 1, -2, 0}, -1.02000e-04},
                                 {{2, -3, 5, -1, 0, -1}, +1.02000e-04},
                                 {{2, -1, 0, 0, 0, 1}, +9.90000e-05},
                                 {{2, -2, 0, 0, -2, 0}, -9.60000e-05},
                                 {{2, 0, -1, 1, 0, 0}, +9.50000e-05},
                                 {{2, -3, 1, 1, 0, 1}, -8.90000e-05},
                                 {{2, 3, 0, -1, -1, 0}, -8.50000e-05},
                                 {{2, 1, 0, 1, -1, 0}, -8.40000e-05},
                                 {{2, -1, 2, 1, 1, 0}, -8.10000e-05},
                                 {{2, 0, -3, 2, 0, 1}, -7.70000e-05},
                                 {{2, 1, -1, -1, 0, 1}, -7.20000e-05},
                                 {{2, -3, 0, 3, -1, 0}, -6.70000e-05},
                                 {{2, 0, -2, 2, -1, 0}, +6.60000e-05},
                                 {{2, -4, 3, 2, 0, -1}, +6.40000e-05},
                                 {{2, -1, 0, 1, -2, 0}, +6.30000e-05},
                                 {{2, 5, 0, -1, 2, 0}, +6.30000e-05},
                                 {{2, -4, 5, 0, 0, -1}, +6.30000e-05},
                                 {{2, -2, 4, 0, 0, -2}, +6.20000e-05},
                                 {{2, -1, 0, 1, 0, 2}, +6.20000e-05},
                                 {{2, -2, -2, 4, 0, 0}, -6.00000e-05},
                                 {{2, 3, -2, -1, -1, 0}, +5.60000e-05},
                                 {{2, -2, 5, -2, 0, -1}, +5.30000e-05},
                                 {{2, 0, -1, 0, -1, 1}, +5.10000e-05},
                                 {{2, 5, -2, -1, 1, 0}, +5.00000e-05},
                                 {{1, 1, 0, 0, 0, 0}, +3.68645e-01},
                                 {{1, -1, 0, 0, 0, 0}, -2.62232e-01},
                                 {{1, 1, -2, 0, 0, 0}, -1.21995e-01},
                                 {{1, -2, 0, 1, 0, 0}, -5.02080e-02},
                                 {{1, 1, 0, 0, 1, 0}, +5.00310e-02},
                                 {{1, -1, 0, 0, -1, 0}, -4.94700e-02},
                                 {{1, 2, 0, -1, 0, 0}, +2.06200e-02},
                                 {{1, 0, 0, 1, 0, 0}, +2.06130e-02},
                                 {{1, 3, 0, 0, 0, 0}, +1.12790e-02},
                                 {{1, -2, 2, -1, 0, 0}, -9.53000e-03},
                                 {{1, -2, 0, 1, -1, 0}, -9.46900e-03},
                                 {{1, -3, 2, 0, 0, 0}, -8.01200e-03},
                                 {{1, 0, 0, -1, 0, 0}, +7.41400e-03},
                                 {{1, 1, 0, 0, -1, 0}, -7.30000e-03},
                                 {{1, 3, 0, 0, 1, 0}, +7.22700e-03},
                                 {{1, 1, -3, 0, 0, 1}, -7.13100e-03},
                                 {{1, -3, 0, 2, 0, 0}, -6.64400e-03},
                                 {{1, 1, 2, 0, 0, 0}, +5.24900e-03},
                                 {{1, 0, 0, 1, 1, 0}, +4.13700e-03},
                                 {{1, 2, 0, -1, 1, 0}, +4.08700e-03},
                                 {{1, 0, 2, -1, 0, 0}, +3.94400e-03},
                                 {{1, 2, -2, 1, 0, 0}, +3.94300e-03},
                                 {{1, 3, -2, 0, 0, 0}, +3.42000e-03},
                                 {{1, -1, 2, 0, 0, 0}, +3.41800e-03},
                                 {{1, 1, 1, 0, 0, -1}, +2.88500e-03},
                                 {{1, 1, -1, 0, 0, 1}, +2.88400e-03},
                                 {{1, 4, 0, -1, 0, 0}, +2.16000e-03},
                                 {{1, -4, 2, 1, 0, 0}, -1.93600e-03},
                                 {{1, 0, -2, 1, 0, 0}, +1.93400e-03},
                                 {{1, -2, 2, -1, -1, 0}, -1.79800e-03},
                                 {{1, 3, 0, -2, 0, 0}, +1.69000e-03},
                                 {{1, -1, 0, 2, 0, 0}, +1.68900e-03},
                                 {{1, -1, 0, 0, -2, 0}, +1.51600e-03},
                                 {{1, 3, 0, 0, 2, 0}, +1.51400e-03},
                                 {{1, -3, 2, 0, -1, 0}, -1.51100e-03},
                                 {{1, 4, 0, -1, 1, 0}, +1.38300e-03},
                                 {{1, 0, 0, -1, -1, 0}, +1.37200e-03},
                                 {{1, 1, -2, 0, -1, 0}, +1.37100e-03},
                                 {{1, -3, 0, 2, -1, 0}, -1.25300e-03},
                                 {{1, 1, 0, 0, 2, 0}, -1.07500e-03},
                                 {{1, 1, -1, 0, 0, -1}, +1.02000e-03},
                                 {{1, -1, -1, 0, 0, 1}, +9.01000e-04},
                                 {{1, 0, 2, -1, 1, 0}, +8.65000e-04},
                                 {{1, -1, 1, 0, 0, -1}, -7.94000e-04},
                                 {{1, -1, -2, 2, 0, 0}, +7.88000e-04},
                                 {{1, 2, -2, 1, 1, 0}, +7.82000e-04},
                                 {{1, -4, 0, 3, 0, 0}, -7.47000e-04},
                                 {{1, -1, 2, 0, 1, 0}, -7.45000e-04},
                                 {{1, 3, -2, 0, 1, 0}, +6.70000e-04},
                                 {{1, 2, 0, -1, -1, 0}, -6.03000e-04},
                                 {{1, 0, 0, 1, -1, 0}, -5.97000e-04},
                                 {{1, -2, 2, 1, 0, 0}, +5.42000e-04},
                                 {{1, 4, -2, -1, 0, 0}, +5.42000e-04},
                                 {{1, -3, 3, 0, 0, -1}, -5.41000e-04},
                                 {{1, -2, 1, 1, 0, -1}, -4.69000e-04},
                                 {{1, -2, 3, -1, 0, -1}, -4.40000e-04},
                                 {{1, 0, -2, 1, -1, 0}, +4.38000e-04},
                                 {{1, -2, -1, 1, 0, 1}, +4.22000e-04},
                                 {{1, 4, -2, 1, 0, 0}, +4.10000e-04},
                                 {{1, -4, 4, -1, 0, 0}, -3.74000e-04},
                                 {{1, -4, 2, 1, -1, 0}, -3.65000e-04},
                                 {{1, 5, -2, 0, 0, 0}, +3.45000e-04},
                                 {{1, 3, 0, -2, 1, 0}, +3.35000e-04},
                                 {{1, -5, 2, 2, 0, 0}, -3.21000e-04},
                                 {{1, 2, 0, 1, 0, 0}, -3.19000e-04},
                                 {{1, 1, 3, 0, 0, -1}, +3.07000e-04},
                                 {{1, -2, 0, 1, -2, 0}, +2.91000e-04},
                                 {{1, 4, 0, -1, 2, 0}, +2.90000e-04},
                                 {{1, 1, -4, 0, 0, 2}, -2.89000e-04},
                                 {{1, 5, 0, -2, 0, 0}, +2.86000e-04},
                                 {{1, -1, 0, 2, 1, 0}, +2.75000e-04},
                                 {{1, -2, 1, 0, 0, 0}, +2.71000e-04},
                                 {{1, 4, -2, 1, 1, 0}, +2.63000e-04},
                                 {{1, -3, 4, -2, 0, 0}, -2.45000e-04},
                                 {{1, -1, 3, 0, 0, -1}, +2.25000e-04},
                                 {{1, 3, -3, 0, 0, 1}, +2.25000e-04},
                                 {{1, 5, -2, 0, 1, 0}, +2.21000e-04},
                                 {{1, 1, 2, 0, 1, 0}, -2.02000e-04},
                                 {{1, 2, 0, 1, 1, 0}, -2.00000e-04},
                                 {{1, -5, 4, 0, 0, 0}, -1.99000e-04},
                                 {{1, -2, 0, -1, -2, 0}, +1.92000e-04},
                                 {{1, 5, 0, -2, 1, 0}, +1.83000e-04},
                                 {{1, 1, 2, -2, 0, 0}, +1.83000e-04},
                                 {{1, 1, -2, 2, 0, 0}, +1.83000e-04},
                                 {{1, -2, 2, 1, 1, 0}, -1.70000e-04},
                                 {{1, 0, 3, -1, 0, -1}, +1.69000e-04},
                                 {{1, 2, -3, 1, 0, 1}, +1.68000e-04},
                                 {{1, -2, -2, 3, 0, 0}, +1.62000e-04},
                                 {{1, -1, 2, -2, 0, 0}, +1.49000e-04},
                                 {{1, -4, 3, 1, 0, -1}, -1.47000e-04},
                                 {{1, -4, 0, 3, -1, 0}, -1.41000e-04},
                                 {{1, -1, -2, 2, -1, 0}, +1.38000e-04},
                                 {{1, -2, 0, 3, 0, 0}, +1.36000e-04},
                                 {{1, 4, 0, -3, 0, 0}, +1.36000e-04},
                                 {{1, 0, 1, 1, 0, -1}, +1.27000e-04},
                                 {{1, 2, -1, -1, 0, 1}, +1.27000e-04},
                                 {{1, 2, -2, 1, -1, 0}, -1.26000e-04},
                                 {{1, 0, 0, -1, -2, 0}, -1.21000e-04},
                                 {{1, 2, 0, 1, 2, 0}, -1.21000e-04},
                                 {{1, 2, -2, -1, -1, 0}, +1.17000e-04},
                                 {{1, 0, 0, 1, 2, 0}, -1.16000e-04},
                                 {{1, 0, 1, 0, 0, 0}, -1.14000e-04},
                                 {{1, 2, -1, 0, 0, 0}, -1.14000e-04},
                                 {{1, 0, 2, -1, -1, 0}, -1.14000e-04},
                                 {{1, -1, -2, 0, -2, 0}, +1.14000e-04},
                                 {{1, -3, 1, 0, 0, 1}, +1.13000e-04},
                                 {{1, 3, -2, 0, -1, 0}, +1.09000e-04},
                                 {{1, -1, -1, 0, -1, 1}, +1.08000e-04},
                                 {{1, 4, -2, -1, 1, 0}, +1.06000e-04},
                                 {{1, 2, 1, -1, 0, -1}, -1.06000e-04},
                                 {{1, 0, -1, 1, 0, 1}, -1.06000e-04},
                                 {{1, -2, 4, -1, 0, 0}, +1.05000e-04},
                                 {{1, 4, -4, 1, 0, 0}, +1.04000e-04},
                                 {{1, -3, 1, 2, 0, -1}, -1.03000e-04},
                                 {{1, -3, 3, 0, -1, -1}, -1.00000e-04},
                                 {{1, 1, 2, 0, 2, 0}, -1.00000e-04},
                                 {{1, 1, -2, 0, -2, 0}, -1.00000e-04},
                                 {{1, 3, 0, 0, 3, 0}, +9.90000e-05},
                                 {{1, -1, 2, 0, -1, 0}, -9.80000e-05},
                                 {{1, -2, 1, -1, 0, 1}, +9.30000e-05},
                                 {{1, 0, -3, 1, 0, 1}, +9.30000e-05},
                                 {{1, -3, -1, 2, 0, 1}, +9.00000e-05},
                                 {{1, 2, 0, -1, 2, 0}, -8.80000e-05},
                                 {{1, 6, -2, -1, 0, 0}, +8.30000e-05},
                                 {{1, 2, 2, -1, 0, 0}, -8.30000e-05},
                                 {{1, -1, 1, 0, -1, -1}, -8.20000e-05},
                                 {{1, -2, 3, -1, -1, -1}, -8.10000e-05},
                                 {{1, -1, 0, 0, 0, 2}, -7.90000e-05},
                                 {{1, -5, 0, 4, 0, 0}, -7.70000e-05},
                                 {{1, 1, 0, 0, 0, -2}, -7.50000e-05},
                                 {{1, -2, 1, 1, -1, -1}, -7.50000e-05},
                                 {{1, 1, -1, 0, 1, 1}, -7.50000e-05},
                                 {{1, 1, 2, 0, 0, -2}, +7.10000e-05},
                                 {{1, -3, 1, 1, 0, 0}, +7.10000e-05},
                                 {{1, -4, 4, -1, -1, 0}, -7.10000e-05},
                                 {{1, 1, 0, -2, -1, 0}, +6.80000e-05},
                                 {{1, -2, -1, 1, -1, 1}, +6.80000e-05},
                                 {{1, -3, 2, 2, 0, 0}, +6.50000e-05},
                                 {{1, 5, -2, -2, 0, 0}, +6.50000e-05},
                                 {{1, 3, -4, 2, 0, 0}, +6.40000e-05},
                                 {{1, 1, -2, 0, 0, 2}, +6.40000e-05},
                                 {{1, -1, 4, -2, 0, 0}, +6.40000e-05},
                                 {{1, 2, 2, -1, 1, 0}, -6.40000e-05},
                                 {{1, -5, 2, 2, -1, 0}, -6.00000e-05},
                                 {{1, 1, -3, 0, -1, 1}, +5.60000e-05},
                                 {{1, 1, 1, 0, 1, -1}, +5.60000e-05},
                                 {{1, 6, -2, -1, 1, 0}, +5.30000e-05},
                                 {{1, -2, 2, -1, -2, 0}, +5.30000e-05},
                                 {{1, 4, -2, 1, 2, 0}, +5.30000e-05},
                                 {{1, -6, 4, 1, 0, 0}, -5.30000e-05},
                                 {{1, 5, -4, 0, 0, 0}, +5.30000e-05},
                                 {{1, -3, 4, 0, 0, 0}, +5.30000e-05},
                                 {{1, 1, 2, -2, 1, 0}, +5.20000e-05},
                                 {{1, -2, 1, 0, -1, 0}, +5.00000e-05},
                                 {{0, 2, 0, 0, 0, 0}, -6.66070e-02},
                                 {{0, 1, 0, -1, 0, 0}, -3.51840e-02},
                                 {{0, 0, 2, 0, 0, 0}, -3.09880e-02},
                                 {{0, 0, 0, 0, 1, 0}, +2.79290e-02},
                                 {{0, 2, 0, 0, 1, 0}, -2.76160e-02},
                                 {{0, 3, 0, -1, 0, 0}, -1.27530e-02},
                                 {{0, 1, -2, 1, 0, 0}, -6.72800e-03},
                                 {{0, 2, -2, 0, 0, 0}, -5.83700e-03},
                                 {{0, 3, 0, -1, 1, 0}, -5.28600e-03},
                                 {{0, 0, 1, 0, 0, -1}, -4.92100e-03},
                                 {{0, 2, 0, -2, 0, 0}, -2.88400e-03},
                                 {{0, 2, 0, 0, 2, 0}, -2.58300e-03},
                                 {{0, 3, -2, 1, 0, 0}, -2.42200e-03},
                                 {{0, 1, 0, -1, -1, 0}, +2.31000e-03},
                                 {{0, 1, 0, -1, 1, 0}, +2.28300e-03},
                                 {{0, 4, -2, 0, 0, 0}, -2.03700e-03},
                                 {{0, 1, 0, 1, 0, 0}, +1.88300e-03},
                                 {{0, 0, 3, 0, 0, -1}, -1.81100e-03},
                                 {{0, 4, 0, -2, 0, 0}, -1.68700e-03},
                                 {{0, 3, -2, 1, 1, 0}, -1.00400e-03},
                                 {{0, 3, -2, -1, 0, 0}, -9.25000e-04},
                                 {{0, 4, -2, 0, 1, 0}, -8.44000e-04},
                                 {{0, 0, 2, 0, 1, 0}, +7.66000e-04},
                                 {{0, 1, 0, 1, 1, 0}, +7.66000e-04},
                                 {{0, 4, 0, -2, 1, 0}, -7.00000e-04},
                                 {{0, 3, 0, -1, 2, 0}, -4.95000e-04},
                                 {{0, 5, -2, -1, 0, 0}, -4.92000e-04},
                                 {{0, 1, 2, -1, 0, 0}, +4.91000e-04},
                                 {{0, 1, -2, 1, -1, 0}, +4.83000e-04},
                                 {{0, 1, -2, 1, 1, 0}, +4.37000e-04},
                                 {{0, 2, -2, 0, -1, 0}, -4.16000e-04},
                                 {{0, 2, -3, 0, 0, 1}, -3.84000e-04},
                                 {{0, 2, -2, 0, 1, 0}, +3.74000e-04},
                                 {{0, 0, 2, -2, 0, 0}, -3.12000e-04},
                                 {{0, 1, -3, 1, 0, 1}, -2.88000e-04},
                                 {{0, 0, 0, 0, 2, 0}, -2.73000e-04},
                                 {{0, 0, 1, 0, 0, 1}, +2.59000e-04},
                                 {{0, 1, 2, -1, 1, 0}, +2.45000e-04},
                                 {{0, 3, 0, -3, 0, 0}, -2.32000e-04},
                                 {{0, 2, 1, 0, 0, -1}, +2.29000e-04},
                                 {{0, 1, -1, -1, 0, 1}, -2.16000e-04},
                                 {{0, 1, 0, 1, 2, 0}, +2.06000e-04},
                                 {{0, 5, -2, -1, 1, 0}, -2.04000e-04},
                                 {{0, 2, -1, 0, 0, 1}, -2.02000e-04},
                                 {{0, 2, 2, -2, 0, 0}, +2.00000e-04},
                                 {{0, 1, -1, 0, 0, 0}, +1.95000e-04},
                                 {{0, 5, 0, -3, 0, 0}, -1.90000e-04},
                                 {{0, 2, 0, -2, 1, 0}, +1.87000e-04},
                                 {{0, 1, 1, -1, 0, -1}, +1.80000e-04},
                                 {{0, 3, -4, 1, 0, 0}, -1.79000e-04},
                                 {{0, 0, 2, 0, 2, 0}, +1.70000e-04},
                                 {{0, 2, 0, -2, -1, 0}, +1.53000e-04},
                                 {{0, 4, -3, 0, 0, 1}, -1.37000e-04},
                                 {{0, 3, -1, -1, 0, 1}, -1.19000e-04},
                                 {{0, 0, 2, 0, 0, -2}, -1.19000e-04},
                                 {{0, 3, -3, 1, 0, 1}, -1.12000e-04},
                                 {{0, 2, -4, 2, 0, 0}, -1.10000e-04},
                                 {{0, 4, -2, -2, 0, 0}, -1.10000e-04},
                                 {{0, 3, 1, -1, 0, -1}, +1.07000e-04},
                                 {{0, 5, -4, 1, 0, 0}, -9.50000e-05},
                                 {{0, 3, -2, -1, -1, 0}, -9.50000e-05},
                                 {{0, 3, -2, 1, 2, 0}, -9.10000e-05},
                                 {{0, 4, -4, 0, 0, 0}, -9.00000e-05},
                                 {{0, 6, -2, -2, 0, 0}, -8.10000e-05},
                                 {{0, 5, 0, -3, 1, 0}, -7.90000e-05},
                                 {{0, 4, -2, 0, 2, 0}, -7.90000e-05},
                                 {{0, 2, 2, -2, 1, 0}, +7.70000e-05},
                                 {{0, 0, 4, 0, 0, -2}, -7.30000e-05},
                                 {{0, 3, -1, 0, 0, 0}, +6.90000e-05},
                                 {{0, 3, -3, -1, 0, 1}, -6.70000e-05},
                                 {{0, 4, 0, -2, 2, 0}, -6.60000e-05},
                                 {{0, 1, -2, -1, -1, 0}, +6.50000e-05},
                                 {{0, 2, -1, 0, 0, -1}, +6.40000e-05},
                                 {{0, 4, -4, 2, 0, 0}, -6.20000e-05},
                                 {{0, 2, 1, 0, 1, -1}, +6.00000e-05},
                                 {{0, 3, -2, -1, 1, 0}, +5.90000e-05},
                                 {{0, 4, -3, 0, 1, 1}, -5.60000e-05},
                                 {{0, 2, 0, 0, 3, 0}, +5.50000e-05},
                                 {{0, 6, -4, 0, 0, 0}, -5.10000e-05}};
}// unnamed namespace

/// @brief Compute (Doodson) angles beta and beta_freq for given epoch.
/// These angles enable the computation of frequency and phase for any
/// tidal constituent (at given epoch)
int iers2010::Hardisp::operator()(const dso::TwoPartDate &tt_mjd,
                             const dso::TwoPartDate &ut1_mjd) noexcept {
  const dso::TwoPartDate tt_jd = tt_mjd.jd_sofa();
  const dso::TwoPartDate ut1_jd = ut1_mjd.jd_sofa();
  // compute angles:
  // 1. Fundamental Arguments (temporary)
  double fundarg[5];
  iers2010::fundarg(tt_mjd.jcenturies_sinceJ2000(), fundarg);
  // 2. GMST [rad]
  const double gmst = iers2010::sofa::gmst06(ut1_jd._big, ut1_jd._small,
                                             tt_jd._big, tt_jd._small);
  // 3. Doodson variables (stored in beta)
  dso::fundarg2doodson(fundarg, gmst, beta);
  // 4. Variables for frequency (storedin in beta_freq)
  dso::DoodsonNumber::doodson_freq_vars(tt_mjd, beta_freq);

  return 0;
}

int iers2010::Hardisp::admint(const dso::BlqSiteInfo &blq) noexcept {

  // indexes of AllConstituents matching the ones in dso::BlqSiteInfo::Doodsons
  std::array<double, NTIN*3> rl, aim;
  std::array<double, NTIN> rf;

  // match given Doodson numbers to the ones in AllConstituents and compute
  // in radial, west, south components
  int i = 0;
  for (const auto &iddod : dso::BlqSiteInfo::Doodsons) {
    const auto it =
        std::find_if(AllConstituents.begin(), AllConstituents.end(),
                     [](const Constituent &c) { return c.d == iddod; });
    assert(it != AllConstituents.end());
    // RL(K) = AMPIN(LL)*COS(DTR*PHIN(LL))/ABS(TAMP(KK))
    rl[i] = blq.amplitudes[i] * std::cos(blq.phases[i]) / std::abs(it->ampl);
    rl[i + NTIN] = blq.amplitudes[i + NTIN] * std::cos(blq.phases[i + NTIN]) /
                   std::abs(it->ampl);
    rl[i + 2 * NTIN] = blq.amplitudes[i + 2 * NTIN] *
                       std::cos(blq.phases[i + 2 * NTIN]) / std::abs(it->ampl);
    // AIM(K)= AMPIN(LL)*SIN(DTR*PHIN(LL))/ABS(TAMP(KK))
    aim[i] = blq.amplitudes[i] * std::sin(blq.phases[i]) / std::abs(it->ampl);
    aim[i + NTIN] = blq.amplitudes[i + NTIN] * std::sin(blq.phases[i + NTIN]) /
                    std::abs(it->ampl);
    aim[i + 2 * NTIN] = blq.amplitudes[i + 2 * NTIN] *
                        std::sin(blq.phases[i + 2 * NTIN]) / std::abs(it->ampl);
    // frequency
    rf[i] = it->d.frequency(beta_freq);
    // augment counter
    ++i;
  }

  // sort constituents based on RF array; k holds sorted indexes
  {
    std::array<int, NTIN> k;
    std::iota(k.begin(), k.end(), 0);
    std::stable_sort(k.begin(), k.end(), [&rf](std::size_t i1, std::size_t i2) {
      return rf[i1] < rf[i2];
    });
    // based on k, sort/re-order arrays rl and aim, per component
    std::array<double, NTIN> tmp for (int j = 0; j < 3; j++) {
      const int offset = k * NTIN;
      std::memcpy(tmp, rl + offset, sizeof(double) * NTIN);
      for (int l = 0; l < NTIN; l++) {
        rl[l + offset] = tmp[k[i]];
      }
      std::memcpy(tmp, aim + offset, sizeof(double) * NTIN);
      for (int l = 0; l < NTIN; l++) {
        aim[l + offset] = tmp[k[i]];
      }
    }
    // last thing, reorder rf
    std::memcpy(tmp, rf, sizeof(double) * NTIN);
    for (int l = 0; l < NTIN; l++) {
      rf[i] = tmp[k[i]];
    }
  }
  
  // indexes for spline interpolation based on frequencies
  int nlp = 0;
  int ndi = 0;
  int nsd = 0;
  for (i=0; i<NTIN; i++) {
    if (rf[i] < .5e0)
      ++nlp;
    else if (rf[i] < 1.5e0)
      ++ndi;
    else if (rf[i] < 2.5e0)
      ++nsd;
  }

  

}

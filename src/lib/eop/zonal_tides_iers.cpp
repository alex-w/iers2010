#include "doodson.hpp"
#include "eop.hpp"
#include "geodesy/units.hpp"
#include <array>
#include <cmath>

namespace {
struct Table8Data {
  int farg[5];
  /* Units of factors: 10^(-4) sec for UT1, 10^(-5) sec for LOD and 10^(-14)
   * rad/sec for rotational speed (Ï‰)
   */
  double dut1b, dut1c, dlodb, dlodc, domegab, domegac;
  double arg(const double *const fargs) const noexcept {
    return dso::anp<dso::detail::AngleUnit::Radians>(
        farg[0] * fargs[0] + farg[1] * fargs[1] + farg[2] * fargs[2] +
        farg[3] * fargs[3] + farg[4] * fargs[4]);
  }
};

constexpr const std::array<Table8Data, 62> Table8 = {{
    {{1, 0, 2, 2, 2},
     -2.350000e-02,
     +0.000000e+00,
     +2.617000e-01,
     +0.000000e+00,
     -2.209000e-01,
     +0.000000e+00}, // 5.64
    {{2, 0, 2, 0, 1},
     -4.040000e-02,
     +0.000000e+00,
     +3.706000e-01,
     +0.000000e+00,
     -3.128000e-01,
     +0.000000e+00}, // 6.85
    {{2, 0, 2, 0, 2},
     -9.870000e-02,
     +0.000000e+00,
     +9.041000e-01,
     +0.000000e+00,
     -7.630000e-01,
     +0.000000e+00}, // 6.86
    {{0, 0, 2, 2, 1},
     -5.080000e-02,
     +0.000000e+00,
     +4.499000e-01,
     +0.000000e+00,
     -3.797000e-01,
     +0.000000e+00}, // 7.09
    {{0, 0, 2, 2, 2},
     -1.231000e-01,
     +0.000000e+00,
     +1.090400e+00,
     +0.000000e+00,
     -9.203000e-01,
     +0.000000e+00}, // 7.1
    {{1, 0, 2, 0, 0},
     -3.850000e-02,
     +0.000000e+00,
     +2.659000e-01,
     +0.000000e+00,
     -2.244000e-01,
     +0.000000e+00}, // 9.11
    {{1, 0, 2, 0, 1},
     -4.108000e-01,
     +0.000000e+00,
     +2.829800e+00,
     +0.000000e+00,
     -2.388400e+00,
     +0.000000e+00}, // 9.12
    {{1, 0, 2, 0, 2},
     -9.926000e-01,
     +0.000000e+00,
     +6.829100e+00,
     +0.000000e+00,
     -5.763700e+00,
     +0.000000e+00}, // 9.13
    {{3, 0, 0, 0, 0},
     -1.790000e-02,
     +0.000000e+00,
     +1.222000e-01,
     +0.000000e+00,
     -1.031000e-01,
     +0.000000e+00}, // 9.18
    {{-1, 0, 2, 2, 1},
     -8.180000e-02,
     +0.000000e+00,
     +5.384000e-01,
     +0.000000e+00,
     -4.544000e-01,
     +0.000000e+00}, // 9.54
    {{-1, 0, 2, 2, 2},
     -1.974000e-01,
     +0.000000e+00,
     +1.297800e+00,
     +0.000000e+00,
     -1.095300e+00,
     +0.000000e+00}, // 9.56
    {{1, 0, 0, 2, 0},
     -7.610000e-02,
     +0.000000e+00,
     +4.976000e-01,
     +0.000000e+00,
     -4.200000e-01,
     +0.000000e+00}, // 9.61
    {{2, 0, 2, -2, 2},
     +2.160000e-02,
     +0.000000e+00,
     -1.060000e-01,
     +0.000000e+00,
     +8.950000e-02,
     +0.000000e+00}, // 12.81
    {{0, 1, 2, 0, 2},
     +2.540000e-02,
     +0.000000e+00,
     -1.211000e-01,
     +0.000000e+00,
     +1.022000e-01,
     +0.000000e+00}, // 13.17
    {{0, 0, 2, 0, 0},
     -2.989000e-01,
     +0.000000e+00,
     +1.380400e+00,
     +0.000000e+00,
     -1.165000e+00,
     +0.000000e+00}, // 13.61
    {{0, 0, 2, 0, 1},
     -3.187300e+00,
     +2.010000e-01,
     +1.468900e+01,
     +9.266000e-01,
     -1.239740e+01,
     -7.820000e-01}, // 13.63
    {{0, 0, 2, 0, 2},
     -7.846800e+00,
     +5.320000e-01,
     +3.609100e+01,
     +2.446900e+00,
     -3.046060e+01,
     -2.065200e+00}, // 13.66
    {{2, 0, 0, 0, -1},
     +2.160000e-02,
     +0.000000e+00,
     -9.880000e-02,
     +0.000000e+00,
     +8.340000e-02,
     +0.000000e+00}, // 13.75
    {{2, 0, 0, 0, 0},
     -3.384000e-01,
     +0.000000e+00,
     +1.543300e+00,
     +0.000000e+00,
     -1.302500e+00,
     +0.000000e+00}, // 13.78
    {{2, 0, 0, 0, 1},
     +1.790000e-02,
     +0.000000e+00,
     -8.130000e-02,
     +0.000000e+00,
     +6.860000e-02,
     +0.000000e+00}, // 13.81
    {{0, -1, 2, 0, 2},
     -2.440000e-02,
     +0.000000e+00,
     +1.082000e-01,
     +0.000000e+00,
     -9.130000e-02,
     +0.000000e+00}, // 14.19
    {{0, 0, 0, 2, -1},
     +4.700000e-02,
     +0.000000e+00,
     -2.004000e-01,
     +0.000000e+00,
     +1.692000e-01,
     +0.000000e+00}, // 14.73
    {{0, 0, 0, 2, 0},
     -7.341000e-01,
     +0.000000e+00,
     +3.124000e+00,
     +0.000000e+00,
     -2.636700e+00,
     +0.000000e+00}, // 14.77
    {{0, 0, 0, 2, 1},
     -5.260000e-02,
     +0.000000e+00,
     +2.235000e-01,
     +0.000000e+00,
     -1.886000e-01,
     +0.000000e+00}, // 14.8
    {{0, -1, 0, 2, 0},
     -5.080000e-02,
     +0.000000e+00,
     +2.073000e-01,
     +0.000000e+00,
     -1.749000e-01,
     +0.000000e+00}, // 15.39
    {{1, 0, 2, -2, 1},
     +4.980000e-02,
     +0.000000e+00,
     -1.312000e-01,
     +0.000000e+00,
     +1.107000e-01,
     +0.000000e+00}, // 23.86
    {{1, 0, 2, -2, 2},
     +1.006000e-01,
     +0.000000e+00,
     -2.640000e-01,
     +0.000000e+00,
     +2.228000e-01,
     +0.000000e+00}, // 23.94
    {{1, 1, 0, 0, 0},
     +3.950000e-02,
     +0.000000e+00,
     -9.680000e-02,
     +0.000000e+00,
     +8.170000e-02,
     +0.000000e+00}, // 25.62
    {{-1, 0, 2, 0, 0},
     +4.700000e-02,
     +0.000000e+00,
     -1.099000e-01,
     +0.000000e+00,
     +9.270000e-02,
     +0.000000e+00}, // 26.88
    {{-1, 0, 2, 0, 1},
     +1.767000e-01,
     +0.000000e+00,
     -4.115000e-01,
     +0.000000e+00,
     +3.473000e-01,
     +0.000000e+00}, // 26.98
    {{-1, 0, 2, 0, 2},
     +4.352000e-01,
     +0.000000e+00,
     -1.009300e+00,
     +0.000000e+00,
     +8.519000e-01,
     +0.000000e+00}, // 27.09
    {{1, 0, 0, 0, -1},
     +5.339000e-01,
     +0.000000e+00,
     -1.222400e+00,
     +0.000000e+00,
     +1.031700e+00,
     +0.000000e+00}, // 27.44
    {{1, 0, 0, 0, 0},
     -8.404600e+00,
     +2.500000e-01,
     +1.916470e+01,
     +5.701000e-01,
     -1.617490e+01,
     -4.811000e-01}, // 27.56
    {{1, 0, 0, 0, 1},
     +5.443000e-01,
     +0.000000e+00,
     -1.236000e+00,
     +0.000000e+00,
     +1.043200e+00,
     +0.000000e+00}, // 27.67
    {{0, 0, 0, 1, 0},
     +4.700000e-02,
     +0.000000e+00,
     -1.000000e-01,
     +0.000000e+00,
     +8.440000e-02,
     +0.000000e+00}, // 29.53
    {{1, -1, 0, 0, 0},
     -5.550000e-02,
     +0.000000e+00,
     +1.169000e-01,
     +0.000000e+00,
     -9.870000e-02,
     +0.000000e+00}, // 29.8
    {{-1, 0, 0, 2, -1},
     +1.175000e-01,
     +0.000000e+00,
     -2.332000e-01,
     +0.000000e+00,
     +1.968000e-01,
     +0.000000e+00}, // 31.66
    {{-1, 0, 0, 2, 0},
     -1.823600e+00,
     +0.000000e+00,
     +3.601800e+00,
     +0.000000e+00,
     -3.039900e+00,
     +0.000000e+00}, // 31.81
    {{-1, 0, 0, 2, 1},
     +1.316000e-01,
     +0.000000e+00,
     -2.587000e-01,
     +0.000000e+00,
     +2.183000e-01,
     +0.000000e+00}, // 31.96
    {{1, 0, -2, 2, -1},
     +1.790000e-02,
     +0.000000e+00,
     -3.440000e-02,
     +0.000000e+00,
     +2.900000e-02,
     +0.000000e+00}, // 32.61
    {{-1, -1, 0, 2, 0},
     -8.550000e-02,
     +0.000000e+00,
     +1.542000e-01,
     +0.000000e+00,
     -1.302000e-01,
     +0.000000e+00}, // 34.85
    {{0, 2, 2, -2, 2},
     -5.730000e-02,
     +0.000000e+00,
     +3.950000e-02,
     +0.000000e+00,
     -3.330000e-02,
     +0.000000e+00}, // 91.31
    {{0, 1, 2, -2, 1},
     +3.290000e-02,
     +0.000000e+00,
     -1.730000e-02,
     +0.000000e+00,
     +1.460000e-02,
     +0.000000e+00}, // 119.61
    {{0, 1, 2, -2, 2},
     -1.884700e+00,
     +0.000000e+00,
     +9.726000e-01,
     +0.000000e+00,
     -8.209000e-01,
     +0.000000e+00}, // 121.75
    {{0, 0, 2, -2, 0},
     +2.510000e-01,
     +0.000000e+00,
     -9.100000e-02,
     +0.000000e+00,
     +7.680000e-02,
     +0.000000e+00}, // 173.31
    {{0, 0, 2, -2, 1},
     +1.170300e+00,
     +0.000000e+00,
     -4.135000e-01,
     +0.000000e+00,
     +3.490000e-01,
     +0.000000e+00}, // 177.84
    {{0, 0, 2, -2, 2},
     -4.971740e+01,
     +4.330000e-01,
     +1.710560e+01,
     +1.490000e-01,
     -1.443700e+01,
     -1.257000e-01}, // 182.62
    {{0, 2, 0, 0, 0},
     -1.936000e-01,
     +0.000000e+00,
     +6.660000e-02,
     +0.000000e+00,
     -5.620000e-02,
     +0.000000e+00}, // 182.63
    {{2, 0, 0, -2, -1},
     +4.890000e-02,
     +0.000000e+00,
     -1.540000e-02,
     +0.000000e+00,
     +1.300000e-02,
     +0.000000e+00}, // 199.84
    {{2, 0, 0, -2, 0},
     -5.471000e-01,
     +0.000000e+00,
     +1.670000e-01,
     +0.000000e+00,
     -1.409000e-01,
     +0.000000e+00}, // 205.89
    {{2, 0, 0, -2, 1},
     +3.670000e-02,
     +0.000000e+00,
     -1.080000e-02,
     +0.000000e+00,
     +9.200000e-03,
     +0.000000e+00}, // 212.32
    {{0, -1, 2, -2, 1},
     -4.510000e-02,
     +0.000000e+00,
     +8.200000e-03,
     +0.000000e+00,
     -6.900000e-03,
     +0.000000e+00}, // 346.6
    {{0, 1, 0, 0, -1},
     +9.210000e-02,
     +0.000000e+00,
     -1.670000e-02,
     +0.000000e+00,
     +1.410000e-02,
     +0.000000e+00}, // 346.64
    {{0, -1, 2, -2, 2},
     +8.281000e-01,
     +0.000000e+00,
     -1.425000e-01,
     +0.000000e+00,
     +1.202000e-01,
     +0.000000e+00}, // 365.22
    {{0, 1, 0, 0, 0},
     -1.588870e+01,
     +1.530000e-01,
     +2.733200e+00,
     +2.630000e-02,
     -2.306800e+00,
     -2.220000e-02}, // 365.26
    {{0, 1, 0, 0, 1},
     -1.382000e-01,
     +0.000000e+00,
     +2.250000e-02,
     +0.000000e+00,
     -1.900000e-02,
     +0.000000e+00}, // 386.0
    {{1, 0, 0, -1, 0},
     +3.480000e-02,
     +0.000000e+00,
     -5.300000e-03,
     +0.000000e+00,
     +4.500000e-03,
     +0.000000e+00}, // 411.78
    {{2, 0, -2, 0, 0},
     -1.372000e-01,
     +0.000000e+00,
     -7.900000e-03,
     +0.000000e+00,
     +6.600000e-03,
     +0.000000e+00}, //-1095.18
    {{-2, 0, 2, 0, 1},
     +4.211000e-01,
     +0.000000e+00,
     -2.030000e-02,
     +0.000000e+00,
     +1.710000e-02,
     +0.000000e+00}, // 1305.48
    {{-1, 1, 0, 1, 0},
     -4.040000e-02,
     +0.000000e+00,
     +8.000000e-04,
     +0.000000e+00,
     -7.000000e-04,
     +0.000000e+00}, // 3232.86
    {{0, 0, 0, 0, 2},
     +7.899800e+00,
     +0.000000e+00,
     +1.460000e-01,
     +0.000000e+00,
     -1.232000e-01,
     +0.000000e+00}, //-3399.19
    {{0, 0, 0, 0, 1},
     -1.617268e+03,
     +0.000000e+00,
     -1.494710e+01,
     +0.000000e+00,
     +1.261530e+01,
     +0.000000e+00}, //-6798.38
}};
} /* unnamed namespace */

int dso::deop_zonal_tide(const double *const fargs, double &dut1, double &dlod,
                         double &domega) noexcept {

  /* set corrections to zero */
  dut1 = dlod = domega = 0e0;
  for (const auto &entry : Table8) {
    const double xi = dso::anp(entry.arg(fargs));
    const double sa = std::sin(xi);
    const double ca = std::cos(xi);
    dut1 += entry.dut1b * sa + entry.dut1c * ca;
    dlod += entry.dlodb * ca + entry.dlodc * sa;
    domega += entry.domegab * ca + entry.domegac * sa;
  }

  /* scale */
  dut1 *= 1e2;
  dlod *= 10e0;

  return 0;
}

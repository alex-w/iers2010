#include "doodson.hpp"
#include "eop.hpp"
#include <array>
#include <cmath>

namespace {
  struct Table8Data {
    /* Doodson numbers from IERS 2010, Table 8.2a */
    dso::DoodsonConstituent dn;
    /* cooresponding Coefficients of sin(argument) and cos(argument), 
     * IERS 2010, Table 8.2a 
     */
    double xs,xc,ys,yc;
  };

  /** Table 8.2ab: Coefficients of sin(argument) and cos(argument) of 
   * semidiurnal variations in pole coordinates xp and yp caused by ocean 
   * tides. The units are Âµas;
   */
  constexpr const std::array<Table8Data, 71> Table82 = {
      {{{1, -4, 2, 1, 0, 0},
        +0.00000e+00,
        +9.00000e-01,
        -9.00000e-01,
        -1.00000e-01},
       {{1, -3, 0, 2, -1, 0},
        +1.00000e-01,
        +6.00000e-01,
        -6.00000e-01,
        +1.00000e-01},
       {{1, -3, 0, 2, 0, 0},
        +3.00000e-01,
        +3.40000e+00,
        -3.40000e+00,
        +3.00000e-01},
       {{1, -3, 2, 0, -1, 0},
        +1.00000e-01,
        +8.00000e-01,
        -8.00000e-01,
        +1.00000e-01},
       {{1, -3, 2, 0, 0, 0},
        +5.00000e-01,
        +4.20000e+00,
        -4.10000e+00,
        +5.00000e-01},
       {{1, -2, 0, 1, -1, 0},
        +1.20000e+00,
        +5.00000e+00,
        -5.00000e+00,
        +1.20000e+00},
       {{1, -2, 0, 1, 0, 0},
        +6.20000e+00,
        +2.63000e+01,
        -2.63000e+01,
        +6.20000e+00},
       {{1, -2, 2, -1, -1, 0},
        +2.00000e-01,
        +9.00000e-01,
        -9.00000e-01,
        +2.00000e-01},
       {{1, -2, 2, -1, 0, 0},
        +1.30000e+00,
        +5.00000e+00,
        -5.00000e+00,
        +1.30000e+00},
       {{1, -1, 0, 0, -2, 0},
        -3.00000e-01,
        -8.00000e-01,
        +8.00000e-01,
        -3.00000e-01},
       {{1, -1, 0, 0, -1, 0},
        +9.20000e+00,
        +2.51000e+01,
        -2.51000e+01,
        +9.20000e+00},
       {{1, -1, 0, 0, 0, 0},
        +4.88000e+01,
        +1.32900e+02,
        -1.32900e+02,
        +4.88000e+01},
       {{1, -1, 0, 2, 0, 0},
        -3.00000e-01,
        -9.00000e-01,
        +9.00000e-01,
        -3.00000e-01},
       {{1, -1, 2, 0, 0, 0},
        -7.00000e-01,
        -1.70000e+00,
        +1.70000e+00,
        -7.00000e-01},
       {{1, 0, -2, 1, 0, 0},
        -4.00000e-01,
        -9.00000e-01,
        +9.00000e-01,
        -4.00000e-01},
       {{1, 0, 0, -1, -1, 0},
        -3.00000e-01,
        -6.00000e-01,
        +6.00000e-01,
        -3.00000e-01},
       {{1, 0, 0, -1, 0, 0},
        -1.60000e+00,
        -3.50000e+00,
        +3.50000e+00,
        -1.60000e+00},
       {{1, 0, 0, 1, 0, 0},
        -4.50000e+00,
        -9.60000e+00,
        +9.60000e+00,
        -4.50000e+00},
       {{1, 0, 0, 1, 1, 0},
        -9.00000e-01,
        -1.90000e+00,
        +1.90000e+00,
        -9.00000e-01},
       {{1, 0, 2, -1, 0, 0},
        -9.00000e-01,
        -1.80000e+00,
        +1.80000e+00,
        -9.00000e-01},
       {{1, 1, -3, 0, 0, 1},
        +1.50000e+00,
        +3.00000e+00,
        -3.00000e+00,
        +1.50000e+00},
       {{1, 1, -2, 0, -1, 0},
        -3.00000e-01,
        -6.00000e-01,
        +6.00000e-01,
        -3.00000e-01},
       {{1, 1, -2, 0, 0, 0},
        +2.61000e+01,
        +5.12000e+01,
        -5.12000e+01,
        +2.61000e+01},
       {{1, 1, -1, 0, 0, -1},
        -2.00000e-01,
        -4.00000e-01,
        +4.00000e-01,
        -2.00000e-01},
       {{1, 1, -1, 0, 0, 1},
        -6.00000e-01,
        -1.20000e+00,
        +1.20000e+00,
        -6.00000e-01},
       {{1, 1, 0, 0, -1, 0},
        +1.50000e+00,
        +3.00000e+00,
        -3.00000e+00,
        +1.50000e+00},
       {{1, 1, 0, 0, 0, 0},
        -7.75000e+01,
        -1.51700e+02,
        +1.51700e+02,
        -7.75000e+01},
       {{1, 1, 0, 0, 1, 0},
        -1.05000e+01,
        -2.06000e+01,
        +2.06000e+01,
        -1.05000e+01},
       {{1, 1, 0, 0, 2, 0},
        +2.00000e-01,
        +4.00000e-01,
        -4.00000e-01,
        +2.00000e-01},
       {{1, 1, 1, 0, 0, -1},
        -6.00000e-01,
        -1.20000e+00,
        +1.20000e+00,
        -6.00000e-01},
       {{1, 1, 2, 0, 0, 0},
        -1.10000e+00,
        -2.10000e+00,
        +2.10000e+00,
        -1.10000e+00},
       {{1, 2, -2, 1, 0, 0},
        -7.00000e-01,
        -1.40000e+00,
        +1.40000e+00,
        -7.00000e-01},
       {{1, 2, 0, -1, 0, 0},
        -3.50000e+00,
        -7.30000e+00,
        +7.30000e+00,
        -3.50000e+00},
       {{1, 2, 0, -1, 1, 0},
        -7.00000e-01,
        -1.40000e+00,
        +1.40000e+00,
        -7.00000e-01},
       {{1, 3, -2, 0, 0, 0},
        -4.00000e-01,
        -1.10000e+00,
        +1.10000e+00,
        -4.00000e-01},
       {{1, 3, 0, -2, 0, 0},
        -2.00000e-01,
        -5.00000e-01,
        +5.00000e-01,
        -2.00000e-01},
       {{1, 3, 0, 0, 0, 0},
        -1.10000e+00,
        -3.40000e+00,
        +3.40000e+00,
        -1.10000e+00},
       {{1, 3, 0, 0, 1, 0},
        -7.00000e-01,
        -2.20000e+00,
        +2.20000e+00,
        -7.00000e-01},
       {{1, 3, 0, 0, 2, 0},
        -1.00000e-01,
        -5.00000e-01,
        +5.00000e-01,
        -1.00000e-01},
       {{1, 4, 0, -1, 0, 0},
        +0.00000e+00,
        -6.00000e-01,
        +6.00000e-01,
        +0.00000e+00},
       {{1, 4, 0, -1, 1, 0},
        +0.00000e+00,
        -4.00000e-01,
        +4.00000e-01,
        +0.00000e+00},
      {{2, -3, 0, 3, 0, 0},
        -5.00000e-01,
        +0.00000e+00,
        +6.00000e-01,
        +2.00000e-01},
       {{2, -3, 2, 1, 0, 0},
        -1.30000e+00,
        -2.00000e-01,
        +1.50000e+00,
        +7.00000e-01},
       {{2, -2, 0, 2, 0, 0},
        -6.10000e+00,
        -1.60000e+00,
        +3.10000e+00,
        +3.40000e+00},
       {{2, -2, 2, 0, 0, 0},
        -7.60000e+00,
        -2.00000e+00,
        +3.40000e+00,
        +4.20000e+00},
       {{2, -2, 3, 0, 0, -1},
        -5.00000e-01,
        -1.00000e-01,
        +2.00000e-01,
        +3.00000e-01},
       {{2, -1, -1, 1, 0, 1},
        +5.00000e-01,
        +1.00000e-01,
        -1.00000e-01,
        -3.00000e-01},
       {{2, -1, 0, 1, -1, 0},
        +2.10000e+00,
        +5.00000e-01,
        -4.00000e-01,
        -1.20000e+00},
       {{2, -1, 0, 1, 0, 0},
        -5.69000e+01,
        -1.29000e+01,
        +1.11000e+01,
        +3.29000e+01},
       {{2, -1, 1, 1, 0, -1},
        -5.00000e-01,
        -1.00000e-01,
        +1.00000e-01,
        +3.00000e-01},
       {{2, -1, 2, -1, 0, 0},
        -1.10000e+01,
        -2.40000e+00,
        +1.90000e+00,
        +6.40000e+00},
       {{2, -1, 3, -1, 0, -1},
        -5.00000e-01,
        -1.00000e-01,
        +1.00000e-01,
        +3.00000e-01},
       {{2, 0, -2, 2, 0, 0},
        +1.00000e+00,
        +1.00000e-01,
        -1.00000e-01,
        -6.00000e-01},
       {{2, 0, -1, 0, 0, 1},
        +1.10000e+00,
        +1.00000e-01,
        -1.00000e-01,
        -7.00000e-01},
       {{2, 0, 0, 0, -1, 0},
        +1.23000e+01,
        +1.00000e+00,
        -1.40000e+00,
        -7.30000e+00},
       {{2, 0, 0, 0, 0, 0},
        -3.30200e+02,
        -2.70000e+01,
        +3.76000e+01,
        +1.95900e+02},
       {{2, 0, 1, 0, 0, -1},
        -1.00000e+00,
        -1.00000e-01,
        +1.00000e-01,
        +6.00000e-01},
       {{2, 1, -2, 1, 0, 0},
        +2.50000e+00,
        -3.00000e-01,
        -4.00000e-01,
        -1.50000e+00},
       {{2, 1, 0, -1, 0, 0},
        +9.40000e+00,
        -1.40000e+00,
        -1.90000e+00,
        -5.60000e+00},
       {{2, 1, 0, 1, 0, 0},
        -2.40000e+00,
        +4.00000e-01,
        +5.00000e-01,
        +1.40000e+00},
       {{2, 1, 0, 1, 1, 0},
        -1.00000e+00,
        +2.00000e-01,
        +2.00000e-01,
        +6.00000e-01},
       {{2, 2, -3, 0, 0, 1},
        -8.50000e+00,
        +3.50000e+00,
        +3.30000e+00,
        +5.10000e+00},
       {{2, 2, -2, 0, 0, 0},
        -1.44100e+02,
        +6.36000e+01,
        +5.92000e+01,
        +8.66000e+01},
       {{2, 2, -1, 0, 0, -1},
        +1.20000e+00,
        -6.00000e-01,
        -5.00000e-01,
        -7.00000e-01},
       {{2, 2, 0, 0, -1, 0},
        +5.00000e-01,
        -2.00000e-01,
        -2.00000e-01,
        -3.00000e-01},
       {{2, 2, 0, 0, 0, 0},
        -3.85000e+01,
        +1.91000e+01,
        +1.77000e+01,
        +2.31000e+01},
       {{2, 2, 0, 0, 1, 0},
        -1.14000e+01,
        +5.80000e+00,
        +5.30000e+00,
        +6.90000e+00},
       {{2, 2, 0, 0, 2, 0},
        -1.20000e+00,
        +6.00000e-01,
        +6.00000e-01,
        +7.00000e-01},
       {{2, 3, 0, -1, 0, 0},
        -1.80000e+00,
        +1.80000e+00,
        +1.70000e+00,
        +1.00000e+00},
       {{2, 3, 0, -1, 1, 0},
        -8.00000e-01,
        +8.00000e-01,
        +8.00000e-01,
        +5.00000e-01},
       {{2, 4, 0, 0, 0, 0},
        -3.00000e-01,
        +6.00000e-01,
        +7.00000e-01,
        +2.00000e-01}}}; /* Table */

} /* unnamed namespace */

int dso::xypole_oceantide(const double *const fargs, double gmst, double &xp,
                      double &yp) noexcept {
  /* get Doodson arguments from Delaunay arguments and GMST */
  double dargs[6];
  dso::delaunay2doodson(fargs, gmst, dargs);
  /* these will never change */
  const double *__restrict__ f = dargs;

  /* set corrections to zero */
  xp = yp = 0e0;
  for (const auto &entry : Table82) {
    const double arg = entry.dn.argument(f);
    const double sa = std::sin(arg);
    const double ca = std::cos(arg);
    xp += sa * entry.xs + ca * entry.xc; /* microarcseconds */
    yp += sa * entry.ys + ca * entry.yc; /* microarcseconds */
  }

  return 0;
}
